

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Tue Feb 18 15:56:25 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F877
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     9                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    20                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    21                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2,group=1
    22                           	dabs	1,0x7E,2
    23     0000                     
    24                           ; Generated 12/10/2023 GMT
    25                           ; 
    26                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution. Publication is not required when
    40                           ;        this file is used in an embedded application.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F877 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58     0004                     fsr             equ	4
    59     0004                     fsr0            equ	4
    60     0000                     indf            equ	0
    61     0000                     indf0           equ	0
    62     0002                     pc              equ	2
    63     0002                     pcl             equ	2
    64     000A                     pclath          equ	10
    65     0003                     status          equ	3
    66     0000                     INDF            equ	0	;# 
    67     0001                     TMR0            equ	1	;# 
    68     0002                     PCL             equ	2	;# 
    69     0003                     STATUS          equ	3	;# 
    70     0004                     FSR             equ	4	;# 
    71     0005                     PORTA           equ	5	;# 
    72     0006                     PORTB           equ	6	;# 
    73     0007                     PORTC           equ	7	;# 
    74     0008                     PORTD           equ	8	;# 
    75     0009                     PORTE           equ	9	;# 
    76     000A                     PCLATH          equ	10	;# 
    77     000B                     INTCON          equ	11	;# 
    78     000C                     PIR1            equ	12	;# 
    79     000D                     PIR2            equ	13	;# 
    80     000E                     TMR1            equ	14	;# 
    81     000E                     TMR1L           equ	14	;# 
    82     000F                     TMR1H           equ	15	;# 
    83     0010                     T1CON           equ	16	;# 
    84     0011                     TMR2            equ	17	;# 
    85     0012                     T2CON           equ	18	;# 
    86     0013                     SSPBUF          equ	19	;# 
    87     0014                     SSPCON          equ	20	;# 
    88     0015                     CCPR1           equ	21	;# 
    89     0015                     CCPR1L          equ	21	;# 
    90     0016                     CCPR1H          equ	22	;# 
    91     0017                     CCP1CON         equ	23	;# 
    92     0018                     RCSTA           equ	24	;# 
    93     0019                     TXREG           equ	25	;# 
    94     001A                     RCREG           equ	26	;# 
    95     001B                     CCPR2           equ	27	;# 
    96     001B                     CCPR2L          equ	27	;# 
    97     001C                     CCPR2H          equ	28	;# 
    98     001D                     CCP2CON         equ	29	;# 
    99     001E                     ADRESH          equ	30	;# 
   100     001F                     ADCON0          equ	31	;# 
   101     0081                     OPTION_REG      equ	129	;# 
   102     0085                     TRISA           equ	133	;# 
   103     0086                     TRISB           equ	134	;# 
   104     0087                     TRISC           equ	135	;# 
   105     0088                     TRISD           equ	136	;# 
   106     0089                     TRISE           equ	137	;# 
   107     008C                     PIE1            equ	140	;# 
   108     008D                     PIE2            equ	141	;# 
   109     008E                     PCON            equ	142	;# 
   110     0091                     SSPCON2         equ	145	;# 
   111     0092                     PR2             equ	146	;# 
   112     0093                     SSPADD          equ	147	;# 
   113     0094                     SSPSTAT         equ	148	;# 
   114     0098                     TXSTA           equ	152	;# 
   115     0099                     SPBRG           equ	153	;# 
   116     009E                     ADRESL          equ	158	;# 
   117     009F                     ADCON1          equ	159	;# 
   118     010C                     EEDATA          equ	268	;# 
   119     010D                     EEADR           equ	269	;# 
   120     010E                     EEDATH          equ	270	;# 
   121     010F                     EEADRH          equ	271	;# 
   122     018C                     EECON1          equ	396	;# 
   123     018D                     EECON2          equ	397	;# 
   124     0000                     INDF            equ	0	;# 
   125     0001                     TMR0            equ	1	;# 
   126     0002                     PCL             equ	2	;# 
   127     0003                     STATUS          equ	3	;# 
   128     0004                     FSR             equ	4	;# 
   129     0005                     PORTA           equ	5	;# 
   130     0006                     PORTB           equ	6	;# 
   131     0007                     PORTC           equ	7	;# 
   132     0008                     PORTD           equ	8	;# 
   133     0009                     PORTE           equ	9	;# 
   134     000A                     PCLATH          equ	10	;# 
   135     000B                     INTCON          equ	11	;# 
   136     000C                     PIR1            equ	12	;# 
   137     000D                     PIR2            equ	13	;# 
   138     000E                     TMR1            equ	14	;# 
   139     000E                     TMR1L           equ	14	;# 
   140     000F                     TMR1H           equ	15	;# 
   141     0010                     T1CON           equ	16	;# 
   142     0011                     TMR2            equ	17	;# 
   143     0012                     T2CON           equ	18	;# 
   144     0013                     SSPBUF          equ	19	;# 
   145     0014                     SSPCON          equ	20	;# 
   146     0015                     CCPR1           equ	21	;# 
   147     0015                     CCPR1L          equ	21	;# 
   148     0016                     CCPR1H          equ	22	;# 
   149     0017                     CCP1CON         equ	23	;# 
   150     0018                     RCSTA           equ	24	;# 
   151     0019                     TXREG           equ	25	;# 
   152     001A                     RCREG           equ	26	;# 
   153     001B                     CCPR2           equ	27	;# 
   154     001B                     CCPR2L          equ	27	;# 
   155     001C                     CCPR2H          equ	28	;# 
   156     001D                     CCP2CON         equ	29	;# 
   157     001E                     ADRESH          equ	30	;# 
   158     001F                     ADCON0          equ	31	;# 
   159     0081                     OPTION_REG      equ	129	;# 
   160     0085                     TRISA           equ	133	;# 
   161     0086                     TRISB           equ	134	;# 
   162     0087                     TRISC           equ	135	;# 
   163     0088                     TRISD           equ	136	;# 
   164     0089                     TRISE           equ	137	;# 
   165     008C                     PIE1            equ	140	;# 
   166     008D                     PIE2            equ	141	;# 
   167     008E                     PCON            equ	142	;# 
   168     0091                     SSPCON2         equ	145	;# 
   169     0092                     PR2             equ	146	;# 
   170     0093                     SSPADD          equ	147	;# 
   171     0094                     SSPSTAT         equ	148	;# 
   172     0098                     TXSTA           equ	152	;# 
   173     0099                     SPBRG           equ	153	;# 
   174     009E                     ADRESL          equ	158	;# 
   175     009F                     ADCON1          equ	159	;# 
   176     010C                     EEDATA          equ	268	;# 
   177     010D                     EEADR           equ	269	;# 
   178     010E                     EEDATH          equ	270	;# 
   179     010F                     EEADRH          equ	271	;# 
   180     018C                     EECON1          equ	396	;# 
   181     018D                     EECON2          equ	397	;# 
   182     0013                     _SSPBUF         set	19
   183     0014                     _SSPCON         set	20
   184     0091                     _SSPCON2bits    set	145
   185     0094                     _SSPSTAT        set	148
   186     0093                     _SSPADD         set	147
   187     0091                     _SSPCON2        set	145
   188     04A0                     _BF             set	1184
   189     048A                     _PEN            set	1162
   190     0488                     _SEN            set	1160
   191                           
   192                           	psect	strings
   193     0003                     __pstrings:
   194     0003                     stringtab:
   195     0003                     __stringtab:
   196     0003                     stringcode:	
   197                           ;	String table - string pointers are 1 byte each
   198                           
   199     0003                     stringdir:
   200     0003  3000               	movlw	high stringdir
   201     0004  008A               	movwf	10
   202     0005  0804               	movf	4,w
   203     0006  0A84               	incf	4,f
   204     0007  0782               	addwf	2,f
   205     0008                     __stringbase:
   206     0008  3400               	retlw	0
   207     0009                     __end_of__stringtab:
   208     0009                     STR_1:
   209     0009  344A               	retlw	74	;'J'
   210     000A  346F               	retlw	111	;'o'
   211     000B  3461               	retlw	97	;'a'
   212     000C  346F               	retlw	111	;'o'
   213     000D  3420               	retlw	32	;' '
   214     000E  3450               	retlw	80	;'P'
   215     000F  3465               	retlw	101	;'e'
   216     0010  3464               	retlw	100	;'d'
   217     0011  3472               	retlw	114	;'r'
   218     0012  346F               	retlw	111	;'o'
   219     0013  3400               	retlw	0
   220     0014                     STR_2:
   221     0014  3432               	retlw	50	;'2'
   222     0015  3430               	retlw	48	;'0'
   223     0016  3439               	retlw	57	;'9'
   224     0017  3435               	retlw	53	;'5'
   225     0018  3438               	retlw	56	;'8'
   226     0019  3438               	retlw	56	;'8'
   227     001A  3432               	retlw	50	;'2'
   228     001B  3400               	retlw	0
   229                           
   230                           	psect	cinit
   231     07FC                     start_initialization:	
   232                           ; #config settings
   233                           
   234     07FC                     __initialization:
   235     07FC                     end_of_initialization:	
   236                           ;End of C runtime variable initialization code
   237                           
   238     07FC                     __end_of__initialization:
   239     07FC  0183               	clrf	3
   240     07FD  120A  118A  2EA1   	ljmp	_main	;jump to C main() function
   241                           
   242                           	psect	cstackCOMMON
   243     0070                     __pcstackCOMMON:
   244     0070                     ?_LCD_init:
   245     0070                     ?_LCD_backlight:	
   246                           ; 1 bytes @ 0x0
   247                           
   248     0070                     ?_main:	
   249                           ; 1 bytes @ 0x0
   250                           
   251     0070                     ?_I2C_Master_Start:	
   252                           ; 1 bytes @ 0x0
   253                           
   254     0070                     ?_I2C_Master_Stop:	
   255                           ; 1 bytes @ 0x0
   256                           
   257     0070                     ?_I2C_Master_Write:	
   258                           ; 1 bytes @ 0x0
   259                           
   260     0070                     ?_LCD_command:	
   261                           ; 1 bytes @ 0x0
   262                           
   263     0070                     ?_LCD_data:	
   264                           ; 1 bytes @ 0x0
   265                           
   266     0070                     ?___lldiv:	
   267                           ; 1 bytes @ 0x0
   268                           
   269     0070                     I2C_Master_Write@data:	
   270                           ; 4 bytes @ 0x0
   271                           
   272     0070                     ___lldiv@divisor:	
   273                           ; 1 bytes @ 0x0
   274                           
   275     0070                     ??_I2C_Master_Start:	
   276                           ; 4 bytes @ 0x0
   277                           
   278     0070                     ??_I2C_Master_Stop:	
   279                           ; 1 bytes @ 0x0
   280                           
   281     0070                     ??_I2C_Master_Write:	
   282                           ; 1 bytes @ 0x0
   283                           
   284                           
   285                           ; 1 bytes @ 0x0
   286     0070                     	ds	1
   287     0071                     ?_LCD_sendNibble:
   288     0071                     LCD_sendNibble@rs:	
   289                           ; 1 bytes @ 0x1
   290                           
   291     0071                     LCD_backlight@state:	
   292                           ; 1 bytes @ 0x1
   293                           
   294     0071                     ??_LCD_backlight:	
   295                           ; 1 bytes @ 0x1
   296                           
   297                           
   298                           ; 1 bytes @ 0x1
   299     0071                     	ds	1
   300     0072                     _LCD_backlight$132:
   301     0072                     ??_LCD_sendNibble:	
   302                           ; 2 bytes @ 0x2
   303                           
   304                           
   305                           ; 1 bytes @ 0x2
   306     0072                     	ds	1
   307     0073                     LCD_sendNibble@nibble:
   308                           
   309                           ; 1 bytes @ 0x3
   310     0073                     	ds	1
   311     0074                     LCD_sendNibble@data:
   312     0074                     LCD_backlight@data:	
   313                           ; 1 bytes @ 0x4
   314                           
   315     0074                     ___lldiv@dividend:	
   316                           ; 1 bytes @ 0x4
   317                           
   318                           
   319                           ; 4 bytes @ 0x4
   320     0074                     	ds	1
   321     0075                     ?_LCD_sendByte:
   322     0075                     LCD_sendByte@rs:	
   323                           ; 1 bytes @ 0x5
   324                           
   325                           
   326                           ; 1 bytes @ 0x5
   327     0075                     	ds	1
   328     0076                     ??_LCD_sendByte:
   329                           
   330                           ; 1 bytes @ 0x6
   331     0076                     	ds	1
   332     0077                     LCD_sendByte@byte:
   333                           
   334                           ; 1 bytes @ 0x7
   335     0077                     	ds	1
   336     0078                     ??_LCD_command:
   337     0078                     ??_LCD_data:	
   338                           ; 1 bytes @ 0x8
   339                           
   340     0078                     ??___lldiv:	
   341                           ; 1 bytes @ 0x8
   342                           
   343                           
   344                           ; 1 bytes @ 0x8
   345     0078                     	ds	1
   346     0079                     ___lldiv@quotient:
   347                           
   348                           ; 4 bytes @ 0x9
   349     0079                     	ds	1
   350     007A                     LCD_command@cmd:
   351     007A                     LCD_data@data:	
   352                           ; 1 bytes @ 0xA
   353                           
   354                           
   355                           ; 1 bytes @ 0xA
   356     007A                     	ds	1
   357     007B                     ?_LCD_setCursor:
   358     007B                     ?_LCD_print:	
   359                           ; 1 bytes @ 0xB
   360                           
   361     007B                     LCD_setCursor@coluna:	
   362                           ; 1 bytes @ 0xB
   363                           
   364     007B                     LCD_print@str:	
   365                           ; 1 bytes @ 0xB
   366                           
   367     007B                     ??_LCD_init:	
   368                           ; 1 bytes @ 0xB
   369                           
   370                           
   371                           ; 1 bytes @ 0xB
   372     007B                     	ds	1
   373     007C                     ??_LCD_setCursor:
   374     007C                     ??_LCD_print:	
   375                           ; 1 bytes @ 0xC
   376                           
   377                           
   378                           ; 1 bytes @ 0xC
   379     007C                     	ds	1
   380     007D                     ___lldiv@counter:
   381                           
   382                           ; 1 bytes @ 0xD
   383     007D                     	ds	1
   384     007E                     ??_main:
   385                           
   386                           	psect	cstackBANK0
   387     0020                     __pcstackBANK0:	
   388                           ; 1 bytes @ 0xE
   389                           
   390     0020                     ?_I2C_Master_Init:
   391     0020                     LCD_setCursor@linha:	
   392                           ; 1 bytes @ 0x0
   393                           
   394     0020                     I2C_Master_Init@c:	
   395                           ; 1 bytes @ 0x0
   396                           
   397                           
   398                           ; 4 bytes @ 0x0
   399     0020                     	ds	1
   400     0021                     _LCD_setCursor$125:
   401                           
   402                           ; 2 bytes @ 0x1
   403     0021                     	ds	2
   404     0023                     LCD_setCursor@pos:
   405                           
   406                           ; 1 bytes @ 0x3
   407     0023                     	ds	1
   408     0024                     ??_I2C_Master_Init:
   409                           
   410                           ; 1 bytes @ 0x4
   411     0024                     	ds	4
   412                           
   413                           	psect	maintext
   414     06A1                     __pmaintext:	
   415 ;;
   416 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   417 ;;
   418 ;; *************** function _main *****************
   419 ;; Defined at:
   420 ;;		line 35 in file "atividade13.c"
   421 ;; Parameters:    Size  Location     Type
   422 ;;		None
   423 ;; Auto vars:     Size  Location     Type
   424 ;;		None
   425 ;; Return value:  Size  Location     Type
   426 ;;                  1    wreg      void 
   427 ;; Registers used:
   428 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   429 ;; Tracked objects:
   430 ;;		On entry : B00/0
   431 ;;		On exit  : 0/0
   432 ;;		Unchanged: 0/0
   433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   434 ;;      Params:         0       0       0       0       0
   435 ;;      Locals:         0       0       0       0       0
   436 ;;      Temps:          0       0       0       0       0
   437 ;;      Totals:         0       0       0       0       0
   438 ;;Total ram usage:        0 bytes
   439 ;; Hardware stack levels required when called: 6
   440 ;; This function calls:
   441 ;;		_I2C_Master_Init
   442 ;;		_LCD_backlight
   443 ;;		_LCD_init
   444 ;;		_LCD_print
   445 ;;		_LCD_setCursor
   446 ;; This function is called by:
   447 ;;		Startup code after reset
   448 ;; This function uses a non-reentrant model
   449 ;;
   450                           
   451     06A1                     _main:	
   452                           ;psect for function _main
   453                           
   454     06A1                     l914:	
   455                           ;incstack = 0
   456                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   457                           
   458                           
   459                           ;atividade13.c: 36:     I2C_Master_Init(100000);
   460     06A1  3000               	movlw	0
   461     06A2  1283               	bcf	3,5	;RP0=0, select bank0
   462     06A3  1303               	bcf	3,6	;RP1=0, select bank0
   463     06A4  00A3               	movwf	I2C_Master_Init@c+3
   464     06A5  3001               	movlw	1
   465     06A6  00A2               	movwf	I2C_Master_Init@c+2
   466     06A7  3086               	movlw	134
   467     06A8  00A1               	movwf	I2C_Master_Init@c+1
   468     06A9  30A0               	movlw	160
   469     06AA  00A0               	movwf	I2C_Master_Init@c
   470     06AB  120A  118A  266B  120A  118A  	fcall	_I2C_Master_Init
   471                           
   472                           ;atividade13.c: 38:     LCD_init();
   473     06B0  120A  118A  2736  120A  118A  	fcall	_LCD_init
   474                           
   475                           ;atividade13.c: 39:     LCD_backlight(1);
   476     06B5  3001               	movlw	1
   477     06B6  120A  118A  2645  120A  118A  	fcall	_LCD_backlight
   478                           
   479                           ;atividade13.c: 41:     LCD_setCursor(1, 1);
   480     06BB  01FB               	clrf	LCD_setCursor@coluna
   481     06BC  0AFB               	incf	LCD_setCursor@coluna,f
   482     06BD  3001               	movlw	1
   483     06BE  120A  118A  2625  120A  118A  	fcall	_LCD_setCursor
   484     06C3                     l916:
   485                           
   486                           ;atividade13.c: 42:     LCD_print("Joao Pedro");
   487     06C3  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   488     06C4  00FB               	movwf	LCD_print@str
   489     06C5  120A  118A  2609  120A  118A  	fcall	_LCD_print
   490     06CA                     l918:
   491                           
   492                           ;atividade13.c: 44:     LCD_setCursor(2, 1);
   493     06CA  01FB               	clrf	LCD_setCursor@coluna
   494     06CB  0AFB               	incf	LCD_setCursor@coluna,f
   495     06CC  3002               	movlw	2
   496     06CD  120A  118A  2625  120A  118A  	fcall	_LCD_setCursor
   497                           
   498                           ;atividade13.c: 45:     LCD_print("2095882");
   499     06D2  300C               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   500     06D3  00FB               	movwf	LCD_print@str
   501     06D4  120A  118A  2609  120A  118A  	fcall	_LCD_print
   502     06D9                     l35:	
   503                           ;atividade13.c: 47:     while(1);
   504                           
   505     06D9                     l36:
   506     06D9  2ED9               	goto	l35
   507     06DA  120A  118A  2800   	ljmp	start
   508     06DD                     __end_of_main:
   509                           
   510                           	psect	text1
   511     0625                     __ptext1:	
   512 ;; *************** function _LCD_setCursor *****************
   513 ;; Defined at:
   514 ;;		line 142 in file "atividade13.c"
   515 ;; Parameters:    Size  Location     Type
   516 ;;  linha           1    wreg     unsigned char 
   517 ;;  coluna          1   11[COMMON] unsigned char 
   518 ;; Auto vars:     Size  Location     Type
   519 ;;  linha           1    0[BANK0 ] unsigned char 
   520 ;;  pos             1    3[BANK0 ] unsigned char 
   521 ;; Return value:  Size  Location     Type
   522 ;;                  1    wreg      void 
   523 ;; Registers used:
   524 ;;		wreg, status,2, status,0, pclath, cstack
   525 ;; Tracked objects:
   526 ;;		On entry : 0/0
   527 ;;		On exit  : 0/0
   528 ;;		Unchanged: 0/0
   529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   530 ;;      Params:         1       0       0       0       0
   531 ;;      Locals:         0       4       0       0       0
   532 ;;      Temps:          0       0       0       0       0
   533 ;;      Totals:         1       4       0       0       0
   534 ;;Total ram usage:        5 bytes
   535 ;; Hardware stack levels used: 1
   536 ;; Hardware stack levels required when called: 5
   537 ;; This function calls:
   538 ;;		_LCD_command
   539 ;; This function is called by:
   540 ;;		_main
   541 ;; This function uses a non-reentrant model
   542 ;;
   543                           
   544     0625                     _LCD_setCursor:	
   545                           ;psect for function _LCD_setCursor
   546                           
   547                           
   548                           ;incstack = 0
   549                           ; Regs used in _LCD_setCursor: [wreg+status,2+status,0+pclath+cstack]
   550                           ;LCD_setCursor@linha stored from wreg
   551     0625  1283               	bcf	3,5	;RP0=0, select bank0
   552     0626  1303               	bcf	3,6	;RP1=0, select bank0
   553     0627  00A0               	movwf	LCD_setCursor@linha
   554     0628                     l898:
   555                           
   556                           ;atividade13.c: 143:     unsigned char pos = (linha == 1) ? (0x80 + coluna - 1) : (0xC0 
      +                          + coluna - 1);
   557     0628  0320               	decf	LCD_setCursor@linha,w
   558     0629  1903               	btfsc	3,2
   559     062A  2E2C               	goto	u411
   560     062B  2E2D               	goto	u410
   561     062C                     u411:
   562     062C  2E35               	goto	l902
   563     062D                     u410:
   564     062D                     l900:
   565     062D  087B               	movf	LCD_setCursor@coluna,w
   566     062E  3EBF               	addlw	191
   567     062F  00A1               	movwf	_LCD_setCursor$125
   568     0630  3000               	movlw	0
   569     0631  1803               	skipnc
   570     0632  3001               	movlw	1
   571     0633  00A2               	movwf	_LCD_setCursor$125+1
   572     0634  2E3C               	goto	l86
   573     0635                     l902:
   574     0635  087B               	movf	LCD_setCursor@coluna,w
   575     0636  3E7F               	addlw	127
   576     0637  00A1               	movwf	_LCD_setCursor$125
   577     0638  3000               	movlw	0
   578     0639  1803               	skipnc
   579     063A  3001               	movlw	1
   580     063B  00A2               	movwf	_LCD_setCursor$125+1
   581     063C                     l86:
   582     063C  0821               	movf	_LCD_setCursor$125,w
   583     063D  00A3               	movwf	LCD_setCursor@pos
   584     063E                     l904:
   585                           
   586                           ;atividade13.c: 144:     LCD_command(pos);
   587     063E  0823               	movf	LCD_setCursor@pos,w
   588     063F  120A  118A  25B4  120A  118A  	fcall	_LCD_command
   589     0644                     l87:
   590     0644  0008               	return
   591     0645                     __end_of_LCD_setCursor:
   592                           
   593                           	psect	text2
   594     0609                     __ptext2:	
   595 ;; *************** function _LCD_print *****************
   596 ;; Defined at:
   597 ;;		line 147 in file "atividade13.c"
   598 ;; Parameters:    Size  Location     Type
   599 ;;  str             1   11[COMMON] PTR const unsigned char 
   600 ;;		 -> STR_2(8), STR_1(11), 
   601 ;; Auto vars:     Size  Location     Type
   602 ;;		None
   603 ;; Return value:  Size  Location     Type
   604 ;;                  1    wreg      void 
   605 ;; Registers used:
   606 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   607 ;; Tracked objects:
   608 ;;		On entry : 0/0
   609 ;;		On exit  : 0/0
   610 ;;		Unchanged: 0/0
   611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   612 ;;      Params:         1       0       0       0       0
   613 ;;      Locals:         0       0       0       0       0
   614 ;;      Temps:          0       0       0       0       0
   615 ;;      Totals:         1       0       0       0       0
   616 ;;Total ram usage:        1 bytes
   617 ;; Hardware stack levels used: 1
   618 ;; Hardware stack levels required when called: 5
   619 ;; This function calls:
   620 ;;		_LCD_data
   621 ;; This function is called by:
   622 ;;		_main
   623 ;; This function uses a non-reentrant model
   624 ;;
   625                           
   626     0609                     _LCD_print:	
   627                           ;psect for function _LCD_print
   628                           
   629     0609                     l906:	
   630                           ;incstack = 0
   631                           ; Regs used in _LCD_print: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   632                           
   633                           
   634                           ;atividade13.c: 148:     while (*str) {
   635     0609  2E18               	goto	l912
   636     060A                     l908:
   637                           
   638                           ;atividade13.c: 149:         LCD_data(*str++);
   639     060A  087B               	movf	LCD_print@str,w
   640     060B  0084               	movwf	4
   641     060C  120A  118A  2003  120A  118A  	fcall	stringdir
   642     0611  120A  118A  25C6  120A  118A  	fcall	_LCD_data
   643     0616                     l910:
   644     0616  3001               	movlw	1
   645     0617  07FB               	addwf	LCD_print@str,f
   646     0618                     l912:
   647                           
   648                           ;atividade13.c: 148:     while (*str) {
   649     0618  087B               	movf	LCD_print@str,w
   650     0619  0084               	movwf	4
   651     061A  120A  118A  2003  120A  118A  	fcall	stringdir
   652     061F  3A00               	xorlw	0
   653     0620  1D03               	skipz
   654     0621  2E23               	goto	u421
   655     0622  2E24               	goto	u420
   656     0623                     u421:
   657     0623  2E0A               	goto	l908
   658     0624                     u420:
   659     0624                     l93:
   660     0624  0008               	return
   661     0625                     __end_of_LCD_print:
   662                           
   663                           	psect	text3
   664     05C6                     __ptext3:	
   665 ;; *************** function _LCD_data *****************
   666 ;; Defined at:
   667 ;;		line 118 in file "atividade13.c"
   668 ;; Parameters:    Size  Location     Type
   669 ;;  data            1    wreg     unsigned char 
   670 ;; Auto vars:     Size  Location     Type
   671 ;;  data            1   10[COMMON] unsigned char 
   672 ;; Return value:  Size  Location     Type
   673 ;;                  1    wreg      void 
   674 ;; Registers used:
   675 ;;		wreg, status,2, status,0, pclath, cstack
   676 ;; Tracked objects:
   677 ;;		On entry : 0/0
   678 ;;		On exit  : 0/0
   679 ;;		Unchanged: 0/0
   680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   681 ;;      Params:         0       0       0       0       0
   682 ;;      Locals:         1       0       0       0       0
   683 ;;      Temps:          2       0       0       0       0
   684 ;;      Totals:         3       0       0       0       0
   685 ;;Total ram usage:        3 bytes
   686 ;; Hardware stack levels used: 1
   687 ;; Hardware stack levels required when called: 4
   688 ;; This function calls:
   689 ;;		_LCD_sendByte
   690 ;; This function is called by:
   691 ;;		_LCD_print
   692 ;; This function uses a non-reentrant model
   693 ;;
   694                           
   695     05C6                     _LCD_data:	
   696                           ;psect for function _LCD_data
   697                           
   698                           
   699                           ;incstack = 0
   700                           ; Regs used in _LCD_data: [wreg+status,2+status,0+pclath+cstack]
   701                           ;LCD_data@data stored from wreg
   702     05C6  00FA               	movwf	LCD_data@data
   703     05C7                     l834:
   704                           
   705                           ;atividade13.c: 119:     LCD_sendByte(data, 1);
   706     05C7  01F5               	clrf	LCD_sendByte@rs
   707     05C8  0AF5               	incf	LCD_sendByte@rs,f
   708     05C9  087A               	movf	LCD_data@data,w
   709     05CA  120A  118A  25EE  120A  118A  	fcall	_LCD_sendByte
   710     05CF                     l836:
   711                           
   712                           ;atividade13.c: 120:     _delay((unsigned long)((2)*(4000000/4000.0)));
   713     05CF  3003               	movlw	3
   714     05D0  00F9               	movwf	??_LCD_data+1
   715     05D1  3097               	movlw	151
   716     05D2  00F8               	movwf	??_LCD_data
   717     05D3                     u437:
   718     05D3  0BF8               	decfsz	??_LCD_data,f
   719     05D4  2DD3               	goto	u437
   720     05D5  0BF9               	decfsz	??_LCD_data+1,f
   721     05D6  2DD3               	goto	u437
   722     05D7  2DD8               	nop2
   723     05D8                     l77:
   724     05D8  0008               	return
   725     05D9                     __end_of_LCD_data:
   726                           
   727                           	psect	text4
   728     0736                     __ptext4:	
   729 ;; *************** function _LCD_init *****************
   730 ;; Defined at:
   731 ;;		line 123 in file "atividade13.c"
   732 ;; Parameters:    Size  Location     Type
   733 ;;		None
   734 ;; Auto vars:     Size  Location     Type
   735 ;;		None
   736 ;; Return value:  Size  Location     Type
   737 ;;                  1    wreg      void 
   738 ;; Registers used:
   739 ;;		wreg, status,2, status,0, pclath, cstack
   740 ;; Tracked objects:
   741 ;;		On entry : 0/0
   742 ;;		On exit  : 0/0
   743 ;;		Unchanged: 0/0
   744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   745 ;;      Params:         0       0       0       0       0
   746 ;;      Locals:         0       0       0       0       0
   747 ;;      Temps:          2       0       0       0       0
   748 ;;      Totals:         2       0       0       0       0
   749 ;;Total ram usage:        2 bytes
   750 ;; Hardware stack levels used: 1
   751 ;; Hardware stack levels required when called: 5
   752 ;; This function calls:
   753 ;;		_LCD_command
   754 ;;		_LCD_sendNibble
   755 ;; This function is called by:
   756 ;;		_main
   757 ;; This function uses a non-reentrant model
   758 ;;
   759                           
   760     0736                     _LCD_init:	
   761                           ;psect for function _LCD_init
   762                           
   763     0736                     l870:	
   764                           ;incstack = 0
   765                           ; Regs used in _LCD_init: [wreg+status,2+status,0+pclath+cstack]
   766                           
   767                           
   768                           ;atividade13.c: 124:     _delay((unsigned long)((30)*(4000000/4000.0)));
   769     0736  3027               	movlw	39
   770     0737  00FC               	movwf	??_LCD_init+1
   771     0738  30F5               	movlw	245
   772     0739  00FB               	movwf	??_LCD_init
   773     073A                     u447:
   774     073A  0BFB               	decfsz	??_LCD_init,f
   775     073B  2F3A               	goto	u447
   776     073C  0BFC               	decfsz	??_LCD_init+1,f
   777     073D  2F3A               	goto	u447
   778     073E                     l872:
   779                           
   780                           ;atividade13.c: 125:     LCD_sendNibble(0x03, 0);
   781     073E  01F1               	clrf	LCD_sendNibble@rs
   782     073F  3003               	movlw	3
   783     0740  120A  118A  26DD  120A  118A  	fcall	_LCD_sendNibble
   784     0745                     l874:
   785                           
   786                           ;atividade13.c: 126:     _delay((unsigned long)((10)*(4000000/4000.0)));
   787     0745  300D               	movlw	13
   788     0746  00FC               	movwf	??_LCD_init+1
   789     0747  30FB               	movlw	251
   790     0748  00FB               	movwf	??_LCD_init
   791     0749                     u457:
   792     0749  0BFB               	decfsz	??_LCD_init,f
   793     074A  2F49               	goto	u457
   794     074B  0BFC               	decfsz	??_LCD_init+1,f
   795     074C  2F49               	goto	u457
   796     074D  2F4E               	nop2
   797                           
   798                           ;atividade13.c: 127:     LCD_sendNibble(0x03, 0);
   799     074E  01F1               	clrf	LCD_sendNibble@rs
   800     074F  3003               	movlw	3
   801     0750  120A  118A  26DD  120A  118A  	fcall	_LCD_sendNibble
   802     0755                     l876:
   803                           
   804                           ;atividade13.c: 128:     _delay((unsigned long)((200)*(4000000/4000000.0)));
   805     0755  3042               	movlw	66
   806     0756  00FB               	movwf	??_LCD_init
   807     0757                     u467:
   808     0757  0BFB               	decfsz	??_LCD_init,f
   809     0758  2F57               	goto	u467
   810     0759  0000               	nop
   811     075A                     l878:
   812                           
   813                           ;atividade13.c: 129:     LCD_sendNibble(0x03, 0);
   814     075A  01F1               	clrf	LCD_sendNibble@rs
   815     075B  3003               	movlw	3
   816     075C  120A  118A  26DD  120A  118A  	fcall	_LCD_sendNibble
   817                           
   818                           ;atividade13.c: 130:     _delay((unsigned long)((200)*(4000000/4000000.0)));
   819     0761  3042               	movlw	66
   820     0762  00FB               	movwf	??_LCD_init
   821     0763                     u477:
   822     0763  0BFB               	decfsz	??_LCD_init,f
   823     0764  2F63               	goto	u477
   824     0765  0000               	nop
   825     0766                     l880:
   826                           
   827                           ;atividade13.c: 132:     LCD_sendNibble(0x02, 0);
   828     0766  01F1               	clrf	LCD_sendNibble@rs
   829     0767  3002               	movlw	2
   830     0768  120A  118A  26DD  120A  118A  	fcall	_LCD_sendNibble
   831     076D                     l882:
   832                           
   833                           ;atividade13.c: 133:     _delay((unsigned long)((10)*(4000000/4000.0)));
   834     076D  300D               	movlw	13
   835     076E  00FC               	movwf	??_LCD_init+1
   836     076F  30FB               	movlw	251
   837     0770  00FB               	movwf	??_LCD_init
   838     0771                     u487:
   839     0771  0BFB               	decfsz	??_LCD_init,f
   840     0772  2F71               	goto	u487
   841     0773  0BFC               	decfsz	??_LCD_init+1,f
   842     0774  2F71               	goto	u487
   843     0775  2F76               	nop2
   844                           
   845                           ;atividade13.c: 135:     LCD_command(0x28);
   846     0776  3028               	movlw	40
   847     0777  120A  118A  25B4  120A  118A  	fcall	_LCD_command
   848                           
   849                           ;atividade13.c: 136:     LCD_command(0x0C);
   850     077C  300C               	movlw	12
   851     077D  120A  118A  25B4  120A  118A  	fcall	_LCD_command
   852                           
   853                           ;atividade13.c: 137:     LCD_command(0x01);
   854     0782  3001               	movlw	1
   855     0783  120A  118A  25B4  120A  118A  	fcall	_LCD_command
   856     0788                     l884:
   857                           
   858                           ;atividade13.c: 138:     _delay((unsigned long)((10)*(4000000/4000.0)));
   859     0788  300D               	movlw	13
   860     0789  00FC               	movwf	??_LCD_init+1
   861     078A  30FB               	movlw	251
   862     078B  00FB               	movwf	??_LCD_init
   863     078C                     u497:
   864     078C  0BFB               	decfsz	??_LCD_init,f
   865     078D  2F8C               	goto	u497
   866     078E  0BFC               	decfsz	??_LCD_init+1,f
   867     078F  2F8C               	goto	u497
   868     0790  2F91               	nop2
   869     0791                     l886:
   870                           
   871                           ;atividade13.c: 139:     LCD_command(0x06);
   872     0791  3006               	movlw	6
   873     0792  120A  118A  25B4  120A  118A  	fcall	_LCD_command
   874     0797                     l80:
   875     0797  0008               	return
   876     0798                     __end_of_LCD_init:
   877                           
   878                           	psect	text5
   879     05B4                     __ptext5:	
   880 ;; *************** function _LCD_command *****************
   881 ;; Defined at:
   882 ;;		line 113 in file "atividade13.c"
   883 ;; Parameters:    Size  Location     Type
   884 ;;  cmd             1    wreg     unsigned char 
   885 ;; Auto vars:     Size  Location     Type
   886 ;;  cmd             1   10[COMMON] unsigned char 
   887 ;; Return value:  Size  Location     Type
   888 ;;                  1    wreg      void 
   889 ;; Registers used:
   890 ;;		wreg, status,2, status,0, pclath, cstack
   891 ;; Tracked objects:
   892 ;;		On entry : 0/0
   893 ;;		On exit  : 0/0
   894 ;;		Unchanged: 0/0
   895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   896 ;;      Params:         0       0       0       0       0
   897 ;;      Locals:         1       0       0       0       0
   898 ;;      Temps:          2       0       0       0       0
   899 ;;      Totals:         3       0       0       0       0
   900 ;;Total ram usage:        3 bytes
   901 ;; Hardware stack levels used: 1
   902 ;; Hardware stack levels required when called: 4
   903 ;; This function calls:
   904 ;;		_LCD_sendByte
   905 ;; This function is called by:
   906 ;;		_LCD_init
   907 ;;		_LCD_setCursor
   908 ;; This function uses a non-reentrant model
   909 ;;
   910                           
   911     05B4                     _LCD_command:	
   912                           ;psect for function _LCD_command
   913                           
   914                           
   915                           ;incstack = 0
   916                           ; Regs used in _LCD_command: [wreg+status,2+status,0+pclath+cstack]
   917                           ;LCD_command@cmd stored from wreg
   918     05B4  00FA               	movwf	LCD_command@cmd
   919     05B5                     l830:
   920                           
   921                           ;atividade13.c: 114:     LCD_sendByte(cmd, 0);
   922     05B5  01F5               	clrf	LCD_sendByte@rs
   923     05B6  087A               	movf	LCD_command@cmd,w
   924     05B7  120A  118A  25EE  120A  118A  	fcall	_LCD_sendByte
   925     05BC                     l832:
   926                           
   927                           ;atividade13.c: 115:     _delay((unsigned long)((2)*(4000000/4000.0)));
   928     05BC  3003               	movlw	3
   929     05BD  00F9               	movwf	??_LCD_command+1
   930     05BE  3097               	movlw	151
   931     05BF  00F8               	movwf	??_LCD_command
   932     05C0                     u507:
   933     05C0  0BF8               	decfsz	??_LCD_command,f
   934     05C1  2DC0               	goto	u507
   935     05C2  0BF9               	decfsz	??_LCD_command+1,f
   936     05C3  2DC0               	goto	u507
   937     05C4  2DC5               	nop2
   938     05C5                     l74:
   939     05C5  0008               	return
   940     05C6                     __end_of_LCD_command:
   941                           
   942                           	psect	text6
   943     05EE                     __ptext6:	
   944 ;; *************** function _LCD_sendByte *****************
   945 ;; Defined at:
   946 ;;		line 108 in file "atividade13.c"
   947 ;; Parameters:    Size  Location     Type
   948 ;;  byte            1    wreg     unsigned char 
   949 ;;  rs              1    5[COMMON] unsigned char 
   950 ;; Auto vars:     Size  Location     Type
   951 ;;  byte            1    7[COMMON] unsigned char 
   952 ;; Return value:  Size  Location     Type
   953 ;;                  1    wreg      void 
   954 ;; Registers used:
   955 ;;		wreg, status,2, status,0, pclath, cstack
   956 ;; Tracked objects:
   957 ;;		On entry : 0/0
   958 ;;		On exit  : 0/0
   959 ;;		Unchanged: 0/0
   960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   961 ;;      Params:         1       0       0       0       0
   962 ;;      Locals:         1       0       0       0       0
   963 ;;      Temps:          1       0       0       0       0
   964 ;;      Totals:         3       0       0       0       0
   965 ;;Total ram usage:        3 bytes
   966 ;; Hardware stack levels used: 1
   967 ;; Hardware stack levels required when called: 3
   968 ;; This function calls:
   969 ;;		_LCD_sendNibble
   970 ;; This function is called by:
   971 ;;		_LCD_command
   972 ;;		_LCD_data
   973 ;; This function uses a non-reentrant model
   974 ;;
   975                           
   976     05EE                     _LCD_sendByte:	
   977                           ;psect for function _LCD_sendByte
   978                           
   979                           
   980                           ;incstack = 0
   981                           ; Regs used in _LCD_sendByte: [wreg+status,2+status,0+pclath+cstack]
   982                           ;LCD_sendByte@byte stored from wreg
   983     05EE  00F7               	movwf	LCD_sendByte@byte
   984     05EF                     l828:
   985                           
   986                           ;atividade13.c: 109:     LCD_sendNibble(byte >> 4, rs);
   987     05EF  0875               	movf	LCD_sendByte@rs,w
   988     05F0  00F1               	movwf	LCD_sendNibble@rs
   989     05F1  0877               	movf	LCD_sendByte@byte,w
   990     05F2  00F6               	movwf	??_LCD_sendByte
   991     05F3  3004               	movlw	4
   992     05F4                     u315:
   993     05F4  1003               	clrc
   994     05F5  0CF6               	rrf	??_LCD_sendByte,f
   995     05F6  3EFF               	addlw	-1
   996     05F7  1D03               	skipz
   997     05F8  2DF4               	goto	u315
   998     05F9  0876               	movf	??_LCD_sendByte,w
   999     05FA  120A  118A  26DD  120A  118A  	fcall	_LCD_sendNibble
  1000                           
  1001                           ;atividade13.c: 110:     LCD_sendNibble(byte & 0x0F, rs);
  1002     05FF  0875               	movf	LCD_sendByte@rs,w
  1003     0600  00F1               	movwf	LCD_sendNibble@rs
  1004     0601  0877               	movf	LCD_sendByte@byte,w
  1005     0602  390F               	andlw	15
  1006     0603  120A  118A  26DD  120A  118A  	fcall	_LCD_sendNibble
  1007     0608                     l71:
  1008     0608  0008               	return
  1009     0609                     __end_of_LCD_sendByte:
  1010                           
  1011                           	psect	text7
  1012     06DD                     __ptext7:	
  1013 ;; *************** function _LCD_sendNibble *****************
  1014 ;; Defined at:
  1015 ;;		line 81 in file "atividade13.c"
  1016 ;; Parameters:    Size  Location     Type
  1017 ;;  nibble          1    wreg     unsigned char 
  1018 ;;  rs              1    1[COMMON] unsigned char 
  1019 ;; Auto vars:     Size  Location     Type
  1020 ;;  nibble          1    3[COMMON] unsigned char 
  1021 ;;  data            1    4[COMMON] unsigned char 
  1022 ;; Return value:  Size  Location     Type
  1023 ;;                  1    wreg      void 
  1024 ;; Registers used:
  1025 ;;		wreg, status,2, status,0, pclath, cstack
  1026 ;; Tracked objects:
  1027 ;;		On entry : 0/0
  1028 ;;		On exit  : 0/0
  1029 ;;		Unchanged: 0/0
  1030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1031 ;;      Params:         1       0       0       0       0
  1032 ;;      Locals:         2       0       0       0       0
  1033 ;;      Temps:          1       0       0       0       0
  1034 ;;      Totals:         4       0       0       0       0
  1035 ;;Total ram usage:        4 bytes
  1036 ;; Hardware stack levels used: 1
  1037 ;; Hardware stack levels required when called: 2
  1038 ;; This function calls:
  1039 ;;		_I2C_Master_Start
  1040 ;;		_I2C_Master_Stop
  1041 ;;		_I2C_Master_Write
  1042 ;; This function is called by:
  1043 ;;		_LCD_sendByte
  1044 ;;		_LCD_init
  1045 ;; This function uses a non-reentrant model
  1046 ;;
  1047                           
  1048     06DD                     _LCD_sendNibble:	
  1049                           ;psect for function _LCD_sendNibble
  1050                           
  1051                           
  1052                           ;incstack = 0
  1053                           ; Regs used in _LCD_sendNibble: [wreg+status,2+status,0+pclath+cstack]
  1054                           ;LCD_sendNibble@nibble stored from wreg
  1055     06DD  00F3               	movwf	LCD_sendNibble@nibble
  1056     06DE                     l790:
  1057                           
  1058                           ;atividade13.c: 82:     unsigned char data = 0;
  1059     06DE  01F4               	clrf	LCD_sendNibble@data
  1060     06DF                     l792:
  1061                           
  1062                           ;atividade13.c: 84:     if (nibble & 0x01) data |= (1 << 4);
  1063     06DF  1C73               	btfss	LCD_sendNibble@nibble,0
  1064     06E0  2EE2               	goto	u261
  1065     06E1  2EE3               	goto	u260
  1066     06E2                     u261:
  1067     06E2  2EE4               	goto	l63
  1068     06E3                     u260:
  1069     06E3                     l794:
  1070     06E3  1674               	bsf	LCD_sendNibble@data,4
  1071     06E4                     l63:
  1072                           
  1073                           ;atividade13.c: 85:     if (nibble & 0x02) data |= (1 << 5);
  1074     06E4  1CF3               	btfss	LCD_sendNibble@nibble,1
  1075     06E5  2EE7               	goto	u271
  1076     06E6  2EE8               	goto	u270
  1077     06E7                     u271:
  1078     06E7  2EE9               	goto	l64
  1079     06E8                     u270:
  1080     06E8                     l796:
  1081     06E8  16F4               	bsf	LCD_sendNibble@data,5
  1082     06E9                     l64:
  1083                           
  1084                           ;atividade13.c: 86:     if (nibble & 0x04) data |= (1 << 6);
  1085     06E9  1D73               	btfss	LCD_sendNibble@nibble,2
  1086     06EA  2EEC               	goto	u281
  1087     06EB  2EED               	goto	u280
  1088     06EC                     u281:
  1089     06EC  2EEE               	goto	l65
  1090     06ED                     u280:
  1091     06ED                     l798:
  1092     06ED  1774               	bsf	LCD_sendNibble@data,6
  1093     06EE                     l65:
  1094                           
  1095                           ;atividade13.c: 87:     if (nibble & 0x08) data |= (1 << 7);
  1096     06EE  1DF3               	btfss	LCD_sendNibble@nibble,3
  1097     06EF  2EF1               	goto	u291
  1098     06F0  2EF2               	goto	u290
  1099     06F1                     u291:
  1100     06F1  2EF3               	goto	l802
  1101     06F2                     u290:
  1102     06F2                     l800:
  1103     06F2  17F4               	bsf	LCD_sendNibble@data,7
  1104     06F3                     l802:
  1105                           
  1106                           ;atividade13.c: 89:     if (rs) data |= 0x01;
  1107     06F3  0871               	movf	LCD_sendNibble@rs,w
  1108     06F4  1903               	btfsc	3,2
  1109     06F5  2EF7               	goto	u301
  1110     06F6  2EF8               	goto	u300
  1111     06F7                     u301:
  1112     06F7  2EF9               	goto	l806
  1113     06F8                     u300:
  1114     06F8                     l804:
  1115     06F8  1474               	bsf	LCD_sendNibble@data,0
  1116     06F9                     l806:
  1117                           
  1118                           ;atividade13.c: 90:     data &= ~0x02;
  1119     06F9  30FD               	movlw	253
  1120     06FA  05F4               	andwf	LCD_sendNibble@data,f
  1121     06FB                     l808:
  1122                           
  1123                           ;atividade13.c: 92:     data |= 0x04;
  1124     06FB  1574               	bsf	LCD_sendNibble@data,2
  1125     06FC                     l810:
  1126                           
  1127                           ;atividade13.c: 93:     data |= 0x08;
  1128     06FC  15F4               	bsf	LCD_sendNibble@data,3
  1129     06FD                     l812:
  1130                           
  1131                           ;atividade13.c: 94:     I2C_Master_Start();
  1132     06FD  120A  118A  25A4  120A  118A  	fcall	_I2C_Master_Start
  1133     0702                     l814:
  1134                           
  1135                           ;atividade13.c: 95:     I2C_Master_Write(0x27 << 1);
  1136     0702  304E               	movlw	78
  1137     0703  120A  118A  25D9  120A  118A  	fcall	_I2C_Master_Write
  1138     0708                     l816:
  1139                           
  1140                           ;atividade13.c: 96:     I2C_Master_Write(data);
  1141     0708  0874               	movf	LCD_sendNibble@data,w
  1142     0709  120A  118A  25D9  120A  118A  	fcall	_I2C_Master_Write
  1143     070E                     l818:
  1144                           
  1145                           ;atividade13.c: 97:     I2C_Master_Stop();
  1146     070E  120A  118A  25AC  120A  118A  	fcall	_I2C_Master_Stop
  1147     0713                     l820:
  1148                           
  1149                           ;atividade13.c: 98:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  1150     0713  3010               	movlw	16
  1151     0714  00F2               	movwf	??_LCD_sendNibble
  1152     0715                     u517:
  1153     0715  0BF2               	decfsz	??_LCD_sendNibble,f
  1154     0716  2F15               	goto	u517
  1155     0717  0000               	nop
  1156     0718                     l822:
  1157                           
  1158                           ;atividade13.c: 100:     data &= ~0x04;
  1159     0718  30FB               	movlw	251
  1160     0719  05F4               	andwf	LCD_sendNibble@data,f
  1161     071A                     l824:
  1162                           
  1163                           ;atividade13.c: 101:     I2C_Master_Start();
  1164     071A  120A  118A  25A4  120A  118A  	fcall	_I2C_Master_Start
  1165                           
  1166                           ;atividade13.c: 102:     I2C_Master_Write(0x27 << 1);
  1167     071F  304E               	movlw	78
  1168     0720  120A  118A  25D9  120A  118A  	fcall	_I2C_Master_Write
  1169                           
  1170                           ;atividade13.c: 103:     I2C_Master_Write(data);
  1171     0725  0874               	movf	LCD_sendNibble@data,w
  1172     0726  120A  118A  25D9  120A  118A  	fcall	_I2C_Master_Write
  1173     072B                     l826:
  1174                           
  1175                           ;atividade13.c: 104:     I2C_Master_Stop();
  1176     072B  120A  118A  25AC  120A  118A  	fcall	_I2C_Master_Stop
  1177                           
  1178                           ;atividade13.c: 105:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  1179     0730  3010               	movlw	16
  1180     0731  00F2               	movwf	??_LCD_sendNibble
  1181     0732                     u527:
  1182     0732  0BF2               	decfsz	??_LCD_sendNibble,f
  1183     0733  2F32               	goto	u527
  1184     0734  0000               	nop
  1185     0735                     l68:
  1186     0735  0008               	return
  1187     0736                     __end_of_LCD_sendNibble:
  1188                           
  1189                           	psect	text8
  1190     0645                     __ptext8:	
  1191 ;; *************** function _LCD_backlight *****************
  1192 ;; Defined at:
  1193 ;;		line 153 in file "atividade13.c"
  1194 ;; Parameters:    Size  Location     Type
  1195 ;;  state           1    wreg     unsigned char 
  1196 ;; Auto vars:     Size  Location     Type
  1197 ;;  state           1    1[COMMON] unsigned char 
  1198 ;;  data            1    4[COMMON] unsigned char 
  1199 ;; Return value:  Size  Location     Type
  1200 ;;                  1    wreg      void 
  1201 ;; Registers used:
  1202 ;;		wreg, status,2, status,0, pclath, cstack
  1203 ;; Tracked objects:
  1204 ;;		On entry : 0/0
  1205 ;;		On exit  : 0/0
  1206 ;;		Unchanged: 0/0
  1207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1208 ;;      Params:         0       0       0       0       0
  1209 ;;      Locals:         4       0       0       0       0
  1210 ;;      Temps:          0       0       0       0       0
  1211 ;;      Totals:         4       0       0       0       0
  1212 ;;Total ram usage:        4 bytes
  1213 ;; Hardware stack levels used: 1
  1214 ;; Hardware stack levels required when called: 2
  1215 ;; This function calls:
  1216 ;;		_I2C_Master_Start
  1217 ;;		_I2C_Master_Stop
  1218 ;;		_I2C_Master_Write
  1219 ;; This function is called by:
  1220 ;;		_main
  1221 ;; This function uses a non-reentrant model
  1222 ;;
  1223                           
  1224     0645                     _LCD_backlight:	
  1225                           ;psect for function _LCD_backlight
  1226                           
  1227                           
  1228                           ;incstack = 0
  1229                           ; Regs used in _LCD_backlight: [wreg+status,2+status,0+pclath+cstack]
  1230                           ;LCD_backlight@state stored from wreg
  1231     0645  00F1               	movwf	LCD_backlight@state
  1232     0646                     l888:
  1233                           
  1234                           ;atividade13.c: 154:     unsigned char data = state ? 0x08 : 0x00;
  1235     0646  0871               	movf	LCD_backlight@state,w
  1236     0647  1D03               	btfss	3,2
  1237     0648  2E4A               	goto	u401
  1238     0649  2E4B               	goto	u400
  1239     064A                     u401:
  1240     064A  2E4E               	goto	l892
  1241     064B                     u400:
  1242     064B                     l890:
  1243     064B  01F2               	clrf	_LCD_backlight$132
  1244     064C  01F3               	clrf	_LCD_backlight$132+1
  1245     064D  2E52               	goto	l99
  1246     064E                     l892:
  1247     064E  3008               	movlw	8
  1248     064F  00F2               	movwf	_LCD_backlight$132
  1249     0650  3000               	movlw	0
  1250     0651  00F3               	movwf	_LCD_backlight$132+1
  1251     0652                     l99:
  1252     0652  0872               	movf	_LCD_backlight$132,w
  1253     0653  00F4               	movwf	LCD_backlight@data
  1254     0654                     l894:
  1255                           
  1256                           ;atividade13.c: 155:     I2C_Master_Start();
  1257     0654  120A  118A  25A4  120A  118A  	fcall	_I2C_Master_Start
  1258                           
  1259                           ;atividade13.c: 156:     I2C_Master_Write(0x27 << 1);
  1260     0659  304E               	movlw	78
  1261     065A  120A  118A  25D9  120A  118A  	fcall	_I2C_Master_Write
  1262                           
  1263                           ;atividade13.c: 157:     I2C_Master_Write(data);
  1264     065F  0874               	movf	LCD_backlight@data,w
  1265     0660  120A  118A  25D9  120A  118A  	fcall	_I2C_Master_Write
  1266     0665                     l896:
  1267                           
  1268                           ;atividade13.c: 158:     I2C_Master_Stop();
  1269     0665  120A  118A  25AC  120A  118A  	fcall	_I2C_Master_Stop
  1270     066A                     l100:
  1271     066A  0008               	return
  1272     066B                     __end_of_LCD_backlight:
  1273                           
  1274                           	psect	text9
  1275     05D9                     __ptext9:	
  1276 ;; *************** function _I2C_Master_Write *****************
  1277 ;; Defined at:
  1278 ;;		line 70 in file "atividade13.c"
  1279 ;; Parameters:    Size  Location     Type
  1280 ;;  data            1    wreg     unsigned char 
  1281 ;; Auto vars:     Size  Location     Type
  1282 ;;  data            1    0[COMMON] unsigned char 
  1283 ;; Return value:  Size  Location     Type
  1284 ;;                  1    wreg      void 
  1285 ;; Registers used:
  1286 ;;		wreg, status,2, status,0, pclath, cstack
  1287 ;; Tracked objects:
  1288 ;;		On entry : 0/0
  1289 ;;		On exit  : 0/0
  1290 ;;		Unchanged: 0/0
  1291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1292 ;;      Params:         0       0       0       0       0
  1293 ;;      Locals:         1       0       0       0       0
  1294 ;;      Temps:          0       0       0       0       0
  1295 ;;      Totals:         1       0       0       0       0
  1296 ;;Total ram usage:        1 bytes
  1297 ;; Hardware stack levels used: 1
  1298 ;; Hardware stack levels required when called: 1
  1299 ;; This function calls:
  1300 ;;		_I2C_Master_Stop
  1301 ;; This function is called by:
  1302 ;;		_LCD_sendNibble
  1303 ;;		_LCD_backlight
  1304 ;; This function uses a non-reentrant model
  1305 ;;
  1306                           
  1307     05D9                     _I2C_Master_Write:	
  1308                           ;psect for function _I2C_Master_Write
  1309                           
  1310                           
  1311                           ;incstack = 0
  1312                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  1313                           ;I2C_Master_Write@data stored from wreg
  1314     05D9  00F0               	movwf	I2C_Master_Write@data
  1315     05DA                     l786:
  1316                           
  1317                           ;atividade13.c: 71:     SSPBUF = data;
  1318     05DA  0870               	movf	I2C_Master_Write@data,w
  1319     05DB  1283               	bcf	3,5	;RP0=0, select bank0
  1320     05DC  1303               	bcf	3,6	;RP1=0, select bank0
  1321     05DD  0093               	movwf	19	;volatile
  1322     05DE                     l56:	
  1323                           ;atividade13.c: 72:     while (BF);
  1324                           
  1325     05DE  1683               	bsf	3,5	;RP0=1, select bank1
  1326     05DF  1303               	bcf	3,6	;RP1=0, select bank1
  1327     05E0  1814               	btfsc	20,0	;volatile
  1328     05E1  2DE3               	goto	u241
  1329     05E2  2DE4               	goto	u240
  1330     05E3                     u241:
  1331     05E3  2DDE               	goto	l56
  1332     05E4                     u240:
  1333     05E4                     l58:
  1334                           
  1335                           ;atividade13.c: 73:     if (SSPCON2bits.ACKSTAT) {
  1336     05E4  1F11               	btfss	17,6	;volatile
  1337     05E5  2DE7               	goto	u251
  1338     05E6  2DE8               	goto	u250
  1339     05E7                     u251:
  1340     05E7  2DED               	goto	l60
  1341     05E8                     u250:
  1342     05E8                     l788:
  1343                           
  1344                           ;atividade13.c: 74:         I2C_Master_Stop();
  1345     05E8  120A  118A  25AC  120A  118A  	fcall	_I2C_Master_Stop
  1346     05ED                     l60:
  1347     05ED  0008               	return
  1348     05EE                     __end_of_I2C_Master_Write:
  1349                           
  1350                           	psect	text10
  1351     05AC                     __ptext10:	
  1352 ;; *************** function _I2C_Master_Stop *****************
  1353 ;; Defined at:
  1354 ;;		line 65 in file "atividade13.c"
  1355 ;; Parameters:    Size  Location     Type
  1356 ;;		None
  1357 ;; Auto vars:     Size  Location     Type
  1358 ;;		None
  1359 ;; Return value:  Size  Location     Type
  1360 ;;                  1    wreg      void 
  1361 ;; Registers used:
  1362 ;;		None
  1363 ;; Tracked objects:
  1364 ;;		On entry : 0/0
  1365 ;;		On exit  : 0/0
  1366 ;;		Unchanged: 0/0
  1367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1368 ;;      Params:         0       0       0       0       0
  1369 ;;      Locals:         0       0       0       0       0
  1370 ;;      Temps:          0       0       0       0       0
  1371 ;;      Totals:         0       0       0       0       0
  1372 ;;Total ram usage:        0 bytes
  1373 ;; Hardware stack levels used: 1
  1374 ;; This function calls:
  1375 ;;		Nothing
  1376 ;; This function is called by:
  1377 ;;		_I2C_Master_Write
  1378 ;;		_LCD_sendNibble
  1379 ;;		_LCD_backlight
  1380 ;; This function uses a non-reentrant model
  1381 ;;
  1382                           
  1383     05AC                     _I2C_Master_Stop:	
  1384                           ;psect for function _I2C_Master_Stop
  1385                           
  1386     05AC                     l782:	
  1387                           ;incstack = 0
  1388                           ; Regs used in _I2C_Master_Stop: []
  1389                           
  1390                           
  1391                           ;atividade13.c: 66:     PEN = 1;
  1392     05AC  1683               	bsf	3,5	;RP0=1, select bank1
  1393     05AD  1303               	bcf	3,6	;RP1=0, select bank1
  1394     05AE  1511               	bsf	17,2	;volatile
  1395     05AF                     l50:	
  1396                           ;atividade13.c: 67:     while(PEN);
  1397                           
  1398     05AF  1911               	btfsc	17,2	;volatile
  1399     05B0  2DB2               	goto	u221
  1400     05B1  2DB3               	goto	u220
  1401     05B2                     u221:
  1402     05B2  2DAF               	goto	l50
  1403     05B3                     u220:
  1404     05B3                     l53:
  1405     05B3  0008               	return
  1406     05B4                     __end_of_I2C_Master_Stop:
  1407                           
  1408                           	psect	text11
  1409     05A4                     __ptext11:	
  1410 ;; *************** function _I2C_Master_Start *****************
  1411 ;; Defined at:
  1412 ;;		line 60 in file "atividade13.c"
  1413 ;; Parameters:    Size  Location     Type
  1414 ;;		None
  1415 ;; Auto vars:     Size  Location     Type
  1416 ;;		None
  1417 ;; Return value:  Size  Location     Type
  1418 ;;                  1    wreg      void 
  1419 ;; Registers used:
  1420 ;;		None
  1421 ;; Tracked objects:
  1422 ;;		On entry : 0/0
  1423 ;;		On exit  : 0/0
  1424 ;;		Unchanged: 0/0
  1425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1426 ;;      Params:         0       0       0       0       0
  1427 ;;      Locals:         0       0       0       0       0
  1428 ;;      Temps:          0       0       0       0       0
  1429 ;;      Totals:         0       0       0       0       0
  1430 ;;Total ram usage:        0 bytes
  1431 ;; Hardware stack levels used: 1
  1432 ;; This function calls:
  1433 ;;		Nothing
  1434 ;; This function is called by:
  1435 ;;		_LCD_sendNibble
  1436 ;;		_LCD_backlight
  1437 ;; This function uses a non-reentrant model
  1438 ;;
  1439                           
  1440     05A4                     _I2C_Master_Start:	
  1441                           ;psect for function _I2C_Master_Start
  1442                           
  1443     05A4                     l784:	
  1444                           ;incstack = 0
  1445                           ; Regs used in _I2C_Master_Start: []
  1446                           
  1447                           
  1448                           ;atividade13.c: 61:     SEN = 1;
  1449     05A4  1683               	bsf	3,5	;RP0=1, select bank1
  1450     05A5  1303               	bcf	3,6	;RP1=0, select bank1
  1451     05A6  1411               	bsf	17,0	;volatile
  1452     05A7                     l44:	
  1453                           ;atividade13.c: 62:     while(SEN);
  1454                           
  1455     05A7  1811               	btfsc	17,0	;volatile
  1456     05A8  2DAA               	goto	u231
  1457     05A9  2DAB               	goto	u230
  1458     05AA                     u231:
  1459     05AA  2DA7               	goto	l44
  1460     05AB                     u230:
  1461     05AB                     l47:
  1462     05AB  0008               	return
  1463     05AC                     __end_of_I2C_Master_Start:
  1464                           
  1465                           	psect	text12
  1466     066B                     __ptext12:	
  1467 ;; *************** function _I2C_Master_Init *****************
  1468 ;; Defined at:
  1469 ;;		line 53 in file "atividade13.c"
  1470 ;; Parameters:    Size  Location     Type
  1471 ;;  c               4    0[BANK0 ] unsigned long 
  1472 ;; Auto vars:     Size  Location     Type
  1473 ;;		None
  1474 ;; Return value:  Size  Location     Type
  1475 ;;                  1    wreg      void 
  1476 ;; Registers used:
  1477 ;;		wreg, status,2, status,0, pclath, cstack
  1478 ;; Tracked objects:
  1479 ;;		On entry : 0/0
  1480 ;;		On exit  : 0/0
  1481 ;;		Unchanged: 0/0
  1482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1483 ;;      Params:         0       4       0       0       0
  1484 ;;      Locals:         0       0       0       0       0
  1485 ;;      Temps:          0       4       0       0       0
  1486 ;;      Totals:         0       8       0       0       0
  1487 ;;Total ram usage:        8 bytes
  1488 ;; Hardware stack levels used: 1
  1489 ;; Hardware stack levels required when called: 1
  1490 ;; This function calls:
  1491 ;;		___lldiv
  1492 ;; This function is called by:
  1493 ;;		_main
  1494 ;; This function uses a non-reentrant model
  1495 ;;
  1496                           
  1497     066B                     _I2C_Master_Init:	
  1498                           ;psect for function _I2C_Master_Init
  1499                           
  1500     066B                     l862:	
  1501                           ;incstack = 0
  1502                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1503                           
  1504                           
  1505                           ;atividade13.c: 54:     SSPCON = 0x28;
  1506     066B  3028               	movlw	40
  1507     066C  1283               	bcf	3,5	;RP0=0, select bank0
  1508     066D  1303               	bcf	3,6	;RP1=0, select bank0
  1509     066E  0094               	movwf	20	;volatile
  1510     066F                     l864:
  1511                           
  1512                           ;atividade13.c: 55:     SSPCON2 = 0x00;
  1513     066F  1683               	bsf	3,5	;RP0=1, select bank1
  1514     0670  1303               	bcf	3,6	;RP1=0, select bank1
  1515     0671  0191               	clrf	17	;volatile
  1516     0672                     l866:
  1517                           
  1518                           ;atividade13.c: 56:     SSPADD = (unsigned char)((4000000 / (4 * c)) - 1);
  1519     0672  1283               	bcf	3,5	;RP0=0, select bank0
  1520     0673  1303               	bcf	3,6	;RP1=0, select bank0
  1521     0674  0820               	movf	I2C_Master_Init@c,w
  1522     0675  00A4               	movwf	??_I2C_Master_Init
  1523     0676  0821               	movf	I2C_Master_Init@c+1,w
  1524     0677  00A5               	movwf	??_I2C_Master_Init+1
  1525     0678  0822               	movf	I2C_Master_Init@c+2,w
  1526     0679  00A6               	movwf	??_I2C_Master_Init+2
  1527     067A  0823               	movf	I2C_Master_Init@c+3,w
  1528     067B  00A7               	movwf	??_I2C_Master_Init+3
  1529     067C  3002               	movlw	2
  1530     067D                     u395:
  1531     067D  1003               	clrc
  1532     067E  0DA4               	rlf	??_I2C_Master_Init,f
  1533     067F  0DA5               	rlf	??_I2C_Master_Init+1,f
  1534     0680  0DA6               	rlf	??_I2C_Master_Init+2,f
  1535     0681  0DA7               	rlf	??_I2C_Master_Init+3,f
  1536     0682                     u390:
  1537     0682  3EFF               	addlw	-1
  1538     0683  1D03               	skipz
  1539     0684  2E7D               	goto	u395
  1540     0685  0827               	movf	??_I2C_Master_Init+3,w
  1541     0686  00F3               	movwf	___lldiv@divisor+3
  1542     0687  0826               	movf	??_I2C_Master_Init+2,w
  1543     0688  00F2               	movwf	___lldiv@divisor+2
  1544     0689  0825               	movf	??_I2C_Master_Init+1,w
  1545     068A  00F1               	movwf	___lldiv@divisor+1
  1546     068B  0824               	movf	??_I2C_Master_Init,w
  1547     068C  00F0               	movwf	___lldiv@divisor
  1548     068D  3000               	movlw	0
  1549     068E  00F7               	movwf	___lldiv@dividend+3
  1550     068F  303D               	movlw	61
  1551     0690  00F6               	movwf	___lldiv@dividend+2
  1552     0691  3009               	movlw	9
  1553     0692  00F5               	movwf	___lldiv@dividend+1
  1554     0693  3000               	movlw	0
  1555     0694  00F4               	movwf	___lldiv@dividend
  1556     0695  120A  118A  2798  120A  118A  	fcall	___lldiv
  1557     069A  0870               	movf	?___lldiv,w
  1558     069B  3EFF               	addlw	255
  1559     069C  1683               	bsf	3,5	;RP0=1, select bank1
  1560     069D  1303               	bcf	3,6	;RP1=0, select bank1
  1561     069E  0093               	movwf	19	;volatile
  1562     069F                     l868:
  1563                           
  1564                           ;atividade13.c: 57:     SSPSTAT = 0x00;
  1565     069F  0194               	clrf	20	;volatile
  1566     06A0                     l41:
  1567     06A0  0008               	return
  1568     06A1                     __end_of_I2C_Master_Init:
  1569                           
  1570                           	psect	text13
  1571     0798                     __ptext13:	
  1572 ;; *************** function ___lldiv *****************
  1573 ;; Defined at:
  1574 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\__lldiv.c"
  1575 ;; Parameters:    Size  Location     Type
  1576 ;;  divisor         4    0[COMMON] unsigned long 
  1577 ;;  dividend        4    4[COMMON] unsigned long 
  1578 ;; Auto vars:     Size  Location     Type
  1579 ;;  quotient        4    9[COMMON] unsigned long 
  1580 ;;  counter         1   13[COMMON] unsigned char 
  1581 ;; Return value:  Size  Location     Type
  1582 ;;                  4    0[COMMON] unsigned long 
  1583 ;; Registers used:
  1584 ;;		wreg, status,2, status,0
  1585 ;; Tracked objects:
  1586 ;;		On entry : 0/0
  1587 ;;		On exit  : 0/0
  1588 ;;		Unchanged: 0/0
  1589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1590 ;;      Params:         8       0       0       0       0
  1591 ;;      Locals:         5       0       0       0       0
  1592 ;;      Temps:          1       0       0       0       0
  1593 ;;      Totals:        14       0       0       0       0
  1594 ;;Total ram usage:       14 bytes
  1595 ;; Hardware stack levels used: 1
  1596 ;; This function calls:
  1597 ;;		Nothing
  1598 ;; This function is called by:
  1599 ;;		_I2C_Master_Init
  1600 ;; This function uses a non-reentrant model
  1601 ;;
  1602                           
  1603     0798                     ___lldiv:	
  1604                           ;psect for function ___lldiv
  1605                           
  1606     0798                     l838:	
  1607                           ;incstack = 0
  1608                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1609                           
  1610     0798  3000               	movlw	0
  1611     0799  00FC               	movwf	___lldiv@quotient+3
  1612     079A  3000               	movlw	0
  1613     079B  00FB               	movwf	___lldiv@quotient+2
  1614     079C  3000               	movlw	0
  1615     079D  00FA               	movwf	___lldiv@quotient+1
  1616     079E  3000               	movlw	0
  1617     079F  00F9               	movwf	___lldiv@quotient
  1618     07A0  0873               	movf	___lldiv@divisor+3,w
  1619     07A1  0472               	iorwf	___lldiv@divisor+2,w
  1620     07A2  0471               	iorwf	___lldiv@divisor+1,w
  1621     07A3  0470               	iorwf	___lldiv@divisor,w
  1622     07A4  1903               	skipnz
  1623     07A5  2FA7               	goto	u321
  1624     07A6  2FA8               	goto	u320
  1625     07A7                     u321:
  1626     07A7  2FF3               	goto	l858
  1627     07A8                     u320:
  1628     07A8                     l840:
  1629     07A8  3001               	movlw	1
  1630     07A9  00FD               	movwf	___lldiv@counter
  1631     07AA  2FB6               	goto	l844
  1632     07AB                     l842:
  1633     07AB  3001               	movlw	1
  1634     07AC  00F8               	movwf	??___lldiv
  1635     07AD                     u335:
  1636     07AD  1003               	clrc
  1637     07AE  0DF0               	rlf	___lldiv@divisor,f
  1638     07AF  0DF1               	rlf	___lldiv@divisor+1,f
  1639     07B0  0DF2               	rlf	___lldiv@divisor+2,f
  1640     07B1  0DF3               	rlf	___lldiv@divisor+3,f
  1641     07B2  0BF8               	decfsz	??___lldiv,f
  1642     07B3  2FAD               	goto	u335
  1643     07B4  3001               	movlw	1
  1644     07B5  07FD               	addwf	___lldiv@counter,f
  1645     07B6                     l844:
  1646     07B6  1FF3               	btfss	___lldiv@divisor+3,7
  1647     07B7  2FB9               	goto	u341
  1648     07B8  2FBA               	goto	u340
  1649     07B9                     u341:
  1650     07B9  2FAB               	goto	l842
  1651     07BA                     u340:
  1652     07BA                     l846:
  1653     07BA  3001               	movlw	1
  1654     07BB  00F8               	movwf	??___lldiv
  1655     07BC                     u355:
  1656     07BC  1003               	clrc
  1657     07BD  0DF9               	rlf	___lldiv@quotient,f
  1658     07BE  0DFA               	rlf	___lldiv@quotient+1,f
  1659     07BF  0DFB               	rlf	___lldiv@quotient+2,f
  1660     07C0  0DFC               	rlf	___lldiv@quotient+3,f
  1661     07C1  0BF8               	decfsz	??___lldiv,f
  1662     07C2  2FBC               	goto	u355
  1663     07C3                     l848:
  1664     07C3  0873               	movf	___lldiv@divisor+3,w
  1665     07C4  0277               	subwf	___lldiv@dividend+3,w
  1666     07C5  1D03               	skipz
  1667     07C6  2FD1               	goto	u365
  1668     07C7  0872               	movf	___lldiv@divisor+2,w
  1669     07C8  0276               	subwf	___lldiv@dividend+2,w
  1670     07C9  1D03               	skipz
  1671     07CA  2FD1               	goto	u365
  1672     07CB  0871               	movf	___lldiv@divisor+1,w
  1673     07CC  0275               	subwf	___lldiv@dividend+1,w
  1674     07CD  1D03               	skipz
  1675     07CE  2FD1               	goto	u365
  1676     07CF  0870               	movf	___lldiv@divisor,w
  1677     07D0  0274               	subwf	___lldiv@dividend,w
  1678     07D1                     u365:
  1679     07D1  1C03               	skipc
  1680     07D2  2FD4               	goto	u361
  1681     07D3  2FD5               	goto	u360
  1682     07D4                     u361:
  1683     07D4  2FE4               	goto	l854
  1684     07D5                     u360:
  1685     07D5                     l850:
  1686     07D5  0870               	movf	___lldiv@divisor,w
  1687     07D6  02F4               	subwf	___lldiv@dividend,f
  1688     07D7  0871               	movf	___lldiv@divisor+1,w
  1689     07D8  1C03               	skipc
  1690     07D9  0F71               	incfsz	___lldiv@divisor+1,w
  1691     07DA  02F5               	subwf	___lldiv@dividend+1,f
  1692     07DB  0872               	movf	___lldiv@divisor+2,w
  1693     07DC  1C03               	skipc
  1694     07DD  0F72               	incfsz	___lldiv@divisor+2,w
  1695     07DE  02F6               	subwf	___lldiv@dividend+2,f
  1696     07DF  0873               	movf	___lldiv@divisor+3,w
  1697     07E0  1C03               	skipc
  1698     07E1  0F73               	incfsz	___lldiv@divisor+3,w
  1699     07E2  02F7               	subwf	___lldiv@dividend+3,f
  1700     07E3                     l852:
  1701     07E3  1479               	bsf	___lldiv@quotient,0
  1702     07E4                     l854:
  1703     07E4  3001               	movlw	1
  1704     07E5                     u375:
  1705     07E5  1003               	clrc
  1706     07E6  0CF3               	rrf	___lldiv@divisor+3,f
  1707     07E7  0CF2               	rrf	___lldiv@divisor+2,f
  1708     07E8  0CF1               	rrf	___lldiv@divisor+1,f
  1709     07E9  0CF0               	rrf	___lldiv@divisor,f
  1710     07EA  3EFF               	addlw	-1
  1711     07EB  1D03               	skipz
  1712     07EC  2FE5               	goto	u375
  1713     07ED                     l856:
  1714     07ED  3001               	movlw	1
  1715     07EE  02FD               	subwf	___lldiv@counter,f
  1716     07EF  1D03               	btfss	3,2
  1717     07F0  2FF2               	goto	u381
  1718     07F1  2FF3               	goto	u380
  1719     07F2                     u381:
  1720     07F2  2FBA               	goto	l846
  1721     07F3                     u380:
  1722     07F3                     l858:
  1723     07F3  087C               	movf	___lldiv@quotient+3,w
  1724     07F4  00F3               	movwf	?___lldiv+3
  1725     07F5  087B               	movf	___lldiv@quotient+2,w
  1726     07F6  00F2               	movwf	?___lldiv+2
  1727     07F7  087A               	movf	___lldiv@quotient+1,w
  1728     07F8  00F1               	movwf	?___lldiv+1
  1729     07F9  0879               	movf	___lldiv@quotient,w
  1730     07FA  00F0               	movwf	?___lldiv
  1731     07FB                     l222:
  1732     07FB  0008               	return
  1733     07FC                     __end_of___lldiv:
  1734     0002                     ___latbits      equ	2
  1735     007E                     btemp           set	126	;btemp
  1736     007E                     wtemp0          set	126

Data Sizes:
    Strings     19
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      8       8
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_print@str	PTR const unsigned char  size(1) Largest target is 11
		 -> STR_1(CODE[11]), STR_2(CODE[8]), 


Critical Paths under _main in COMMON

    _LCD_setCursor->_LCD_command
    _LCD_print->_LCD_data
    _LCD_data->_LCD_sendByte
    _LCD_init->_LCD_command
    _LCD_command->_LCD_sendByte
    _LCD_sendByte->_LCD_sendNibble
    _LCD_sendNibble->_I2C_Master_Write
    _LCD_backlight->_I2C_Master_Write
    _I2C_Master_Init->___lldiv

Critical Paths under _main in BANK0

    _main->_I2C_Master_Init

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1768
                    _I2C_Master_Init
                      _LCD_backlight
                           _LCD_init
                          _LCD_print
                      _LCD_setCursor
 ---------------------------------------------------------------------------------
 (1) _LCD_setCursor                                        5     4      1     482
                                             11 COMMON     1     0      1
                                              0 BANK0      4     4      0
                        _LCD_command
 ---------------------------------------------------------------------------------
 (1) _LCD_print                                            1     0      1     407
                                             11 COMMON     1     0      1
                           _LCD_data
 ---------------------------------------------------------------------------------
 (2) _LCD_data                                             3     3      0     360
                                              8 COMMON     3     3      0
                       _LCD_sendByte
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             2     2      0     587
                                             11 COMMON     2     2      0
                        _LCD_command
                     _LCD_sendNibble
 ---------------------------------------------------------------------------------
 (2) _LCD_command                                          3     3      0     360
                                              8 COMMON     3     3      0
                       _LCD_sendByte
 ---------------------------------------------------------------------------------
 (3) _LCD_sendByte                                         3     2      1     331
                                              5 COMMON     3     2      1
                     _LCD_sendNibble
 ---------------------------------------------------------------------------------
 (4) _LCD_sendNibble                                       4     3      1     227
                                              1 COMMON     4     3      1
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _LCD_backlight                                        4     4      0     105
                                              1 COMMON     4     4      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Write                                     1     1      0      29
                                              0 COMMON     1     1      0
                    _I2C_Master_Stop
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Stop                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Start                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     187
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     164
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _LCD_backlight
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
       _I2C_Master_Stop
   _LCD_init
     _LCD_command
       _LCD_sendByte
         _LCD_sendNibble
           _I2C_Master_Start
           _I2C_Master_Stop
           _I2C_Master_Write
     _LCD_sendNibble
   _LCD_print
     _LCD_data
       _LCD_sendByte
   _LCD_setCursor
     _LCD_command

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14     14      14    100.0%
BANK0               80      8       8     10.0%
BANK1               80      0       0      0.0%
BANK3               96      0       0      0.0%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      22      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Tue Feb 18 15:56:25 2025

                       pc 0002                        _BF 04A0                        l41 06A0  
                      l50 05AF                        l35 06D9                        l44 05A7  
                      l60 05ED                        l36 06D9                        l53 05B3  
                      l47 05AB                        l63 06E4                        l71 0608  
                      l56 05DE                        l64 06E9                        l80 0797  
                      l65 06EE                        l58 05E4                        l74 05C5  
                      l68 0735                        l77 05D8                        l93 0624  
                      l86 063C                        l87 0644                        l99 0652  
                      fsr 0004                       l100 066A                       l222 07FB  
                     l800 06F2                       l810 06FC                       l802 06F3  
                     l820 0713                       l812 06FD                       l804 06F8  
                     l900 062D                       l822 0718                       l814 0702  
                     l806 06F9                       l830 05B5                       l910 0616  
                     l902 0635                       l840 07A8                       l824 071A  
                     l816 0708                       l808 06FB                       l832 05BC  
                     l912 0618                       l904 063E                       l850 07D5  
                     l842 07AB                       l826 072B                       l818 070E  
                     l834 05C7                       l906 0609                       l914 06A1  
                     l852 07E3                       l844 07B6                       l828 05EF  
                     l836 05CF                       l908 060A                       l916 06C3  
                     l854 07E4                       l846 07BA                       l838 0798  
                     l862 066B                       l782 05AC                       l790 06DE  
                     l870 0736                       l918 06CA                       l856 07ED  
                     l848 07C3                       l864 066F                       l784 05A4  
                     l792 06DF                       l880 0766                       l872 073E  
                     l858 07F3                       l866 0672                       l786 05DA  
                     l890 064B                       l794 06E3                       l882 076D  
                     l874 0745                       l868 069F                       l788 05E8  
                     l892 064E                       l796 06E8                       l884 0788  
                     l876 0755                       l894 0654                       l798 06ED  
                     l886 0791                       l878 075A                       l896 0665  
                     l888 0646                       l898 0628                       u220 05B3  
                     u300 06F8                       u221 05B2                       u301 06F7  
                     u230 05AB                       u231 05AA                       u320 07A8  
                     u240 05E4                       u400 064B                       u321 07A7  
                     u241 05E3                       u401 064A                       u250 05E8  
                     u410 062D                       u251 05E7                       u315 05F4  
                     u411 062C                       u340 07BA                       u260 06E3  
                     u420 0624                       u341 07B9                       u261 06E2  
                     u421 0623                       u270 06E8                       u335 07AD  
                     u271 06E7                       u360 07D5                       u280 06ED  
                     _PEN 048A                       u361 07D4                       u281 06EC  
                     u290 06F2                       u355 07BC                       u291 06F1  
                     u507 05C0                       u380 07F3                       u381 07F2  
                     u365 07D1                       u517 0715                       u437 05D3  
                     u390 0682                       u375 07E5                       u527 0732  
                     u447 073A                       u457 0749                       u395 067D  
                     u467 0757                       _SEN 0488                       u477 0763  
                     u487 0771                       u497 078C                       fsr0 0004  
                    STR_1 0009                      STR_2 0014              ?_LCD_command 0070  
                    _main 06A1                      btemp 007E                      start 0000  
           _LCD_backlight 0645          ?_I2C_Master_Init 0020          ?_I2C_Master_Stop 0070  
        __end_of_LCD_data 05D9          __end_of_LCD_init 0798                     ?_main 0070  
         __end_of___lldiv 07FC             ?_LCD_sendByte 0075                     pclath 000A  
                   status 0003                     wtemp0 007E           __initialization 07FC  
          ?_LCD_backlight 0070         _LCD_backlight$132 0072              __end_of_main 06DD  
          LCD_sendByte@rs 0075                    ??_main 007E             _LCD_setCursor 0625  
       ?_I2C_Master_Start 0070         ?_I2C_Master_Write 0070         __end_of_LCD_print 0625  
          ??_LCD_sendByte 0076        ??_I2C_Master_Start 0070        ??_I2C_Master_Write 0070  
                  _SSPADD 0093                    _SSPCON 0014                    _SSPBUF 0013  
               ??___lldiv 0078              LCD_data@data 007A            ?_LCD_setCursor 007B  
      LCD_backlight@state 0071   __end_of__initialization 07FC                 ?_LCD_data 0070  
               ?_LCD_init 0070           ??_LCD_backlight 0071            __pcstackCOMMON 0070  
          _LCD_sendNibble 06DD              LCD_print@str 007B                ??_LCD_data 0078  
              ??_LCD_init 007B                __pmaintext 06A1      __end_of_LCD_sendByte 0609  
         ??_LCD_setCursor 007C        LCD_sendNibble@data 0074    __end_of_LCD_sendNibble 0736  
                 _SSPCON2 0091                   _SSPSTAT 0094      LCD_sendNibble@nibble 0073  
              __stringtab 0003                   ___lldiv 0798                   __ptext1 0625  
                 __ptext2 0609                   __ptext3 05C6                   __ptext4 0736  
                 __ptext5 05B4                   __ptext6 05EE                   __ptext7 06DD  
                 __ptext8 0645                   __ptext9 05D9           ?_LCD_sendNibble 0071  
    end_of_initialization 07FC         _LCD_setCursor$125 0021                 _LCD_print 0609  
         ___lldiv@divisor 0070           ___lldiv@counter 007D        LCD_setCursor@linha 0020  
        I2C_Master_Init@c 0020                ?_LCD_print 007B       start_initialization 07FC  
           ??_LCD_command 0078              _LCD_sendByte 05EE          LCD_sendByte@byte 0077  
       ??_I2C_Master_Init 0024         ??_I2C_Master_Stop 0070          LCD_sendNibble@rs 0071  
   __end_of_LCD_backlight 066B         LCD_backlight@data 0074          LCD_setCursor@pos 0023  
               ___latbits 0002             __pcstackBANK0 0020               ??_LCD_print 007C  
        _I2C_Master_Start 05A4          _I2C_Master_Write 05D9       __end_of_LCD_command 05C6  
                ?___lldiv 0070          ??_LCD_sendNibble 0072      I2C_Master_Write@data 0070  
   __end_of_LCD_setCursor 0645                 __pstrings 0003                  _LCD_data 05C6  
                _LCD_init 0736               __stringbase 0008               _LCD_command 05B4  
      __end_of__stringtab 0009           _I2C_Master_Init 066B           _I2C_Master_Stop 05AC  
                __ptext10 05AC                  __ptext11 05A4                  __ptext12 066B  
                __ptext13 0798  __end_of_I2C_Master_Start 05AC  __end_of_I2C_Master_Write 05EE  
        ___lldiv@dividend 0074                 stringcode 0003       LCD_setCursor@coluna 007B  
 __end_of_I2C_Master_Init 06A1   __end_of_I2C_Master_Stop 05B4          ___lldiv@quotient 0079  
                stringdir 0003                  stringtab 0003               _SSPCON2bits 0091  
          LCD_command@cmd 007A  
