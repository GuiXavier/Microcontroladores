

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Tue Feb 18 15:42:47 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F877
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,space=0,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    12                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2,group=3
    24                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2,group=1
    25                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2,group=1
    26                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2,group=3
    27                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2,group=3
    28                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2,group=2
    29                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2,group=2
    30                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,space=0,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,space=0,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,space=0,merge=1,delta=2
    35                           	psect	text24,local,class=CODE,space=0,merge=1,delta=2
    36                           	psect	text25,local,class=CODE,space=0,merge=1,delta=2,group=2
    37                           	dabs	1,0x7E,2
    38     0000                     
    39                           ; Generated 12/10/2023 GMT
    40                           ; 
    41                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution. Publication is not required when
    55                           ;        this file is used in an embedded application.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC16F877 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73     0004                     fsr             equ	4
    74     0004                     fsr0            equ	4
    75     0000                     indf            equ	0
    76     0000                     indf0           equ	0
    77     0002                     pc              equ	2
    78     0002                     pcl             equ	2
    79     000A                     pclath          equ	10
    80     0003                     status          equ	3
    81     0000                     INDF            equ	0	;# 
    82     0001                     TMR0            equ	1	;# 
    83     0002                     PCL             equ	2	;# 
    84     0003                     STATUS          equ	3	;# 
    85     0004                     FSR             equ	4	;# 
    86     0005                     PORTA           equ	5	;# 
    87     0006                     PORTB           equ	6	;# 
    88     0007                     PORTC           equ	7	;# 
    89     0008                     PORTD           equ	8	;# 
    90     0009                     PORTE           equ	9	;# 
    91     000A                     PCLATH          equ	10	;# 
    92     000B                     INTCON          equ	11	;# 
    93     000C                     PIR1            equ	12	;# 
    94     000D                     PIR2            equ	13	;# 
    95     000E                     TMR1            equ	14	;# 
    96     000E                     TMR1L           equ	14	;# 
    97     000F                     TMR1H           equ	15	;# 
    98     0010                     T1CON           equ	16	;# 
    99     0011                     TMR2            equ	17	;# 
   100     0012                     T2CON           equ	18	;# 
   101     0013                     SSPBUF          equ	19	;# 
   102     0014                     SSPCON          equ	20	;# 
   103     0015                     CCPR1           equ	21	;# 
   104     0015                     CCPR1L          equ	21	;# 
   105     0016                     CCPR1H          equ	22	;# 
   106     0017                     CCP1CON         equ	23	;# 
   107     0018                     RCSTA           equ	24	;# 
   108     0019                     TXREG           equ	25	;# 
   109     001A                     RCREG           equ	26	;# 
   110     001B                     CCPR2           equ	27	;# 
   111     001B                     CCPR2L          equ	27	;# 
   112     001C                     CCPR2H          equ	28	;# 
   113     001D                     CCP2CON         equ	29	;# 
   114     001E                     ADRESH          equ	30	;# 
   115     001F                     ADCON0          equ	31	;# 
   116     0081                     OPTION_REG      equ	129	;# 
   117     0085                     TRISA           equ	133	;# 
   118     0086                     TRISB           equ	134	;# 
   119     0087                     TRISC           equ	135	;# 
   120     0088                     TRISD           equ	136	;# 
   121     0089                     TRISE           equ	137	;# 
   122     008C                     PIE1            equ	140	;# 
   123     008D                     PIE2            equ	141	;# 
   124     008E                     PCON            equ	142	;# 
   125     0091                     SSPCON2         equ	145	;# 
   126     0092                     PR2             equ	146	;# 
   127     0093                     SSPADD          equ	147	;# 
   128     0094                     SSPSTAT         equ	148	;# 
   129     0098                     TXSTA           equ	152	;# 
   130     0099                     SPBRG           equ	153	;# 
   131     009E                     ADRESL          equ	158	;# 
   132     009F                     ADCON1          equ	159	;# 
   133     010C                     EEDATA          equ	268	;# 
   134     010D                     EEADR           equ	269	;# 
   135     010E                     EEDATH          equ	270	;# 
   136     010F                     EEADRH          equ	271	;# 
   137     018C                     EECON1          equ	396	;# 
   138     018D                     EECON2          equ	397	;# 
   139     0000                     INDF            equ	0	;# 
   140     0001                     TMR0            equ	1	;# 
   141     0002                     PCL             equ	2	;# 
   142     0003                     STATUS          equ	3	;# 
   143     0004                     FSR             equ	4	;# 
   144     0005                     PORTA           equ	5	;# 
   145     0006                     PORTB           equ	6	;# 
   146     0007                     PORTC           equ	7	;# 
   147     0008                     PORTD           equ	8	;# 
   148     0009                     PORTE           equ	9	;# 
   149     000A                     PCLATH          equ	10	;# 
   150     000B                     INTCON          equ	11	;# 
   151     000C                     PIR1            equ	12	;# 
   152     000D                     PIR2            equ	13	;# 
   153     000E                     TMR1            equ	14	;# 
   154     000E                     TMR1L           equ	14	;# 
   155     000F                     TMR1H           equ	15	;# 
   156     0010                     T1CON           equ	16	;# 
   157     0011                     TMR2            equ	17	;# 
   158     0012                     T2CON           equ	18	;# 
   159     0013                     SSPBUF          equ	19	;# 
   160     0014                     SSPCON          equ	20	;# 
   161     0015                     CCPR1           equ	21	;# 
   162     0015                     CCPR1L          equ	21	;# 
   163     0016                     CCPR1H          equ	22	;# 
   164     0017                     CCP1CON         equ	23	;# 
   165     0018                     RCSTA           equ	24	;# 
   166     0019                     TXREG           equ	25	;# 
   167     001A                     RCREG           equ	26	;# 
   168     001B                     CCPR2           equ	27	;# 
   169     001B                     CCPR2L          equ	27	;# 
   170     001C                     CCPR2H          equ	28	;# 
   171     001D                     CCP2CON         equ	29	;# 
   172     001E                     ADRESH          equ	30	;# 
   173     001F                     ADCON0          equ	31	;# 
   174     0081                     OPTION_REG      equ	129	;# 
   175     0085                     TRISA           equ	133	;# 
   176     0086                     TRISB           equ	134	;# 
   177     0087                     TRISC           equ	135	;# 
   178     0088                     TRISD           equ	136	;# 
   179     0089                     TRISE           equ	137	;# 
   180     008C                     PIE1            equ	140	;# 
   181     008D                     PIE2            equ	141	;# 
   182     008E                     PCON            equ	142	;# 
   183     0091                     SSPCON2         equ	145	;# 
   184     0092                     PR2             equ	146	;# 
   185     0093                     SSPADD          equ	147	;# 
   186     0094                     SSPSTAT         equ	148	;# 
   187     0098                     TXSTA           equ	152	;# 
   188     0099                     SPBRG           equ	153	;# 
   189     009E                     ADRESL          equ	158	;# 
   190     009F                     ADCON1          equ	159	;# 
   191     010C                     EEDATA          equ	268	;# 
   192     010D                     EEADR           equ	269	;# 
   193     010E                     EEDATH          equ	270	;# 
   194     010F                     EEADRH          equ	271	;# 
   195     018C                     EECON1          equ	396	;# 
   196     018D                     EECON2          equ	397	;# 
   197     0019                     _TXREG          set	25
   198     0018                     _RCSTA          set	24
   199     0013                     _SSPBUF         set	19
   200     0014                     _SSPCON         set	20
   201     0064                     _TXIF           set	100
   202     0099                     _SPBRG          set	153
   203     0098                     _TXSTA          set	152
   204     0091                     _SSPCON2bits    set	145
   205     0094                     _SSPSTAT        set	148
   206     0093                     _SSPADD         set	147
   207     0091                     _SSPCON2        set	145
   208     04A0                     _BF             set	1184
   209     048A                     _PEN            set	1162
   210     0488                     _SEN            set	1160
   211                           
   212                           	psect	strings
   213     0003                     __pstrings:
   214     0003                     stringtab:
   215     0003                     __stringtab:
   216                           
   217                           ;	String table - string pointers are 1 byte each
   218     0003  1BFF               	btfsc	btemp+1,7
   219     0004  280D               	ljmp	stringcode
   220     0005  1383               	bcf	3,7
   221     0006  187F               	btfsc	btemp+1,0
   222     0007  1783               	bsf	3,7
   223     0008  0800               	movf	0,w
   224     0009  0A84               	incf	4,f
   225     000A  1903               	skipnz
   226     000B  0AFF               	incf	btemp+1,f
   227     000C  0008               	return
   228     000D                     stringcode:
   229     000D                     stringdir:
   230     000D  3000               	movlw	high stringdir
   231     000E  008A               	movwf	10
   232     000F  0804               	movf	4,w
   233     0010  0A84               	incf	4,f
   234     0011  0782               	addwf	2,f
   235     0012                     __stringbase:
   236     0012  3400               	retlw	0
   237     0013                     __end_of__stringtab:
   238     0013                     STR_4:
   239     0013  343F               	retlw	63	;'?'
   240     0014  3420               	retlw	32	;' '
   241     0015  3444               	retlw	68	;'D'
   242     0016  3469               	retlw	105	;'i'
   243     0017  3473               	retlw	115	;'s'
   244     0018  3470               	retlw	112	;'p'
   245     0019  346F               	retlw	111	;'o'
   246     001A  3473               	retlw	115	;'s'
   247     001B  3469               	retlw	105	;'i'
   248     001C  3474               	retlw	116	;'t'
   249     001D  3469               	retlw	105	;'i'
   250     001E  3476               	retlw	118	;'v'
   251     001F  346F               	retlw	111	;'o'
   252     0020  3420               	retlw	32	;' '
   253     0021  3465               	retlw	101	;'e'
   254     0022  346E               	retlw	110	;'n'
   255     0023  3463               	retlw	99	;'c'
   256     0024  346F               	retlw	111	;'o'
   257     0025  346E               	retlw	110	;'n'
   258     0026  3474               	retlw	116	;'t'
   259     0027  3472               	retlw	114	;'r'
   260     0028  3461               	retlw	97	;'a'
   261     0029  3464               	retlw	100	;'d'
   262     002A  346F               	retlw	111	;'o'
   263     002B  3420               	retlw	32	;' '
   264     002C  346E               	retlw	110	;'n'
   265     002D  346F               	retlw	111	;'o'
   266     002E  3420               	retlw	32	;' '
   267     002F  3465               	retlw	101	;'e'
   268     0030  346E               	retlw	110	;'n'
   269     0031  3464               	retlw	100	;'d'
   270     0032  3465               	retlw	101	;'e'
   271     0033  3472               	retlw	114	;'r'
   272     0034  3465               	retlw	101	;'e'
   273     0035  3463               	retlw	99	;'c'
   274     0036  346F               	retlw	111	;'o'
   275     0037  343A               	retlw	58	;':'
   276     0038  3420               	retlw	32	;' '
   277     0039  3430               	retlw	48	;'0'
   278     003A  3478               	retlw	120	;'x'
   279     003B  3400               	retlw	0
   280     003C                     STR_6:
   281     003C  343F               	retlw	63	;'?'
   282     003D  3420               	retlw	32	;' '
   283     003E  344E               	retlw	78	;'N'
   284     003F  3465               	retlw	101	;'e'
   285     0040  346E               	retlw	110	;'n'
   286     0041  3468               	retlw	104	;'h'
   287     0042  3475               	retlw	117	;'u'
   288     0043  346D               	retlw	109	;'m'
   289     0044  3420               	retlw	32	;' '
   290     0045  3464               	retlw	100	;'d'
   291     0046  3469               	retlw	105	;'i'
   292     0047  3473               	retlw	115	;'s'
   293     0048  3470               	retlw	112	;'p'
   294     0049  346F               	retlw	111	;'o'
   295     004A  3473               	retlw	115	;'s'
   296     004B  3469               	retlw	105	;'i'
   297     004C  3474               	retlw	116	;'t'
   298     004D  3469               	retlw	105	;'i'
   299     004E  3476               	retlw	118	;'v'
   300     004F  346F               	retlw	111	;'o'
   301     0050  3420               	retlw	32	;' '
   302     0051  3449               	retlw	73	;'I'
   303     0052  3432               	retlw	50	;'2'
   304     0053  3443               	retlw	67	;'C'
   305     0054  3420               	retlw	32	;' '
   306     0055  3465               	retlw	101	;'e'
   307     0056  346E               	retlw	110	;'n'
   308     0057  3463               	retlw	99	;'c'
   309     0058  346F               	retlw	111	;'o'
   310     0059  346E               	retlw	110	;'n'
   311     005A  3474               	retlw	116	;'t'
   312     005B  3472               	retlw	114	;'r'
   313     005C  3461               	retlw	97	;'a'
   314     005D  3464               	retlw	100	;'d'
   315     005E  346F               	retlw	111	;'o'
   316     005F  3421               	retlw	33	;'!'
   317     0060  340D               	retlw	13
   318     0061  340A               	retlw	10
   319     0062  3400               	retlw	0
   320     0063                     STR_3:
   321     0063  340D               	retlw	13
   322     0064  340A               	retlw	10
   323     0065  3449               	retlw	73	;'I'
   324     0066  346E               	retlw	110	;'n'
   325     0067  3469               	retlw	105	;'i'
   326     0068  3463               	retlw	99	;'c'
   327     0069  3469               	retlw	105	;'i'
   328     006A  3461               	retlw	97	;'a'
   329     006B  346E               	retlw	110	;'n'
   330     006C  3464               	retlw	100	;'d'
   331     006D  346F               	retlw	111	;'o'
   332     006E  3420               	retlw	32	;' '
   333     006F  3465               	retlw	101	;'e'
   334     0070  3473               	retlw	115	;'s'
   335     0071  3463               	retlw	99	;'c'
   336     0072  3461               	retlw	97	;'a'
   337     0073  346E               	retlw	110	;'n'
   338     0074  3465               	retlw	101	;'e'
   339     0075  3461               	retlw	97	;'a'
   340     0076  346D               	retlw	109	;'m'
   341     0077  3465               	retlw	101	;'e'
   342     0078  346E               	retlw	110	;'n'
   343     0079  3474               	retlw	116	;'t'
   344     007A  346F               	retlw	111	;'o'
   345     007B  3420               	retlw	32	;' '
   346     007C  3449               	retlw	73	;'I'
   347     007D  3432               	retlw	50	;'2'
   348     007E  3443               	retlw	67	;'C'
   349     007F  342E               	retlw	46	;'.'
   350     0080  342E               	retlw	46	;'.'
   351     0081  342E               	retlw	46	;'.'
   352     0082  340D               	retlw	13
   353     0083  340A               	retlw	10
   354     0084  3400               	retlw	0
   355     0085                     STR_1:
   356     0085  344A               	retlw	74	;'J'
   357     0086  346F               	retlw	111	;'o'
   358     0087  3461               	retlw	97	;'a'
   359     0088  346F               	retlw	111	;'o'
   360     0089  3420               	retlw	32	;' '
   361     008A  3450               	retlw	80	;'P'
   362     008B  3465               	retlw	101	;'e'
   363     008C  3464               	retlw	100	;'d'
   364     008D  3472               	retlw	114	;'r'
   365     008E  346F               	retlw	111	;'o'
   366     008F  3400               	retlw	0
   367     0090                     STR_2:
   368     0090  3432               	retlw	50	;'2'
   369     0091  3430               	retlw	48	;'0'
   370     0092  3439               	retlw	57	;'9'
   371     0093  3435               	retlw	53	;'5'
   372     0094  3438               	retlw	56	;'8'
   373     0095  3438               	retlw	56	;'8'
   374     0096  3432               	retlw	50	;'2'
   375     0097  3400               	retlw	0
   376     0098                     STR_7:
   377     0098  3425               	retlw	37	;'%'
   378     0099  3475               	retlw	117	;'u'
   379     009A  3400               	retlw	0
   380     0060                     STR_5           equ	STR_6+36
   381                           
   382                           	psect	cinit
   383     07EC                     start_initialization:	
   384                           ; #config settings
   385                           
   386     07EC                     __initialization:
   387                           
   388                           ; Clear objects allocated to BANK0
   389     07EC  1283               	bcf	3,5	;RP0=0, select bank0
   390     07ED  1303               	bcf	3,6	;RP1=0, select bank0
   391     07EE  01D0               	clrf	__pbssBANK0& (0+127)
   392     07EF  01D1               	clrf	(__pbssBANK0+1)& (0+127)
   393     07F0  01D2               	clrf	(__pbssBANK0+2)& (0+127)
   394     07F1  01D3               	clrf	(__pbssBANK0+3)& (0+127)
   395     07F2  01D4               	clrf	(__pbssBANK0+4)& (0+127)
   396                           
   397                           ; Clear objects allocated to BANK1
   398     07F3  1383               	bcf	3,7	;select IRP bank0
   399     07F4  30A0               	movlw	low __pbssBANK1
   400     07F5  0084               	movwf	4
   401     07F6  30C0               	movlw	low (__pbssBANK1+32)
   402     07F7  120A  118A  22BB  120A  118A  	fcall	clear_ram0
   403     07FC                     end_of_initialization:	
   404                           ;End of C runtime variable initialization code
   405                           
   406     07FC                     __end_of__initialization:
   407     07FC  0183               	clrf	3
   408     07FD  120A  118A  2CC8   	ljmp	_main	;jump to C main() function
   409                           
   410                           	psect	bssBANK0
   411     0050                     __pbssBANK0:
   412     0050                     _width:
   413     0050                     	ds	2
   414     0052                     _prec:
   415     0052                     	ds	2
   416     0054                     _flags:
   417     0054                     	ds	1
   418                           
   419                           	psect	bssBANK1
   420     00A0                     __pbssBANK1:
   421     00A0                     _dbuf:
   422     00A0                     	ds	32
   423                           
   424                           	psect	clrtext
   425     02BB                     clear_ram0:	
   426                           ;	Called with FSR containing the base address, and
   427                           ;	W with the last address+1
   428                           
   429     02BB  0064               	clrwdt	;clear the watchdog before getting into this loop
   430     02BC                     clrloop0:
   431     02BC  0180               	clrf	0	;clear RAM location pointed to by FSR
   432     02BD  0A84               	incf	4,f	;increment pointer
   433     02BE  0604               	xorwf	4,w	;XOR with final address
   434     02BF  1903               	btfsc	3,2	;have we reached the end yet?
   435     02C0  3400               	retlw	0	;all done for this memory range, return
   436     02C1  0604               	xorwf	4,w	;XOR again to restore value
   437     02C2  2ABC               	goto	clrloop0	;do the next byte
   438                           
   439                           	psect	cstackCOMMON
   440     0070                     __pcstackCOMMON:
   441     0070                     ?_UART_Init:
   442     0070                     ?_I2C_scan:	
   443                           ; 1 bytes @ 0x0
   444                           
   445     0070                     ?_LCD_init:	
   446                           ; 1 bytes @ 0x0
   447                           
   448     0070                     ?_LCD_backlight:	
   449                           ; 1 bytes @ 0x0
   450                           
   451     0070                     ?_putch:	
   452                           ; 1 bytes @ 0x0
   453                           
   454     0070                     ?_main:	
   455                           ; 1 bytes @ 0x0
   456                           
   457     0070                     ?_I2C_Master_Start:	
   458                           ; 1 bytes @ 0x0
   459                           
   460     0070                     ?_I2C_Master_Stop:	
   461                           ; 1 bytes @ 0x0
   462                           
   463     0070                     ?_I2C_Master_Write:	
   464                           ; 1 bytes @ 0x0
   465                           
   466     0070                     ?_LCD_command:	
   467                           ; 1 bytes @ 0x0
   468                           
   469     0070                     ?_LCD_data:	
   470                           ; 1 bytes @ 0x0
   471                           
   472     0070                     ?_UART_PrintChar:	
   473                           ; 1 bytes @ 0x0
   474                           
   475     0070                     ?_fputc:	
   476                           ; 1 bytes @ 0x0
   477                           
   478     0070                     ?___lwdiv:	
   479                           ; 2 bytes @ 0x0
   480                           
   481     0070                     ?___lwmod:	
   482                           ; 2 bytes @ 0x0
   483                           
   484     0070                     ?___lldiv:	
   485                           ; 2 bytes @ 0x0
   486                           
   487     0070                     I2C_Master_Write@data:	
   488                           ; 4 bytes @ 0x0
   489                           
   490     0070                     UART_PrintChar@c:	
   491                           ; 1 bytes @ 0x0
   492                           
   493     0070                     putch@c:	
   494                           ; 1 bytes @ 0x0
   495                           
   496     0070                     ___lwdiv@divisor:	
   497                           ; 1 bytes @ 0x0
   498                           
   499     0070                     ___lwmod@divisor:	
   500                           ; 2 bytes @ 0x0
   501                           
   502     0070                     fputc@c:	
   503                           ; 2 bytes @ 0x0
   504                           
   505     0070                     ___lldiv@divisor:	
   506                           ; 2 bytes @ 0x0
   507                           
   508     0070                     ??_UART_Init:	
   509                           ; 4 bytes @ 0x0
   510                           
   511     0070                     ??_putch:	
   512                           ; 1 bytes @ 0x0
   513                           
   514     0070                     ??_I2C_Master_Start:	
   515                           ; 1 bytes @ 0x0
   516                           
   517     0070                     ??_I2C_Master_Stop:	
   518                           ; 1 bytes @ 0x0
   519                           
   520     0070                     ??_I2C_Master_Write:	
   521                           ; 1 bytes @ 0x0
   522                           
   523     0070                     ??_UART_PrintChar:	
   524                           ; 1 bytes @ 0x0
   525                           
   526                           
   527                           ; 1 bytes @ 0x0
   528     0070                     	ds	1
   529     0071                     ?_UART_Print:
   530     0071                     ?_LCD_sendNibble:	
   531                           ; 1 bytes @ 0x1
   532                           
   533     0071                     LCD_sendNibble@rs:	
   534                           ; 1 bytes @ 0x1
   535                           
   536     0071                     LCD_backlight@state:	
   537                           ; 1 bytes @ 0x1
   538                           
   539     0071                     UART_Print@str:	
   540                           ; 1 bytes @ 0x1
   541                           
   542     0071                     ??_LCD_backlight:	
   543                           ; 2 bytes @ 0x1
   544                           
   545                           
   546                           ; 1 bytes @ 0x1
   547     0071                     	ds	1
   548     0072                     _LCD_backlight$167:
   549     0072                     ___lwdiv@dividend:	
   550                           ; 2 bytes @ 0x2
   551                           
   552     0072                     ___lwmod@dividend:	
   553                           ; 2 bytes @ 0x2
   554                           
   555     0072                     fputc@fp:	
   556                           ; 2 bytes @ 0x2
   557                           
   558     0072                     ??_LCD_sendNibble:	
   559                           ; 2 bytes @ 0x2
   560                           
   561                           
   562                           ; 1 bytes @ 0x2
   563     0072                     	ds	1
   564     0073                     LCD_sendNibble@nibble:
   565     0073                     ??_UART_Print:	
   566                           ; 1 bytes @ 0x3
   567                           
   568                           
   569                           ; 1 bytes @ 0x3
   570     0073                     	ds	1
   571     0074                     LCD_sendNibble@data:
   572     0074                     LCD_backlight@data:	
   573                           ; 1 bytes @ 0x4
   574                           
   575     0074                     ___lwmod@counter:	
   576                           ; 1 bytes @ 0x4
   577                           
   578     0074                     ___lwdiv@quotient:	
   579                           ; 1 bytes @ 0x4
   580                           
   581     0074                     ___lldiv@dividend:	
   582                           ; 2 bytes @ 0x4
   583                           
   584     0074                     ??_fputc:	
   585                           ; 4 bytes @ 0x4
   586                           
   587     0074                     ??___lwdiv:	
   588                           ; 1 bytes @ 0x4
   589                           
   590     0074                     ??___lwmod:	
   591                           ; 1 bytes @ 0x4
   592                           
   593                           
   594                           ; 1 bytes @ 0x4
   595     0074                     	ds	1
   596     0075                     ?_LCD_sendByte:
   597     0075                     LCD_sendByte@rs:	
   598                           ; 1 bytes @ 0x5
   599                           
   600                           
   601                           ; 1 bytes @ 0x5
   602     0075                     	ds	1
   603     0076                     ___lwdiv@counter:
   604     0076                     ??_LCD_sendByte:	
   605                           ; 1 bytes @ 0x6
   606                           
   607                           
   608                           ; 1 bytes @ 0x6
   609     0076                     	ds	1
   610     0077                     LCD_sendByte@byte:
   611                           
   612                           ; 1 bytes @ 0x7
   613     0077                     	ds	1
   614     0078                     ??_LCD_command:
   615     0078                     ??_LCD_data:	
   616                           ; 1 bytes @ 0x8
   617                           
   618     0078                     ??___lldiv:	
   619                           ; 1 bytes @ 0x8
   620                           
   621                           
   622                           ; 1 bytes @ 0x8
   623     0078                     	ds	1
   624     0079                     ___lldiv@quotient:
   625                           
   626                           ; 4 bytes @ 0x9
   627     0079                     	ds	1
   628     007A                     LCD_command@cmd:
   629     007A                     LCD_data@data:	
   630                           ; 1 bytes @ 0xA
   631                           
   632                           
   633                           ; 1 bytes @ 0xA
   634     007A                     	ds	1
   635     007B                     ?_LCD_setCursor:
   636     007B                     ?_LCD_print:	
   637                           ; 1 bytes @ 0xB
   638                           
   639     007B                     LCD_setCursor@coluna:	
   640                           ; 1 bytes @ 0xB
   641                           
   642     007B                     LCD_print@str:	
   643                           ; 1 bytes @ 0xB
   644                           
   645     007B                     ??_LCD_init:	
   646                           ; 1 bytes @ 0xB
   647                           
   648                           
   649                           ; 1 bytes @ 0xB
   650     007B                     	ds	1
   651     007C                     ??_LCD_setCursor:
   652     007C                     ??_LCD_print:	
   653                           ; 1 bytes @ 0xC
   654                           
   655                           
   656                           ; 1 bytes @ 0xC
   657     007C                     	ds	1
   658     007D                     ___lldiv@counter:
   659     007D                     vfprintf@cfmt:	
   660                           ; 1 bytes @ 0xD
   661                           
   662     007D                     ??_vfprintf:	
   663                           ; 1 bytes @ 0xD
   664                           
   665                           
   666                           ; 1 bytes @ 0xD
   667     007D                     	ds	1
   668     007E                     ??_UART_PrintInt:
   669     007E                     ??_main:	
   670                           ; 1 bytes @ 0xE
   671                           
   672                           
   673                           	psect	cstackBANK0
   674     0020                     __pcstackBANK0:	
   675                           ; 1 bytes @ 0xE
   676                           
   677     0020                     ?_I2C_Master_Init:
   678     0020                     ?_vfpfcnvrt:	
   679                           ; 1 bytes @ 0x0
   680                           
   681     0020                     LCD_setCursor@linha:	
   682                           ; 1 bytes @ 0x0
   683                           
   684     0020                     vfpfcnvrt@fp:	
   685                           ; 1 bytes @ 0x0
   686                           
   687     0020                     I2C_Master_Init@c:	
   688                           ; 2 bytes @ 0x0
   689                           
   690                           
   691                           ; 4 bytes @ 0x0
   692     0020                     	ds	1
   693     0021                     _LCD_setCursor$160:
   694                           
   695                           ; 2 bytes @ 0x1
   696     0021                     	ds	1
   697     0022                     vfpfcnvrt@fmt:
   698                           
   699                           ; 1 bytes @ 0x2
   700     0022                     	ds	1
   701     0023                     LCD_setCursor@pos:
   702     0023                     vfpfcnvrt@ap:	
   703                           ; 1 bytes @ 0x3
   704                           
   705                           
   706                           ; 1 bytes @ 0x3
   707     0023                     	ds	1
   708     0024                     ??_I2C_Master_Init:
   709     0024                     ??_vfpfcnvrt:	
   710                           ; 1 bytes @ 0x4
   711                           
   712                           
   713                           ; 1 bytes @ 0x4
   714     0024                     	ds	2
   715     0026                     vfpfcnvrt@convarg:
   716                           
   717                           ; 4 bytes @ 0x6
   718     0026                     	ds	4
   719     002A                     vfpfcnvrt@cp:
   720                           
   721                           ; 1 bytes @ 0xA
   722     002A                     	ds	1
   723     002B                     vfpfcnvrt@c:
   724                           
   725                           ; 1 bytes @ 0xB
   726     002B                     	ds	1
   727     002C                     ?_vfprintf:
   728     002C                     vfprintf@fp:	
   729                           ; 2 bytes @ 0xC
   730                           
   731                           
   732                           ; 2 bytes @ 0xC
   733     002C                     	ds	2
   734     002E                     vfprintf@fmt:
   735                           
   736                           ; 1 bytes @ 0xE
   737     002E                     	ds	1
   738     002F                     vfprintf@ap:
   739                           
   740                           ; 1 bytes @ 0xF
   741     002F                     	ds	1
   742     0030                     ?_sprintf:
   743     0030                     sprintf@s:	
   744                           ; 2 bytes @ 0x10
   745                           
   746                           
   747                           ; 1 bytes @ 0x10
   748     0030                     	ds	1
   749     0031                     sprintf@fmt:
   750                           
   751                           ; 1 bytes @ 0x11
   752     0031                     	ds	3
   753     0034                     ??_sprintf:
   754                           
   755                           ; 1 bytes @ 0x14
   756     0034                     	ds	1
   757     0035                     sprintf@ap:
   758                           
   759                           ; 1 bytes @ 0x15
   760     0035                     	ds	1
   761     0036                     sprintf@f:
   762                           
   763                           ; 11 bytes @ 0x16
   764     0036                     	ds	11
   765     0041                     ?_UART_PrintInt:
   766     0041                     UART_PrintInt@valor:	
   767                           ; 1 bytes @ 0x21
   768                           
   769                           
   770                           ; 2 bytes @ 0x21
   771     0041                     	ds	2
   772     0043                     UART_PrintInt@buffer:
   773                           
   774                           ; 10 bytes @ 0x23
   775     0043                     	ds	10
   776     004D                     ??_I2C_scan:
   777                           
   778                           ; 1 bytes @ 0x2D
   779     004D                     	ds	2
   780     004F                     I2C_scan@address:
   781                           
   782                           ; 1 bytes @ 0x2F
   783     004F                     	ds	1
   784                           
   785                           	psect	maintext
   786     04C8                     __pmaintext:	
   787 ;;
   788 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   789 ;;
   790 ;; *************** function _main *****************
   791 ;; Defined at:
   792 ;;		line 45 in file "atividade13.c"
   793 ;; Parameters:    Size  Location     Type
   794 ;;		None
   795 ;; Auto vars:     Size  Location     Type
   796 ;;		None
   797 ;; Return value:  Size  Location     Type
   798 ;;                  1    wreg      void 
   799 ;; Registers used:
   800 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   801 ;; Tracked objects:
   802 ;;		On entry : B00/0
   803 ;;		On exit  : 0/0
   804 ;;		Unchanged: 0/0
   805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   806 ;;      Params:         0       0       0       0       0
   807 ;;      Locals:         0       0       0       0       0
   808 ;;      Temps:          0       0       0       0       0
   809 ;;      Totals:         0       0       0       0       0
   810 ;;Total ram usage:        0 bytes
   811 ;; Hardware stack levels required when called: 7
   812 ;; This function calls:
   813 ;;		_I2C_Master_Init
   814 ;;		_I2C_scan
   815 ;;		_LCD_backlight
   816 ;;		_LCD_init
   817 ;;		_LCD_print
   818 ;;		_LCD_setCursor
   819 ;;		_UART_Init
   820 ;; This function is called by:
   821 ;;		Startup code after reset
   822 ;; This function uses a non-reentrant model
   823 ;;
   824                           
   825     04C8                     _main:	
   826                           ;psect for function _main
   827                           
   828     04C8                     l1398:	
   829                           ;incstack = 0
   830                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   831                           
   832                           
   833                           ;atividade13.c: 46:     UART_Init();
   834     04C8  120A  118A  22CD  120A  118A  	fcall	_UART_Init
   835     04CD                     l1400:
   836                           
   837                           ;atividade13.c: 47:     I2C_Master_Init(100000);
   838     04CD  3000               	movlw	0
   839     04CE  1283               	bcf	3,5	;RP0=0, select bank0
   840     04CF  1303               	bcf	3,6	;RP1=0, select bank0
   841     04D0  00A3               	movwf	I2C_Master_Init@c+3
   842     04D1  3001               	movlw	1
   843     04D2  00A2               	movwf	I2C_Master_Init@c+2
   844     04D3  3086               	movlw	134
   845     04D4  00A1               	movwf	I2C_Master_Init@c+1
   846     04D5  30A0               	movlw	160
   847     04D6  00A0               	movwf	I2C_Master_Init@c
   848     04D7  120A  118A  2418  120A  118A  	fcall	_I2C_Master_Init
   849     04DC                     l1402:
   850                           
   851                           ;atividade13.c: 48:     I2C_scan();
   852     04DC  120A  118A  2567  120A  118A  	fcall	_I2C_scan
   853     04E1                     l1404:
   854                           
   855                           ;atividade13.c: 50:     LCD_init();
   856     04E1  120A  118A  25C8  120A  118A  	fcall	_LCD_init
   857     04E6                     l1406:
   858                           
   859                           ;atividade13.c: 51:     LCD_backlight(1);
   860     04E6  3001               	movlw	1
   861     04E7  120A  118A  23F2  120A  118A  	fcall	_LCD_backlight
   862     04EC                     l1408:
   863                           
   864                           ;atividade13.c: 53:     LCD_setCursor(1, 1);
   865     04EC  01FB               	clrf	LCD_setCursor@coluna
   866     04ED  0AFB               	incf	LCD_setCursor@coluna,f
   867     04EE  3001               	movlw	1
   868     04EF  120A  118A  2364  120A  118A  	fcall	_LCD_setCursor
   869     04F4                     l1410:
   870                           
   871                           ;atividade13.c: 54:     LCD_print("Joao Pedro");
   872     04F4  3073               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   873     04F5  00FB               	movwf	LCD_print@str
   874     04F6  120A  118A  2348  120A  118A  	fcall	_LCD_print
   875     04FB                     l1412:
   876                           
   877                           ;atividade13.c: 56:     LCD_setCursor(2, 1);
   878     04FB  01FB               	clrf	LCD_setCursor@coluna
   879     04FC  0AFB               	incf	LCD_setCursor@coluna,f
   880     04FD  3002               	movlw	2
   881     04FE  120A  118A  2364  120A  118A  	fcall	_LCD_setCursor
   882     0503                     l1414:
   883                           
   884                           ;atividade13.c: 57:     LCD_print("2095882");
   885     0503  307E               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   886     0504  00FB               	movwf	LCD_print@str
   887     0505  120A  118A  2348  120A  118A  	fcall	_LCD_print
   888     050A                     l55:	
   889                           ;atividade13.c: 59:     while(1);
   890                           
   891     050A                     l56:
   892     050A  2D0A               	goto	l55
   893     050B  120A  118A  2800   	ljmp	start
   894     050E                     __end_of_main:
   895                           
   896                           	psect	text1
   897     02CD                     __ptext1:	
   898 ;; *************** function _UART_Init *****************
   899 ;; Defined at:
   900 ;;		line 202 in file "atividade13.c"
   901 ;; Parameters:    Size  Location     Type
   902 ;;		None
   903 ;; Auto vars:     Size  Location     Type
   904 ;;		None
   905 ;; Return value:  Size  Location     Type
   906 ;;                  1    wreg      void 
   907 ;; Registers used:
   908 ;;		None
   909 ;; Tracked objects:
   910 ;;		On entry : 0/0
   911 ;;		On exit  : 0/0
   912 ;;		Unchanged: 0/0
   913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   914 ;;      Params:         0       0       0       0       0
   915 ;;      Locals:         0       0       0       0       0
   916 ;;      Temps:          0       0       0       0       0
   917 ;;      Totals:         0       0       0       0       0
   918 ;;Total ram usage:        0 bytes
   919 ;; Hardware stack levels used: 1
   920 ;; This function calls:
   921 ;;		Nothing
   922 ;; This function is called by:
   923 ;;		_main
   924 ;; This function uses a non-reentrant model
   925 ;;
   926                           
   927     02CD                     _UART_Init:	
   928                           ;psect for function _UART_Init
   929                           
   930     02CD                     l986:	
   931                           ;incstack = 0
   932                           ; Regs used in _UART_Init: []
   933                           
   934                           
   935                           ;atividade13.c: 203:     TXSTA = 0x24;
   936     02CD  3024               	movlw	36
   937     02CE  1683               	bsf	3,5	;RP0=1, select bank1
   938     02CF  1303               	bcf	3,6	;RP1=0, select bank1
   939     02D0  0098               	movwf	24	;volatile
   940                           
   941                           ;atividade13.c: 204:     RCSTA = 0x90;
   942     02D1  3090               	movlw	144
   943     02D2  1283               	bcf	3,5	;RP0=0, select bank0
   944     02D3  1303               	bcf	3,6	;RP1=0, select bank0
   945     02D4  0098               	movwf	24	;volatile
   946                           
   947                           ;atividade13.c: 205:     SPBRG = 25;
   948     02D5  3019               	movlw	25
   949     02D6  1683               	bsf	3,5	;RP0=1, select bank1
   950     02D7  1303               	bcf	3,6	;RP1=0, select bank1
   951     02D8  0099               	movwf	25	;volatile
   952     02D9                     l129:
   953     02D9  0008               	return
   954     02DA                     __end_of_UART_Init:
   955                           
   956                           	psect	text2
   957     0364                     __ptext2:	
   958 ;; *************** function _LCD_setCursor *****************
   959 ;; Defined at:
   960 ;;		line 180 in file "atividade13.c"
   961 ;; Parameters:    Size  Location     Type
   962 ;;  linha           1    wreg     unsigned char 
   963 ;;  coluna          1   11[COMMON] unsigned char 
   964 ;; Auto vars:     Size  Location     Type
   965 ;;  linha           1    0[BANK0 ] unsigned char 
   966 ;;  pos             1    3[BANK0 ] unsigned char 
   967 ;; Return value:  Size  Location     Type
   968 ;;                  1    wreg      void 
   969 ;; Registers used:
   970 ;;		wreg, status,2, status,0, pclath, cstack
   971 ;; Tracked objects:
   972 ;;		On entry : 0/0
   973 ;;		On exit  : 0/0
   974 ;;		Unchanged: 0/0
   975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   976 ;;      Params:         1       0       0       0       0
   977 ;;      Locals:         0       4       0       0       0
   978 ;;      Temps:          0       0       0       0       0
   979 ;;      Totals:         1       4       0       0       0
   980 ;;Total ram usage:        5 bytes
   981 ;; Hardware stack levels used: 1
   982 ;; Hardware stack levels required when called: 5
   983 ;; This function calls:
   984 ;;		_LCD_command
   985 ;; This function is called by:
   986 ;;		_main
   987 ;; This function uses a non-reentrant model
   988 ;;
   989                           
   990     0364                     _LCD_setCursor:	
   991                           ;psect for function _LCD_setCursor
   992                           
   993                           
   994                           ;incstack = 0
   995                           ; Regs used in _LCD_setCursor: [wreg+status,2+status,0+pclath+cstack]
   996                           ;LCD_setCursor@linha stored from wreg
   997     0364  1283               	bcf	3,5	;RP0=0, select bank0
   998     0365  1303               	bcf	3,6	;RP1=0, select bank0
   999     0366  00A0               	movwf	LCD_setCursor@linha
  1000     0367                     l1382:
  1001                           
  1002                           ;atividade13.c: 181:     unsigned char pos = (linha == 1) ? (0x80 + coluna - 1) : (0xC0 
      +                          + coluna - 1);
  1003     0367  0320               	decf	LCD_setCursor@linha,w
  1004     0368  1903               	btfsc	3,2
  1005     0369  2B6B               	goto	u971
  1006     036A  2B6C               	goto	u970
  1007     036B                     u971:
  1008     036B  2B74               	goto	l1386
  1009     036C                     u970:
  1010     036C                     l1384:
  1011     036C  087B               	movf	LCD_setCursor@coluna,w
  1012     036D  3EBF               	addlw	191
  1013     036E  00A1               	movwf	_LCD_setCursor$160
  1014     036F  3000               	movlw	0
  1015     0370  1803               	skipnc
  1016     0371  3001               	movlw	1
  1017     0372  00A2               	movwf	_LCD_setCursor$160+1
  1018     0373  2B7B               	goto	l112
  1019     0374                     l1386:
  1020     0374  087B               	movf	LCD_setCursor@coluna,w
  1021     0375  3E7F               	addlw	127
  1022     0376  00A1               	movwf	_LCD_setCursor$160
  1023     0377  3000               	movlw	0
  1024     0378  1803               	skipnc
  1025     0379  3001               	movlw	1
  1026     037A  00A2               	movwf	_LCD_setCursor$160+1
  1027     037B                     l112:
  1028     037B  0821               	movf	_LCD_setCursor$160,w
  1029     037C  00A3               	movwf	LCD_setCursor@pos
  1030     037D                     l1388:
  1031                           
  1032                           ;atividade13.c: 182:     LCD_command(pos);
  1033     037D  0823               	movf	LCD_setCursor@pos,w
  1034     037E  120A  118A  22DA  120A  118A  	fcall	_LCD_command
  1035     0383                     l113:
  1036     0383  0008               	return
  1037     0384                     __end_of_LCD_setCursor:
  1038                           
  1039                           	psect	text3
  1040     0348                     __ptext3:	
  1041 ;; *************** function _LCD_print *****************
  1042 ;; Defined at:
  1043 ;;		line 185 in file "atividade13.c"
  1044 ;; Parameters:    Size  Location     Type
  1045 ;;  str             1   11[COMMON] PTR const unsigned char 
  1046 ;;		 -> STR_2(8), STR_1(11), 
  1047 ;; Auto vars:     Size  Location     Type
  1048 ;;		None
  1049 ;; Return value:  Size  Location     Type
  1050 ;;                  1    wreg      void 
  1051 ;; Registers used:
  1052 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1053 ;; Tracked objects:
  1054 ;;		On entry : 0/0
  1055 ;;		On exit  : 0/0
  1056 ;;		Unchanged: 0/0
  1057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1058 ;;      Params:         1       0       0       0       0
  1059 ;;      Locals:         0       0       0       0       0
  1060 ;;      Temps:          0       0       0       0       0
  1061 ;;      Totals:         1       0       0       0       0
  1062 ;;Total ram usage:        1 bytes
  1063 ;; Hardware stack levels used: 1
  1064 ;; Hardware stack levels required when called: 5
  1065 ;; This function calls:
  1066 ;;		_LCD_data
  1067 ;; This function is called by:
  1068 ;;		_main
  1069 ;; This function uses a non-reentrant model
  1070 ;;
  1071                           
  1072     0348                     _LCD_print:	
  1073                           ;psect for function _LCD_print
  1074                           
  1075     0348                     l1390:	
  1076                           ;incstack = 0
  1077                           ; Regs used in _LCD_print: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1078                           
  1079                           
  1080                           ;atividade13.c: 186:     while (*str) {
  1081     0348  2B57               	goto	l1396
  1082     0349                     l1392:
  1083                           
  1084                           ;atividade13.c: 187:         LCD_data(*str++);
  1085     0349  087B               	movf	LCD_print@str,w
  1086     034A  0084               	movwf	4
  1087     034B  120A  118A  200D  120A  118A  	fcall	stringdir
  1088     0350  120A  118A  22EC  120A  118A  	fcall	_LCD_data
  1089     0355                     l1394:
  1090     0355  3001               	movlw	1
  1091     0356  07FB               	addwf	LCD_print@str,f
  1092     0357                     l1396:
  1093                           
  1094                           ;atividade13.c: 186:     while (*str) {
  1095     0357  087B               	movf	LCD_print@str,w
  1096     0358  0084               	movwf	4
  1097     0359  120A  118A  200D  120A  118A  	fcall	stringdir
  1098     035E  3A00               	xorlw	0
  1099     035F  1D03               	skipz
  1100     0360  2B62               	goto	u981
  1101     0361  2B63               	goto	u980
  1102     0362                     u981:
  1103     0362  2B49               	goto	l1392
  1104     0363                     u980:
  1105     0363                     l119:
  1106     0363  0008               	return
  1107     0364                     __end_of_LCD_print:
  1108                           
  1109                           	psect	text4
  1110     02EC                     __ptext4:	
  1111 ;; *************** function _LCD_data *****************
  1112 ;; Defined at:
  1113 ;;		line 156 in file "atividade13.c"
  1114 ;; Parameters:    Size  Location     Type
  1115 ;;  data            1    wreg     unsigned char 
  1116 ;; Auto vars:     Size  Location     Type
  1117 ;;  data            1   10[COMMON] unsigned char 
  1118 ;; Return value:  Size  Location     Type
  1119 ;;                  1    wreg      void 
  1120 ;; Registers used:
  1121 ;;		wreg, status,2, status,0, pclath, cstack
  1122 ;; Tracked objects:
  1123 ;;		On entry : 0/0
  1124 ;;		On exit  : 0/0
  1125 ;;		Unchanged: 0/0
  1126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1127 ;;      Params:         0       0       0       0       0
  1128 ;;      Locals:         1       0       0       0       0
  1129 ;;      Temps:          2       0       0       0       0
  1130 ;;      Totals:         3       0       0       0       0
  1131 ;;Total ram usage:        3 bytes
  1132 ;; Hardware stack levels used: 1
  1133 ;; Hardware stack levels required when called: 4
  1134 ;; This function calls:
  1135 ;;		_LCD_sendByte
  1136 ;; This function is called by:
  1137 ;;		_LCD_print
  1138 ;; This function uses a non-reentrant model
  1139 ;;
  1140                           
  1141     02EC                     _LCD_data:	
  1142                           ;psect for function _LCD_data
  1143                           
  1144                           
  1145                           ;incstack = 0
  1146                           ; Regs used in _LCD_data: [wreg+status,2+status,0+pclath+cstack]
  1147                           ;LCD_data@data stored from wreg
  1148     02EC  00FA               	movwf	LCD_data@data
  1149     02ED                     l1286:
  1150                           
  1151                           ;atividade13.c: 157:     LCD_sendByte(data, 1);
  1152     02ED  01F5               	clrf	LCD_sendByte@rs
  1153     02EE  0AF5               	incf	LCD_sendByte@rs,f
  1154     02EF  087A               	movf	LCD_data@data,w
  1155     02F0  120A  118A  232D  120A  118A  	fcall	_LCD_sendByte
  1156     02F5                     l1288:
  1157                           
  1158                           ;atividade13.c: 158:     _delay((unsigned long)((2)*(4000000/4000.0)));
  1159     02F5  3003               	movlw	3
  1160     02F6  00F9               	movwf	??_LCD_data+1
  1161     02F7  3097               	movlw	151
  1162     02F8  00F8               	movwf	??_LCD_data
  1163     02F9                     u997:
  1164     02F9  0BF8               	decfsz	??_LCD_data,f
  1165     02FA  2AF9               	goto	u997
  1166     02FB  0BF9               	decfsz	??_LCD_data+1,f
  1167     02FC  2AF9               	goto	u997
  1168     02FD  2AFE               	nop2
  1169     02FE                     l103:
  1170     02FE  0008               	return
  1171     02FF                     __end_of_LCD_data:
  1172                           
  1173                           	psect	text5
  1174     05C8                     __ptext5:	
  1175 ;; *************** function _LCD_init *****************
  1176 ;; Defined at:
  1177 ;;		line 161 in file "atividade13.c"
  1178 ;; Parameters:    Size  Location     Type
  1179 ;;		None
  1180 ;; Auto vars:     Size  Location     Type
  1181 ;;		None
  1182 ;; Return value:  Size  Location     Type
  1183 ;;                  1    wreg      void 
  1184 ;; Registers used:
  1185 ;;		wreg, status,2, status,0, pclath, cstack
  1186 ;; Tracked objects:
  1187 ;;		On entry : 0/0
  1188 ;;		On exit  : 0/0
  1189 ;;		Unchanged: 0/0
  1190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1191 ;;      Params:         0       0       0       0       0
  1192 ;;      Locals:         0       0       0       0       0
  1193 ;;      Temps:          2       0       0       0       0
  1194 ;;      Totals:         2       0       0       0       0
  1195 ;;Total ram usage:        2 bytes
  1196 ;; Hardware stack levels used: 1
  1197 ;; Hardware stack levels required when called: 5
  1198 ;; This function calls:
  1199 ;;		_LCD_command
  1200 ;;		_LCD_sendNibble
  1201 ;; This function is called by:
  1202 ;;		_main
  1203 ;; This function uses a non-reentrant model
  1204 ;;
  1205                           
  1206     05C8                     _LCD_init:	
  1207                           ;psect for function _LCD_init
  1208                           
  1209     05C8                     l1354:	
  1210                           ;incstack = 0
  1211                           ; Regs used in _LCD_init: [wreg+status,2+status,0+pclath+cstack]
  1212                           
  1213                           
  1214                           ;atividade13.c: 162:     _delay((unsigned long)((30)*(4000000/4000.0)));
  1215     05C8  3027               	movlw	39
  1216     05C9  00FC               	movwf	??_LCD_init+1
  1217     05CA  30F5               	movlw	245
  1218     05CB  00FB               	movwf	??_LCD_init
  1219     05CC                     u1007:
  1220     05CC  0BFB               	decfsz	??_LCD_init,f
  1221     05CD  2DCC               	goto	u1007
  1222     05CE  0BFC               	decfsz	??_LCD_init+1,f
  1223     05CF  2DCC               	goto	u1007
  1224     05D0                     l1356:
  1225                           
  1226                           ;atividade13.c: 163:     LCD_sendNibble(0x03, 0);
  1227     05D0  01F1               	clrf	LCD_sendNibble@rs
  1228     05D1  3003               	movlw	3
  1229     05D2  120A  118A  250E  120A  118A  	fcall	_LCD_sendNibble
  1230     05D7                     l1358:
  1231                           
  1232                           ;atividade13.c: 164:     _delay((unsigned long)((10)*(4000000/4000.0)));
  1233     05D7  300D               	movlw	13
  1234     05D8  00FC               	movwf	??_LCD_init+1
  1235     05D9  30FB               	movlw	251
  1236     05DA  00FB               	movwf	??_LCD_init
  1237     05DB                     u1017:
  1238     05DB  0BFB               	decfsz	??_LCD_init,f
  1239     05DC  2DDB               	goto	u1017
  1240     05DD  0BFC               	decfsz	??_LCD_init+1,f
  1241     05DE  2DDB               	goto	u1017
  1242     05DF  2DE0               	nop2
  1243                           
  1244                           ;atividade13.c: 165:     LCD_sendNibble(0x03, 0);
  1245     05E0  01F1               	clrf	LCD_sendNibble@rs
  1246     05E1  3003               	movlw	3
  1247     05E2  120A  118A  250E  120A  118A  	fcall	_LCD_sendNibble
  1248     05E7                     l1360:
  1249                           
  1250                           ;atividade13.c: 166:     _delay((unsigned long)((200)*(4000000/4000000.0)));
  1251     05E7  3042               	movlw	66
  1252     05E8  00FB               	movwf	??_LCD_init
  1253     05E9                     u1027:
  1254     05E9  0BFB               	decfsz	??_LCD_init,f
  1255     05EA  2DE9               	goto	u1027
  1256     05EB  0000               	nop
  1257     05EC                     l1362:
  1258                           
  1259                           ;atividade13.c: 167:     LCD_sendNibble(0x03, 0);
  1260     05EC  01F1               	clrf	LCD_sendNibble@rs
  1261     05ED  3003               	movlw	3
  1262     05EE  120A  118A  250E  120A  118A  	fcall	_LCD_sendNibble
  1263                           
  1264                           ;atividade13.c: 168:     _delay((unsigned long)((200)*(4000000/4000000.0)));
  1265     05F3  3042               	movlw	66
  1266     05F4  00FB               	movwf	??_LCD_init
  1267     05F5                     u1037:
  1268     05F5  0BFB               	decfsz	??_LCD_init,f
  1269     05F6  2DF5               	goto	u1037
  1270     05F7  0000               	nop
  1271     05F8                     l1364:
  1272                           
  1273                           ;atividade13.c: 170:     LCD_sendNibble(0x02, 0);
  1274     05F8  01F1               	clrf	LCD_sendNibble@rs
  1275     05F9  3002               	movlw	2
  1276     05FA  120A  118A  250E  120A  118A  	fcall	_LCD_sendNibble
  1277     05FF                     l1366:
  1278                           
  1279                           ;atividade13.c: 171:     _delay((unsigned long)((10)*(4000000/4000.0)));
  1280     05FF  300D               	movlw	13
  1281     0600  00FC               	movwf	??_LCD_init+1
  1282     0601  30FB               	movlw	251
  1283     0602  00FB               	movwf	??_LCD_init
  1284     0603                     u1047:
  1285     0603  0BFB               	decfsz	??_LCD_init,f
  1286     0604  2E03               	goto	u1047
  1287     0605  0BFC               	decfsz	??_LCD_init+1,f
  1288     0606  2E03               	goto	u1047
  1289     0607  2E08               	nop2
  1290                           
  1291                           ;atividade13.c: 173:     LCD_command(0x28);
  1292     0608  3028               	movlw	40
  1293     0609  120A  118A  22DA  120A  118A  	fcall	_LCD_command
  1294                           
  1295                           ;atividade13.c: 174:     LCD_command(0x0C);
  1296     060E  300C               	movlw	12
  1297     060F  120A  118A  22DA  120A  118A  	fcall	_LCD_command
  1298                           
  1299                           ;atividade13.c: 175:     LCD_command(0x01);
  1300     0614  3001               	movlw	1
  1301     0615  120A  118A  22DA  120A  118A  	fcall	_LCD_command
  1302     061A                     l1368:
  1303                           
  1304                           ;atividade13.c: 176:     _delay((unsigned long)((10)*(4000000/4000.0)));
  1305     061A  300D               	movlw	13
  1306     061B  00FC               	movwf	??_LCD_init+1
  1307     061C  30FB               	movlw	251
  1308     061D  00FB               	movwf	??_LCD_init
  1309     061E                     u1057:
  1310     061E  0BFB               	decfsz	??_LCD_init,f
  1311     061F  2E1E               	goto	u1057
  1312     0620  0BFC               	decfsz	??_LCD_init+1,f
  1313     0621  2E1E               	goto	u1057
  1314     0622  2E23               	nop2
  1315     0623                     l1370:
  1316                           
  1317                           ;atividade13.c: 177:     LCD_command(0x06);
  1318     0623  3006               	movlw	6
  1319     0624  120A  118A  22DA  120A  118A  	fcall	_LCD_command
  1320     0629                     l106:
  1321     0629  0008               	return
  1322     062A                     __end_of_LCD_init:
  1323                           
  1324                           	psect	text6
  1325     02DA                     __ptext6:	
  1326 ;; *************** function _LCD_command *****************
  1327 ;; Defined at:
  1328 ;;		line 151 in file "atividade13.c"
  1329 ;; Parameters:    Size  Location     Type
  1330 ;;  cmd             1    wreg     unsigned char 
  1331 ;; Auto vars:     Size  Location     Type
  1332 ;;  cmd             1   10[COMMON] unsigned char 
  1333 ;; Return value:  Size  Location     Type
  1334 ;;                  1    wreg      void 
  1335 ;; Registers used:
  1336 ;;		wreg, status,2, status,0, pclath, cstack
  1337 ;; Tracked objects:
  1338 ;;		On entry : 0/0
  1339 ;;		On exit  : 0/0
  1340 ;;		Unchanged: 0/0
  1341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1342 ;;      Params:         0       0       0       0       0
  1343 ;;      Locals:         1       0       0       0       0
  1344 ;;      Temps:          2       0       0       0       0
  1345 ;;      Totals:         3       0       0       0       0
  1346 ;;Total ram usage:        3 bytes
  1347 ;; Hardware stack levels used: 1
  1348 ;; Hardware stack levels required when called: 4
  1349 ;; This function calls:
  1350 ;;		_LCD_sendByte
  1351 ;; This function is called by:
  1352 ;;		_LCD_init
  1353 ;;		_LCD_setCursor
  1354 ;; This function uses a non-reentrant model
  1355 ;;
  1356                           
  1357     02DA                     _LCD_command:	
  1358                           ;psect for function _LCD_command
  1359                           
  1360                           
  1361                           ;incstack = 0
  1362                           ; Regs used in _LCD_command: [wreg+status,2+status,0+pclath+cstack]
  1363                           ;LCD_command@cmd stored from wreg
  1364     02DA  00FA               	movwf	LCD_command@cmd
  1365     02DB                     l1282:
  1366                           
  1367                           ;atividade13.c: 152:     LCD_sendByte(cmd, 0);
  1368     02DB  01F5               	clrf	LCD_sendByte@rs
  1369     02DC  087A               	movf	LCD_command@cmd,w
  1370     02DD  120A  118A  232D  120A  118A  	fcall	_LCD_sendByte
  1371     02E2                     l1284:
  1372                           
  1373                           ;atividade13.c: 153:     _delay((unsigned long)((2)*(4000000/4000.0)));
  1374     02E2  3003               	movlw	3
  1375     02E3  00F9               	movwf	??_LCD_command+1
  1376     02E4  3097               	movlw	151
  1377     02E5  00F8               	movwf	??_LCD_command
  1378     02E6                     u1067:
  1379     02E6  0BF8               	decfsz	??_LCD_command,f
  1380     02E7  2AE6               	goto	u1067
  1381     02E8  0BF9               	decfsz	??_LCD_command+1,f
  1382     02E9  2AE6               	goto	u1067
  1383     02EA  2AEB               	nop2
  1384     02EB                     l100:
  1385     02EB  0008               	return
  1386     02EC                     __end_of_LCD_command:
  1387                           
  1388                           	psect	text7
  1389     032D                     __ptext7:	
  1390 ;; *************** function _LCD_sendByte *****************
  1391 ;; Defined at:
  1392 ;;		line 146 in file "atividade13.c"
  1393 ;; Parameters:    Size  Location     Type
  1394 ;;  byte            1    wreg     unsigned char 
  1395 ;;  rs              1    5[COMMON] unsigned char 
  1396 ;; Auto vars:     Size  Location     Type
  1397 ;;  byte            1    7[COMMON] unsigned char 
  1398 ;; Return value:  Size  Location     Type
  1399 ;;                  1    wreg      void 
  1400 ;; Registers used:
  1401 ;;		wreg, status,2, status,0, pclath, cstack
  1402 ;; Tracked objects:
  1403 ;;		On entry : 0/0
  1404 ;;		On exit  : 0/0
  1405 ;;		Unchanged: 0/0
  1406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1407 ;;      Params:         1       0       0       0       0
  1408 ;;      Locals:         1       0       0       0       0
  1409 ;;      Temps:          1       0       0       0       0
  1410 ;;      Totals:         3       0       0       0       0
  1411 ;;Total ram usage:        3 bytes
  1412 ;; Hardware stack levels used: 1
  1413 ;; Hardware stack levels required when called: 3
  1414 ;; This function calls:
  1415 ;;		_LCD_sendNibble
  1416 ;; This function is called by:
  1417 ;;		_LCD_command
  1418 ;;		_LCD_data
  1419 ;; This function uses a non-reentrant model
  1420 ;;
  1421                           
  1422     032D                     _LCD_sendByte:	
  1423                           ;psect for function _LCD_sendByte
  1424                           
  1425                           
  1426                           ;incstack = 0
  1427                           ; Regs used in _LCD_sendByte: [wreg+status,2+status,0+pclath+cstack]
  1428                           ;LCD_sendByte@byte stored from wreg
  1429     032D  00F7               	movwf	LCD_sendByte@byte
  1430     032E                     l1264:
  1431                           
  1432                           ;atividade13.c: 147:     LCD_sendNibble(byte >> 4, rs);
  1433     032E  0875               	movf	LCD_sendByte@rs,w
  1434     032F  00F1               	movwf	LCD_sendNibble@rs
  1435     0330  0877               	movf	LCD_sendByte@byte,w
  1436     0331  00F6               	movwf	??_LCD_sendByte
  1437     0332  3004               	movlw	4
  1438     0333                     u855:
  1439     0333  1003               	clrc
  1440     0334  0CF6               	rrf	??_LCD_sendByte,f
  1441     0335  3EFF               	addlw	-1
  1442     0336  1D03               	skipz
  1443     0337  2B33               	goto	u855
  1444     0338  0876               	movf	??_LCD_sendByte,w
  1445     0339  120A  118A  250E  120A  118A  	fcall	_LCD_sendNibble
  1446                           
  1447                           ;atividade13.c: 148:     LCD_sendNibble(byte & 0x0F, rs);
  1448     033E  0875               	movf	LCD_sendByte@rs,w
  1449     033F  00F1               	movwf	LCD_sendNibble@rs
  1450     0340  0877               	movf	LCD_sendByte@byte,w
  1451     0341  390F               	andlw	15
  1452     0342  120A  118A  250E  120A  118A  	fcall	_LCD_sendNibble
  1453     0347                     l97:
  1454     0347  0008               	return
  1455     0348                     __end_of_LCD_sendByte:
  1456                           
  1457                           	psect	text8
  1458     050E                     __ptext8:	
  1459 ;; *************** function _LCD_sendNibble *****************
  1460 ;; Defined at:
  1461 ;;		line 117 in file "atividade13.c"
  1462 ;; Parameters:    Size  Location     Type
  1463 ;;  nibble          1    wreg     unsigned char 
  1464 ;;  rs              1    1[COMMON] unsigned char 
  1465 ;; Auto vars:     Size  Location     Type
  1466 ;;  nibble          1    3[COMMON] unsigned char 
  1467 ;;  data            1    4[COMMON] unsigned char 
  1468 ;; Return value:  Size  Location     Type
  1469 ;;                  1    wreg      void 
  1470 ;; Registers used:
  1471 ;;		wreg, status,2, status,0, pclath, cstack
  1472 ;; Tracked objects:
  1473 ;;		On entry : 0/0
  1474 ;;		On exit  : 0/0
  1475 ;;		Unchanged: 0/0
  1476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1477 ;;      Params:         1       0       0       0       0
  1478 ;;      Locals:         2       0       0       0       0
  1479 ;;      Temps:          1       0       0       0       0
  1480 ;;      Totals:         4       0       0       0       0
  1481 ;;Total ram usage:        4 bytes
  1482 ;; Hardware stack levels used: 1
  1483 ;; Hardware stack levels required when called: 2
  1484 ;; This function calls:
  1485 ;;		_I2C_Master_Start
  1486 ;;		_I2C_Master_Stop
  1487 ;;		_I2C_Master_Write
  1488 ;; This function is called by:
  1489 ;;		_LCD_sendByte
  1490 ;;		_LCD_init
  1491 ;; This function uses a non-reentrant model
  1492 ;;
  1493                           
  1494     050E                     _LCD_sendNibble:	
  1495                           ;psect for function _LCD_sendNibble
  1496                           
  1497                           
  1498                           ;incstack = 0
  1499                           ; Regs used in _LCD_sendNibble: [wreg+status,2+status,0+pclath+cstack]
  1500                           ;LCD_sendNibble@nibble stored from wreg
  1501     050E  00F3               	movwf	LCD_sendNibble@nibble
  1502     050F                     l1204:
  1503                           
  1504                           ;atividade13.c: 118:     unsigned char data = 0;
  1505     050F  01F4               	clrf	LCD_sendNibble@data
  1506     0510                     l1206:
  1507                           
  1508                           ;atividade13.c: 121:     if (nibble & 0x01) data |= (1 << 4);
  1509     0510  1C73               	btfss	LCD_sendNibble@nibble,0
  1510     0511  2D13               	goto	u771
  1511     0512  2D14               	goto	u770
  1512     0513                     u771:
  1513     0513  2D15               	goto	l89
  1514     0514                     u770:
  1515     0514                     l1208:
  1516     0514  1674               	bsf	LCD_sendNibble@data,4
  1517     0515                     l89:
  1518                           
  1519                           ;atividade13.c: 122:     if (nibble & 0x02) data |= (1 << 5);
  1520     0515  1CF3               	btfss	LCD_sendNibble@nibble,1
  1521     0516  2D18               	goto	u781
  1522     0517  2D19               	goto	u780
  1523     0518                     u781:
  1524     0518  2D1A               	goto	l90
  1525     0519                     u780:
  1526     0519                     l1210:
  1527     0519  16F4               	bsf	LCD_sendNibble@data,5
  1528     051A                     l90:
  1529                           
  1530                           ;atividade13.c: 123:     if (nibble & 0x04) data |= (1 << 6);
  1531     051A  1D73               	btfss	LCD_sendNibble@nibble,2
  1532     051B  2D1D               	goto	u791
  1533     051C  2D1E               	goto	u790
  1534     051D                     u791:
  1535     051D  2D1F               	goto	l91
  1536     051E                     u790:
  1537     051E                     l1212:
  1538     051E  1774               	bsf	LCD_sendNibble@data,6
  1539     051F                     l91:
  1540                           
  1541                           ;atividade13.c: 124:     if (nibble & 0x08) data |= (1 << 7);
  1542     051F  1DF3               	btfss	LCD_sendNibble@nibble,3
  1543     0520  2D22               	goto	u801
  1544     0521  2D23               	goto	u800
  1545     0522                     u801:
  1546     0522  2D24               	goto	l1216
  1547     0523                     u800:
  1548     0523                     l1214:
  1549     0523  17F4               	bsf	LCD_sendNibble@data,7
  1550     0524                     l1216:
  1551                           
  1552                           ;atividade13.c: 127:     if (rs) data |= 0x01;
  1553     0524  0871               	movf	LCD_sendNibble@rs,w
  1554     0525  1903               	btfsc	3,2
  1555     0526  2D28               	goto	u811
  1556     0527  2D29               	goto	u810
  1557     0528                     u811:
  1558     0528  2D2A               	goto	l1220
  1559     0529                     u810:
  1560     0529                     l1218:
  1561     0529  1474               	bsf	LCD_sendNibble@data,0
  1562     052A                     l1220:
  1563                           
  1564                           ;atividade13.c: 128:     data &= ~0x02;
  1565     052A  30FD               	movlw	253
  1566     052B  05F4               	andwf	LCD_sendNibble@data,f
  1567     052C                     l1222:
  1568                           
  1569                           ;atividade13.c: 130:     data |= 0x04;
  1570     052C  1574               	bsf	LCD_sendNibble@data,2
  1571     052D                     l1224:
  1572                           
  1573                           ;atividade13.c: 131:     data |= 0x08;
  1574     052D  15F4               	bsf	LCD_sendNibble@data,3
  1575     052E                     l1226:
  1576                           
  1577                           ;atividade13.c: 132:     I2C_Master_Start();
  1578     052E  120A  118A  22AB  120A  118A  	fcall	_I2C_Master_Start
  1579     0533                     l1228:
  1580                           
  1581                           ;atividade13.c: 133:     I2C_Master_Write(0x27 << 1);
  1582     0533  304E               	movlw	78
  1583     0534  120A  118A  22FF  120A  118A  	fcall	_I2C_Master_Write
  1584     0539                     l1230:
  1585                           
  1586                           ;atividade13.c: 134:     I2C_Master_Write(data);
  1587     0539  0874               	movf	LCD_sendNibble@data,w
  1588     053A  120A  118A  22FF  120A  118A  	fcall	_I2C_Master_Write
  1589     053F                     l1232:
  1590                           
  1591                           ;atividade13.c: 135:     I2C_Master_Stop();
  1592     053F  120A  118A  22B3  120A  118A  	fcall	_I2C_Master_Stop
  1593     0544                     l1234:
  1594                           
  1595                           ;atividade13.c: 136:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  1596     0544  3010               	movlw	16
  1597     0545  00F2               	movwf	??_LCD_sendNibble
  1598     0546                     u1077:
  1599     0546  0BF2               	decfsz	??_LCD_sendNibble,f
  1600     0547  2D46               	goto	u1077
  1601     0548  0000               	nop
  1602     0549                     l1236:
  1603                           
  1604                           ;atividade13.c: 138:     data &= ~0x04;
  1605     0549  30FB               	movlw	251
  1606     054A  05F4               	andwf	LCD_sendNibble@data,f
  1607     054B                     l1238:
  1608                           
  1609                           ;atividade13.c: 139:     I2C_Master_Start();
  1610     054B  120A  118A  22AB  120A  118A  	fcall	_I2C_Master_Start
  1611                           
  1612                           ;atividade13.c: 140:     I2C_Master_Write(0x27 << 1);
  1613     0550  304E               	movlw	78
  1614     0551  120A  118A  22FF  120A  118A  	fcall	_I2C_Master_Write
  1615                           
  1616                           ;atividade13.c: 141:     I2C_Master_Write(data);
  1617     0556  0874               	movf	LCD_sendNibble@data,w
  1618     0557  120A  118A  22FF  120A  118A  	fcall	_I2C_Master_Write
  1619     055C                     l1240:
  1620                           
  1621                           ;atividade13.c: 142:     I2C_Master_Stop();
  1622     055C  120A  118A  22B3  120A  118A  	fcall	_I2C_Master_Stop
  1623                           
  1624                           ;atividade13.c: 143:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  1625     0561  3010               	movlw	16
  1626     0562  00F2               	movwf	??_LCD_sendNibble
  1627     0563                     u1087:
  1628     0563  0BF2               	decfsz	??_LCD_sendNibble,f
  1629     0564  2D63               	goto	u1087
  1630     0565  0000               	nop
  1631     0566                     l94:
  1632     0566  0008               	return
  1633     0567                     __end_of_LCD_sendNibble:
  1634                           
  1635                           	psect	text9
  1636     03F2                     __ptext9:	
  1637 ;; *************** function _LCD_backlight *****************
  1638 ;; Defined at:
  1639 ;;		line 191 in file "atividade13.c"
  1640 ;; Parameters:    Size  Location     Type
  1641 ;;  state           1    wreg     unsigned char 
  1642 ;; Auto vars:     Size  Location     Type
  1643 ;;  state           1    1[COMMON] unsigned char 
  1644 ;;  data            1    4[COMMON] unsigned char 
  1645 ;; Return value:  Size  Location     Type
  1646 ;;                  1    wreg      void 
  1647 ;; Registers used:
  1648 ;;		wreg, status,2, status,0, pclath, cstack
  1649 ;; Tracked objects:
  1650 ;;		On entry : 0/0
  1651 ;;		On exit  : 0/0
  1652 ;;		Unchanged: 0/0
  1653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1654 ;;      Params:         0       0       0       0       0
  1655 ;;      Locals:         4       0       0       0       0
  1656 ;;      Temps:          0       0       0       0       0
  1657 ;;      Totals:         4       0       0       0       0
  1658 ;;Total ram usage:        4 bytes
  1659 ;; Hardware stack levels used: 1
  1660 ;; Hardware stack levels required when called: 2
  1661 ;; This function calls:
  1662 ;;		_I2C_Master_Start
  1663 ;;		_I2C_Master_Stop
  1664 ;;		_I2C_Master_Write
  1665 ;; This function is called by:
  1666 ;;		_main
  1667 ;; This function uses a non-reentrant model
  1668 ;;
  1669                           
  1670     03F2                     _LCD_backlight:	
  1671                           ;psect for function _LCD_backlight
  1672                           
  1673                           
  1674                           ;incstack = 0
  1675                           ; Regs used in _LCD_backlight: [wreg+status,2+status,0+pclath+cstack]
  1676                           ;LCD_backlight@state stored from wreg
  1677     03F2  00F1               	movwf	LCD_backlight@state
  1678     03F3                     l1372:
  1679                           
  1680                           ;atividade13.c: 192:     unsigned char data = state ? 0x08 : 0x00;
  1681     03F3  0871               	movf	LCD_backlight@state,w
  1682     03F4  1D03               	btfss	3,2
  1683     03F5  2BF7               	goto	u961
  1684     03F6  2BF8               	goto	u960
  1685     03F7                     u961:
  1686     03F7  2BFB               	goto	l1376
  1687     03F8                     u960:
  1688     03F8                     l1374:
  1689     03F8  01F2               	clrf	_LCD_backlight$167
  1690     03F9  01F3               	clrf	_LCD_backlight$167+1
  1691     03FA  2BFF               	goto	l125
  1692     03FB                     l1376:
  1693     03FB  3008               	movlw	8
  1694     03FC  00F2               	movwf	_LCD_backlight$167
  1695     03FD  3000               	movlw	0
  1696     03FE  00F3               	movwf	_LCD_backlight$167+1
  1697     03FF                     l125:
  1698     03FF  0872               	movf	_LCD_backlight$167,w
  1699     0400  00F4               	movwf	LCD_backlight@data
  1700     0401                     l1378:
  1701                           
  1702                           ;atividade13.c: 193:     I2C_Master_Start();
  1703     0401  120A  118A  22AB  120A  118A  	fcall	_I2C_Master_Start
  1704                           
  1705                           ;atividade13.c: 194:     I2C_Master_Write(0x27 << 1);
  1706     0406  304E               	movlw	78
  1707     0407  120A  118A  22FF  120A  118A  	fcall	_I2C_Master_Write
  1708                           
  1709                           ;atividade13.c: 195:     I2C_Master_Write(data);
  1710     040C  0874               	movf	LCD_backlight@data,w
  1711     040D  120A  118A  22FF  120A  118A  	fcall	_I2C_Master_Write
  1712     0412                     l1380:
  1713                           
  1714                           ;atividade13.c: 196:     I2C_Master_Stop();
  1715     0412  120A  118A  22B3  120A  118A  	fcall	_I2C_Master_Stop
  1716     0417                     l126:
  1717     0417  0008               	return
  1718     0418                     __end_of_LCD_backlight:
  1719                           
  1720                           	psect	text10
  1721     0567                     __ptext10:	
  1722 ;; *************** function _I2C_scan *****************
  1723 ;; Defined at:
  1724 ;;		line 93 in file "atividade13.c"
  1725 ;; Parameters:    Size  Location     Type
  1726 ;;		None
  1727 ;; Auto vars:     Size  Location     Type
  1728 ;;  address         1   47[BANK0 ] unsigned char 
  1729 ;; Return value:  Size  Location     Type
  1730 ;;                  1    wreg      void 
  1731 ;; Registers used:
  1732 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1733 ;; Tracked objects:
  1734 ;;		On entry : 0/0
  1735 ;;		On exit  : 0/0
  1736 ;;		Unchanged: 0/0
  1737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1738 ;;      Params:         0       0       0       0       0
  1739 ;;      Locals:         0       1       0       0       0
  1740 ;;      Temps:          0       2       0       0       0
  1741 ;;      Totals:         0       3       0       0       0
  1742 ;;Total ram usage:        3 bytes
  1743 ;; Hardware stack levels used: 1
  1744 ;; Hardware stack levels required when called: 6
  1745 ;; This function calls:
  1746 ;;		_I2C_Master_Start
  1747 ;;		_I2C_Master_Stop
  1748 ;;		_I2C_Master_Write
  1749 ;;		_UART_Print
  1750 ;;		_UART_PrintInt
  1751 ;; This function is called by:
  1752 ;;		_main
  1753 ;; This function uses a non-reentrant model
  1754 ;;
  1755                           
  1756     0567                     _I2C_scan:	
  1757                           ;psect for function _I2C_scan
  1758                           
  1759     0567                     l1322:	
  1760                           ;incstack = 0
  1761                           ; Regs used in _I2C_scan: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1762                           
  1763                           
  1764                           ;atividade13.c: 94:     unsigned char address;;atividade13.c: 95:     UART_Print("\r\nIn
      +                          iciando escaneamento I2C...\r\n");
  1765     0567  3051               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1766     0568  00F1               	movwf	UART_Print@str
  1767     0569  3080               	movlw	128
  1768     056A  00F2               	movwf	UART_Print@str+1
  1769     056B  120A  118A  23CC  120A  118A  	fcall	_UART_Print
  1770     0570                     l1324:
  1771                           
  1772                           ;atividade13.c: 97:     for (address = 0x20; address < 0x40; address++) {
  1773     0570  3020               	movlw	32
  1774     0571  1283               	bcf	3,5	;RP0=0, select bank0
  1775     0572  1303               	bcf	3,6	;RP1=0, select bank0
  1776     0573  00CF               	movwf	I2C_scan@address
  1777     0574                     l1330:
  1778                           
  1779                           ;atividade13.c: 98:         I2C_Master_Start();
  1780     0574  120A  118A  22AB  120A  118A  	fcall	_I2C_Master_Start
  1781     0579                     l1332:
  1782                           
  1783                           ;atividade13.c: 99:         I2C_Master_Write((unsigned char)(address << 1));
  1784     0579  1283               	bcf	3,5	;RP0=0, select bank0
  1785     057A  1303               	bcf	3,6	;RP1=0, select bank0
  1786     057B  084F               	movf	I2C_scan@address,w
  1787     057C  00CD               	movwf	??_I2C_scan
  1788     057D  074D               	addwf	??_I2C_scan,w
  1789     057E  120A  118A  22FF  120A  118A  	fcall	_I2C_Master_Write
  1790     0583                     l1334:
  1791                           
  1792                           ;atividade13.c: 101:         if (!SSPCON2bits.ACKSTAT) {
  1793     0583  1683               	bsf	3,5	;RP0=1, select bank1
  1794     0584  1303               	bcf	3,6	;RP1=0, select bank1
  1795     0585  1B11               	btfsc	17,6	;volatile
  1796     0586  2D88               	goto	u941
  1797     0587  2D89               	goto	u940
  1798     0588                     u941:
  1799     0588  2DAF               	goto	l1346
  1800     0589                     u940:
  1801     0589                     l1336:
  1802                           
  1803                           ;atividade13.c: 102:             I2C_Master_Stop();
  1804     0589  120A  118A  22B3  120A  118A  	fcall	_I2C_Master_Stop
  1805     058E                     l1338:
  1806                           
  1807                           ;atividade13.c: 103:             UART_Print("? Dispositivo encontrado no endereco: 0x");
  1808     058E  3001               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1809     058F  00F1               	movwf	UART_Print@str
  1810     0590  3080               	movlw	128
  1811     0591  00F2               	movwf	UART_Print@str+1
  1812     0592  120A  118A  23CC  120A  118A  	fcall	_UART_Print
  1813     0597                     l1340:
  1814                           
  1815                           ;atividade13.c: 104:             UART_PrintInt(address);
  1816     0597  1283               	bcf	3,5	;RP0=0, select bank0
  1817     0598  1303               	bcf	3,6	;RP1=0, select bank0
  1818     0599  084F               	movf	I2C_scan@address,w
  1819     059A  00CD               	movwf	??_I2C_scan
  1820     059B  01CE               	clrf	??_I2C_scan+1
  1821     059C  084D               	movf	??_I2C_scan,w
  1822     059D  00C1               	movwf	UART_PrintInt@valor
  1823     059E  084E               	movf	??_I2C_scan+1,w
  1824     059F  00C2               	movwf	UART_PrintInt@valor+1
  1825     05A0  120A  118A  2314  120A  118A  	fcall	_UART_PrintInt
  1826     05A5                     l1342:
  1827                           
  1828                           ;atividade13.c: 105:             UART_Print("\r\n");
  1829     05A5  304E               	movlw	(low (((STR_6+36)-__stringbase)| (0+32768)))& (0+255)
  1830     05A6  00F1               	movwf	UART_Print@str
  1831     05A7  3080               	movlw	128
  1832     05A8  00F2               	movwf	UART_Print@str+1
  1833     05A9  120A  118A  23CC  120A  118A  	fcall	_UART_Print
  1834     05AE  2DC7               	goto	l86
  1835     05AF                     l1346:
  1836                           
  1837                           ;atividade13.c: 108:         I2C_Master_Stop();
  1838     05AF  120A  118A  22B3  120A  118A  	fcall	_I2C_Master_Stop
  1839     05B4                     l1348:
  1840                           
  1841                           ;atividade13.c: 109:     }
  1842     05B4  3001               	movlw	1
  1843     05B5  1283               	bcf	3,5	;RP0=0, select bank0
  1844     05B6  1303               	bcf	3,6	;RP1=0, select bank0
  1845     05B7  07CF               	addwf	I2C_scan@address,f
  1846     05B8                     l1350:
  1847     05B8  3040               	movlw	64
  1848     05B9  024F               	subwf	I2C_scan@address,w
  1849     05BA  1C03               	skipc
  1850     05BB  2DBD               	goto	u951
  1851     05BC  2DBE               	goto	u950
  1852     05BD                     u951:
  1853     05BD  2D74               	goto	l1330
  1854     05BE                     u950:
  1855     05BE                     l1352:
  1856                           
  1857                           ;atividade13.c: 111:     UART_Print("? Nenhum dispositivo I2C encontrado!\r\n");
  1858     05BE  302A               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1859     05BF  00F1               	movwf	UART_Print@str
  1860     05C0  3080               	movlw	128
  1861     05C1  00F2               	movwf	UART_Print@str+1
  1862     05C2  120A  118A  23CC  120A  118A  	fcall	_UART_Print
  1863     05C7                     l86:
  1864     05C7  0008               	return
  1865     05C8                     __end_of_I2C_scan:
  1866                           
  1867                           	psect	text11
  1868     0314                     __ptext11:	
  1869 ;; *************** function _UART_PrintInt *****************
  1870 ;; Defined at:
  1871 ;;		line 219 in file "atividade13.c"
  1872 ;; Parameters:    Size  Location     Type
  1873 ;;  valor           2   33[BANK0 ] unsigned int 
  1874 ;; Auto vars:     Size  Location     Type
  1875 ;;  buffer         10   35[BANK0 ] unsigned char [10]
  1876 ;; Return value:  Size  Location     Type
  1877 ;;                  1    wreg      void 
  1878 ;; Registers used:
  1879 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1880 ;; Tracked objects:
  1881 ;;		On entry : 0/0
  1882 ;;		On exit  : 0/0
  1883 ;;		Unchanged: 0/0
  1884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1885 ;;      Params:         0       2       0       0       0
  1886 ;;      Locals:         0      10       0       0       0
  1887 ;;      Temps:          0       0       0       0       0
  1888 ;;      Totals:         0      12       0       0       0
  1889 ;;Total ram usage:       12 bytes
  1890 ;; Hardware stack levels used: 1
  1891 ;; Hardware stack levels required when called: 5
  1892 ;; This function calls:
  1893 ;;		_UART_Print
  1894 ;;		_sprintf
  1895 ;; This function is called by:
  1896 ;;		_I2C_scan
  1897 ;; This function uses a non-reentrant model
  1898 ;;
  1899                           
  1900     0314                     _UART_PrintInt:	
  1901                           ;psect for function _UART_PrintInt
  1902                           
  1903     0314                     l1280:	
  1904                           ;incstack = 0
  1905                           ; Regs used in _UART_PrintInt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1906                           
  1907                           
  1908                           ;atividade13.c: 220:     char buffer[10];;atividade13.c: 221:     sprintf(buffer, "%u", 
      +                          valor);
  1909     0314  3043               	movlw	(low (UART_PrintInt@buffer| 0))& (0+255)
  1910     0315  1283               	bcf	3,5	;RP0=0, select bank0
  1911     0316  1303               	bcf	3,6	;RP1=0, select bank0
  1912     0317  00B0               	movwf	sprintf@s
  1913     0318  3086               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1914     0319  00B1               	movwf	sprintf@fmt
  1915     031A  0842               	movf	UART_PrintInt@valor+1,w
  1916     031B  00B3               	movwf	?_sprintf+3
  1917     031C  0841               	movf	UART_PrintInt@valor,w
  1918     031D  00B2               	movwf	?_sprintf+2
  1919     031E  120A  118A  2384  120A  118A  	fcall	_sprintf
  1920                           
  1921                           ;atividade13.c: 222:     UART_Print(buffer);
  1922     0323  3043               	movlw	(low (UART_PrintInt@buffer| 0))& (0+255)
  1923     0324  00F1               	movwf	UART_Print@str
  1924     0325  3000               	movlw	0
  1925     0326  00F2               	movwf	UART_Print@str+1
  1926     0327  120A  118A  23CC  120A  118A  	fcall	_UART_Print
  1927     032C                     l144:
  1928     032C  0008               	return
  1929     032D                     __end_of_UART_PrintInt:
  1930                           
  1931                           	psect	text12
  1932     0384                     __ptext12:	
  1933 ;; *************** function _sprintf *****************
  1934 ;; Defined at:
  1935 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_sprintf.c"
  1936 ;; Parameters:    Size  Location     Type
  1937 ;;  s               1   16[BANK0 ] PTR unsigned char 
  1938 ;;		 -> UART_PrintInt@buffer(10), 
  1939 ;;  fmt             1   17[BANK0 ] PTR const unsigned char 
  1940 ;;		 -> STR_7(3), 
  1941 ;; Auto vars:     Size  Location     Type
  1942 ;;  f              11   22[BANK0 ] struct _IO_FILE
  1943 ;;  ret             2    0        int 
  1944 ;;  ap              1   21[BANK0 ] PTR void [1]
  1945 ;;		 -> ?_sprintf(2), 
  1946 ;; Return value:  Size  Location     Type
  1947 ;;                  2   16[BANK0 ] int 
  1948 ;; Registers used:
  1949 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1950 ;; Tracked objects:
  1951 ;;		On entry : 0/0
  1952 ;;		On exit  : 0/0
  1953 ;;		Unchanged: 0/0
  1954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1955 ;;      Params:         0       4       0       0       0
  1956 ;;      Locals:         0      12       0       0       0
  1957 ;;      Temps:          0       1       0       0       0
  1958 ;;      Totals:         0      17       0       0       0
  1959 ;;Total ram usage:       17 bytes
  1960 ;; Hardware stack levels used: 1
  1961 ;; Hardware stack levels required when called: 4
  1962 ;; This function calls:
  1963 ;;		_vfprintf
  1964 ;; This function is called by:
  1965 ;;		_UART_PrintInt
  1966 ;; This function uses a non-reentrant model
  1967 ;;
  1968                           
  1969     0384                     _sprintf:	
  1970                           ;psect for function _sprintf
  1971                           
  1972     0384                     l1266:	
  1973                           ;incstack = 0
  1974                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1975                           
  1976     0384  3032               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  1977     0385  1283               	bcf	3,5	;RP0=0, select bank0
  1978     0386  1303               	bcf	3,6	;RP1=0, select bank0
  1979     0387  00B5               	movwf	sprintf@ap
  1980     0388                     l1268:
  1981     0388  0830               	movf	sprintf@s,w
  1982     0389  00B6               	movwf	sprintf@f
  1983     038A  3000               	movlw	0
  1984     038B  00B7               	movwf	sprintf@f+1
  1985     038C                     l1270:
  1986     038C  01B8               	clrf	sprintf@f+2
  1987     038D  01B9               	clrf	sprintf@f+3
  1988     038E                     l1272:
  1989     038E  01BF               	clrf	sprintf@f+9
  1990     038F  01C0               	clrf	sprintf@f+10
  1991     0390                     l1274:
  1992     0390  3036               	movlw	low sprintf@f
  1993     0391  00AC               	movwf	vfprintf@fp
  1994     0392  3000               	movlw	high sprintf@f
  1995     0393  00AD               	movwf	vfprintf@fp+1
  1996     0394  0831               	movf	sprintf@fmt,w
  1997     0395  00AE               	movwf	vfprintf@fmt
  1998     0396  3035               	movlw	(low (sprintf@ap| 0))& (0+255)
  1999     0397  00AF               	movwf	vfprintf@ap
  2000     0398  120A  118A  23A7  120A  118A  	fcall	_vfprintf
  2001     039D                     l1276:
  2002     039D  1283               	bcf	3,5	;RP0=0, select bank0
  2003     039E  1303               	bcf	3,6	;RP1=0, select bank0
  2004     039F  0838               	movf	sprintf@f+2,w
  2005     03A0  0730               	addwf	sprintf@s,w
  2006     03A1  00B4               	movwf	??_sprintf
  2007     03A2  0834               	movf	??_sprintf,w
  2008     03A3  0084               	movwf	4
  2009     03A4  1383               	bcf	3,7	;select IRP bank0
  2010     03A5  0180               	clrf	0
  2011     03A6                     l693:
  2012     03A6  0008               	return
  2013     03A7                     __end_of_sprintf:
  2014                           
  2015                           	psect	text13
  2016     03A7                     __ptext13:	
  2017 ;; *************** function _vfprintf *****************
  2018 ;; Defined at:
  2019 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  2020 ;; Parameters:    Size  Location     Type
  2021 ;;  fp              2   12[BANK0 ] PTR struct _IO_FILE
  2022 ;;		 -> sprintf@f(11), 
  2023 ;;  fmt             1   14[BANK0 ] PTR const unsigned char 
  2024 ;;		 -> STR_7(3), 
  2025 ;;  ap              1   15[BANK0 ] PTR PTR void 
  2026 ;;		 -> sprintf@ap(1), 
  2027 ;; Auto vars:     Size  Location     Type
  2028 ;;  cfmt            1   13[COMMON] PTR unsigned char 
  2029 ;;		 -> STR_7(3), 
  2030 ;; Return value:  Size  Location     Type
  2031 ;;                  2   12[BANK0 ] int 
  2032 ;; Registers used:
  2033 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2034 ;; Tracked objects:
  2035 ;;		On entry : 0/0
  2036 ;;		On exit  : 0/0
  2037 ;;		Unchanged: 0/0
  2038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2039 ;;      Params:         0       4       0       0       0
  2040 ;;      Locals:         1       0       0       0       0
  2041 ;;      Temps:          0       0       0       0       0
  2042 ;;      Totals:         1       4       0       0       0
  2043 ;;Total ram usage:        5 bytes
  2044 ;; Hardware stack levels used: 1
  2045 ;; Hardware stack levels required when called: 3
  2046 ;; This function calls:
  2047 ;;		_vfpfcnvrt
  2048 ;; This function is called by:
  2049 ;;		_sprintf
  2050 ;; This function uses a non-reentrant model
  2051 ;;
  2052                           
  2053     03A7                     _vfprintf:	
  2054                           ;psect for function _vfprintf
  2055                           
  2056     03A7                     l1246:	
  2057                           ;incstack = 0
  2058                           ; Regs used in _vfprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2059                           
  2060                           
  2061                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  2062     03A7  1283               	bcf	3,5	;RP0=0, select bank0
  2063     03A8  1303               	bcf	3,6	;RP1=0, select bank0
  2064     03A9  082E               	movf	vfprintf@fmt,w
  2065     03AA  00FD               	movwf	vfprintf@cfmt
  2066                           
  2067                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2068     03AB  2BBB               	goto	l1250
  2069     03AC                     l1248:
  2070                           
  2071                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2072     03AC  1283               	bcf	3,5	;RP0=0, select bank0
  2073     03AD  1303               	bcf	3,6	;RP1=0, select bank0
  2074     03AE  082C               	movf	vfprintf@fp,w
  2075     03AF  00A0               	movwf	vfpfcnvrt@fp
  2076     03B0  082D               	movf	vfprintf@fp+1,w
  2077     03B1  00A1               	movwf	vfpfcnvrt@fp+1
  2078     03B2  307D               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  2079     03B3  00A2               	movwf	vfpfcnvrt@fmt
  2080     03B4  082F               	movf	vfprintf@ap,w
  2081     03B5  00A3               	movwf	vfpfcnvrt@ap
  2082     03B6  120A  118A  2728  120A  118A  	fcall	_vfpfcnvrt
  2083     03BB                     l1250:
  2084                           
  2085                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2086     03BB  087D               	movf	vfprintf@cfmt,w
  2087     03BC  0084               	movwf	4
  2088     03BD  120A  118A  200D  120A  118A  	fcall	stringdir
  2089     03C2  3A00               	xorlw	0
  2090     03C3  1D03               	skipz
  2091     03C4  2BC6               	goto	u831
  2092     03C5  2BC7               	goto	u830
  2093     03C6                     u831:
  2094     03C6  2BAC               	goto	l1248
  2095     03C7                     u830:
  2096     03C7                     l1252:
  2097                           
  2098                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  2099     03C7  1283               	bcf	3,5	;RP0=0, select bank0
  2100     03C8  1303               	bcf	3,6	;RP1=0, select bank0
  2101     03C9  01AC               	clrf	?_vfprintf
  2102     03CA  01AD               	clrf	?_vfprintf+1
  2103     03CB                     l737:
  2104     03CB  0008               	return
  2105     03CC                     __end_of_vfprintf:
  2106                           
  2107                           	psect	text14
  2108     0728                     __ptext14:	
  2109 ;; *************** function _vfpfcnvrt *****************
  2110 ;; Defined at:
  2111 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  2112 ;; Parameters:    Size  Location     Type
  2113 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  2114 ;;		 -> sprintf@f(11), 
  2115 ;;  fmt             1    2[BANK0 ] PTR PTR unsigned char 
  2116 ;;		 -> vfprintf@cfmt(1), 
  2117 ;;  ap              1    3[BANK0 ] PTR PTR void 
  2118 ;;		 -> sprintf@ap(1), 
  2119 ;; Auto vars:     Size  Location     Type
  2120 ;;  convarg         4    6[BANK0 ] struct .
  2121 ;;  c               1   11[BANK0 ] unsigned char 
  2122 ;;  cp              1   10[BANK0 ] PTR unsigned char 
  2123 ;;		 -> STR_7(3), 
  2124 ;;  done            1    0        _Bool 
  2125 ;; Return value:  Size  Location     Type
  2126 ;;                  1    wreg      void 
  2127 ;; Registers used:
  2128 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2129 ;; Tracked objects:
  2130 ;;		On entry : 0/0
  2131 ;;		On exit  : 0/0
  2132 ;;		Unchanged: 0/0
  2133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2134 ;;      Params:         0       4       0       0       0
  2135 ;;      Locals:         0       6       0       0       0
  2136 ;;      Temps:          0       2       0       0       0
  2137 ;;      Totals:         0      12       0       0       0
  2138 ;;Total ram usage:       12 bytes
  2139 ;; Hardware stack levels used: 1
  2140 ;; Hardware stack levels required when called: 2
  2141 ;; This function calls:
  2142 ;;		___lwdiv
  2143 ;;		___lwmod
  2144 ;;		_fputc
  2145 ;; This function is called by:
  2146 ;;		_vfprintf
  2147 ;; This function uses a non-reentrant model
  2148 ;;
  2149                           
  2150     0728                     _vfpfcnvrt:	
  2151                           ;psect for function _vfpfcnvrt
  2152                           
  2153     0728                     l1160:	
  2154                           ;incstack = 0
  2155                           ; Regs used in _vfpfcnvrt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2156                           
  2157                           
  2158                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  2159     0728  1283               	bcf	3,5	;RP0=0, select bank0
  2160     0729  1303               	bcf	3,6	;RP1=0, select bank0
  2161     072A  0822               	movf	vfpfcnvrt@fmt,w
  2162     072B  0084               	movwf	4
  2163     072C  0800               	movf	0,w
  2164     072D  0084               	movwf	4
  2165     072E  120A  118A  200D  120A  118A  	fcall	stringdir
  2166     0733  3A25               	xorlw	37
  2167     0734  1D03               	skipz
  2168     0735  2F37               	goto	u721
  2169     0736  2F38               	goto	u720
  2170     0737                     u721:
  2171     0737  2FD2               	goto	l1198
  2172     0738                     u720:
  2173     0738                     l1162:
  2174                           
  2175                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  2176     0738  0822               	movf	vfpfcnvrt@fmt,w
  2177     0739  0084               	movwf	4
  2178     073A  3001               	movlw	1
  2179     073B  0780               	addwf	0,f
  2180     073C                     l1164:
  2181                           
  2182                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  2183     073C  01D0               	clrf	_width
  2184     073D  01D1               	clrf	_width+1
  2185     073E  3000               	movlw	0
  2186     073F  00D4               	movwf	_flags
  2187     0740                     l1166:
  2188                           
  2189                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  2190     0740  30FF               	movlw	255
  2191     0741  00D2               	movwf	_prec
  2192     0742  30FF               	movlw	255
  2193     0743  00D3               	movwf	_prec+1
  2194     0744                     l1168:
  2195                           
  2196                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1439:   if (0
  2197     0744  0822               	movf	vfpfcnvrt@fmt,w
  2198     0745  0084               	movwf	4
  2199     0746  0800               	movf	0,w
  2200     0747  00AA               	movwf	vfpfcnvrt@cp
  2201     0748                     l1170:
  2202     0748  082A               	movf	vfpfcnvrt@cp,w
  2203     0749  0084               	movwf	4
  2204     074A  120A  118A  200D  120A  118A  	fcall	stringdir
  2205     074F  3A75               	xorlw	117
  2206     0750  1D03               	skipz
  2207     0751  2F53               	goto	u731
  2208     0752  2F54               	goto	u730
  2209     0753                     u731:
  2210     0753  2FCB               	goto	l1194
  2211     0754                     u730:
  2212     0754                     l1172:
  2213                           
  2214                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1452:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1495:    convarg.uint
      +                           = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned
      +                           int)0));
  2215     0754  0823               	movf	vfpfcnvrt@ap,w
  2216     0755  0084               	movwf	4
  2217     0756  1383               	bcf	3,7	;select IRP bank0
  2218     0757  0800               	movf	0,w
  2219     0758  00FF               	movwf	btemp+1
  2220     0759  3002               	movlw	2
  2221     075A  0780               	addwf	0,f
  2222     075B  087F               	movf	btemp+1,w
  2223     075C  0084               	movwf	4
  2224     075D  0800               	movf	0,w
  2225     075E  00A6               	movwf	vfpfcnvrt@convarg
  2226     075F  0A84               	incf	4,f
  2227     0760  0800               	movf	0,w
  2228     0761  00A7               	movwf	vfpfcnvrt@convarg+1
  2229     0762                     l1174:
  2230                           
  2231                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
  2232     0762  0822               	movf	vfpfcnvrt@fmt,w
  2233     0763  0084               	movwf	4
  2234     0764  082A               	movf	vfpfcnvrt@cp,w
  2235     0765  3E01               	addlw	1
  2236     0766  0080               	movwf	0
  2237                           
  2238                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
  2239     0767  2FC0               	goto	l1192
  2240     0768                     l722:	
  2241                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1523:     case 'u
      +                          ':
  2242                           
  2243                           
  2244                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1525:      c = si
      +                          zeof(dbuf);
  2245     0768  3020               	movlw	32
  2246     0769  00AB               	movwf	vfpfcnvrt@c
  2247     076A                     l1176:
  2248                           
  2249                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1527:       dbuf[
      +                          --c] = (convarg.uint % 10) + '0';
  2250     076A  3001               	movlw	1
  2251     076B  02AB               	subwf	vfpfcnvrt@c,f
  2252     076C  082B               	movf	vfpfcnvrt@c,w
  2253     076D  3EA0               	addlw	(low (_dbuf| 0))& (0+255)
  2254     076E  0084               	movwf	4
  2255     076F  300A               	movlw	10
  2256     0770  00F0               	movwf	___lwmod@divisor
  2257     0771  3000               	movlw	0
  2258     0772  00F1               	movwf	___lwmod@divisor+1
  2259     0773  0827               	movf	vfpfcnvrt@convarg+1,w
  2260     0774  00F3               	movwf	___lwmod@dividend+1
  2261     0775  0826               	movf	vfpfcnvrt@convarg,w
  2262     0776  00F2               	movwf	___lwmod@dividend
  2263     0777  120A  118A  244E  120A  118A  	fcall	___lwmod
  2264     077C  0870               	movf	?___lwmod,w
  2265     077D  3E30               	addlw	48
  2266     077E  1383               	bcf	3,7	;select IRP bank1
  2267     077F  0080               	movwf	0
  2268     0780                     l1178:
  2269                           
  2270                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1528:       conva
      +                          rg.uint /= 10;
  2271     0780  300A               	movlw	10
  2272     0781  00F0               	movwf	___lwdiv@divisor
  2273     0782  3000               	movlw	0
  2274     0783  00F1               	movwf	___lwdiv@divisor+1
  2275     0784  1283               	bcf	3,5	;RP0=0, select bank0
  2276     0785  1303               	bcf	3,6	;RP1=0, select bank0
  2277     0786  0827               	movf	vfpfcnvrt@convarg+1,w
  2278     0787  00F3               	movwf	___lwdiv@dividend+1
  2279     0788  0826               	movf	vfpfcnvrt@convarg,w
  2280     0789  00F2               	movwf	___lwdiv@dividend
  2281     078A  120A  118A  2486  120A  118A  	fcall	___lwdiv
  2282     078F  0871               	movf	?___lwdiv+1,w
  2283     0790  1283               	bcf	3,5	;RP0=0, select bank0
  2284     0791  1303               	bcf	3,6	;RP1=0, select bank0
  2285     0792  00A7               	movwf	vfpfcnvrt@convarg+1
  2286     0793  0870               	movf	?___lwdiv,w
  2287     0794  00A6               	movwf	vfpfcnvrt@convarg
  2288     0795                     l1180:
  2289                           
  2290                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1532:      } whil
      +                          e (convarg.uint != 0 && c != 0);
  2291     0795  0826               	movf	vfpfcnvrt@convarg,w
  2292     0796  0427               	iorwf	vfpfcnvrt@convarg+1,w
  2293     0797  1903               	btfsc	3,2
  2294     0798  2F9A               	goto	u741
  2295     0799  2F9B               	goto	u740
  2296     079A                     u741:
  2297     079A  2FB9               	goto	l1188
  2298     079B                     u740:
  2299     079B                     l1182:
  2300     079B  082B               	movf	vfpfcnvrt@c,w
  2301     079C  1D03               	btfss	3,2
  2302     079D  2F9F               	goto	u751
  2303     079E  2FA0               	goto	u750
  2304     079F                     u751:
  2305     079F  2F6A               	goto	l1176
  2306     07A0                     u750:
  2307     07A0  2FB9               	goto	l1188
  2308     07A1                     l1184:
  2309                           
  2310                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1534:       fputc
      +                          (dbuf[c++], fp);
  2311     07A1  082B               	movf	vfpfcnvrt@c,w
  2312     07A2  3EA0               	addlw	(low (_dbuf| 0))& (0+255)
  2313     07A3  0084               	movwf	4
  2314     07A4  1383               	bcf	3,7	;select IRP bank1
  2315     07A5  0800               	movf	0,w
  2316     07A6  00A4               	movwf	??_vfpfcnvrt
  2317     07A7  01A5               	clrf	??_vfpfcnvrt+1
  2318     07A8  0824               	movf	??_vfpfcnvrt,w
  2319     07A9  00F0               	movwf	fputc@c
  2320     07AA  0825               	movf	??_vfpfcnvrt+1,w
  2321     07AB  00F1               	movwf	fputc@c+1
  2322     07AC  0820               	movf	vfpfcnvrt@fp,w
  2323     07AD  00F2               	movwf	fputc@fp
  2324     07AE  0821               	movf	vfpfcnvrt@fp+1,w
  2325     07AF  00F3               	movwf	fputc@fp+1
  2326     07B0  120A  118A  268E  120A  118A  	fcall	_fputc
  2327     07B5                     l1186:
  2328     07B5  3001               	movlw	1
  2329     07B6  1283               	bcf	3,5	;RP0=0, select bank0
  2330     07B7  1303               	bcf	3,6	;RP1=0, select bank0
  2331     07B8  07AB               	addwf	vfpfcnvrt@c,f
  2332     07B9                     l1188:
  2333                           
  2334                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1533:      while 
      +                          (c != sizeof(dbuf)) {
  2335     07B9  3020               	movlw	32
  2336     07BA  062B               	xorwf	vfpfcnvrt@c,w
  2337     07BB  1D03               	btfss	3,2
  2338     07BC  2FBE               	goto	u761
  2339     07BD  2FBF               	goto	u760
  2340     07BE                     u761:
  2341     07BE  2FA1               	goto	l1184
  2342     07BF                     u760:
  2343     07BF  2FEB               	goto	l730
  2344     07C0                     l1192:
  2345     07C0  082A               	movf	vfpfcnvrt@cp,w
  2346     07C1  0084               	movwf	4
  2347     07C2  120A  118A  200D  120A  118A  	fcall	stringdir
  2348                           
  2349                           ; Switch size 1, requested type "simple"
  2350                           ; Number of cases is 1, Range of values is 117 to 117
  2351                           ; switch strategies available:
  2352                           ; Name         Instructions Cycles
  2353                           ; simple_byte            4     3 (average)
  2354                           ; direct_byte           14    11 (fixed)
  2355                           ; jumptable            263     9 (fixed)
  2356                           ;	Chosen strategy is simple_byte
  2357     07C7  3A75               	xorlw	117	; case 117
  2358     07C8  1903               	skipnz
  2359     07C9  2F68               	goto	l722
  2360     07CA  2FCB               	goto	l1194
  2361     07CB                     l1194:
  2362                           
  2363                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2364     07CB  1283               	bcf	3,5	;RP0=0, select bank0
  2365     07CC  1303               	bcf	3,6	;RP1=0, select bank0
  2366     07CD  0822               	movf	vfpfcnvrt@fmt,w
  2367     07CE  0084               	movwf	4
  2368     07CF  3001               	movlw	1
  2369     07D0  0780               	addwf	0,f
  2370     07D1  2FEB               	goto	l730
  2371     07D2                     l1198:
  2372                           
  2373                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2374     07D2  0822               	movf	vfpfcnvrt@fmt,w
  2375     07D3  0084               	movwf	4
  2376     07D4  0800               	movf	0,w
  2377     07D5  0084               	movwf	4
  2378     07D6  120A  118A  200D  120A  118A  	fcall	stringdir
  2379     07DB  00A4               	movwf	??_vfpfcnvrt
  2380     07DC  01A5               	clrf	??_vfpfcnvrt+1
  2381     07DD  0824               	movf	??_vfpfcnvrt,w
  2382     07DE  00F0               	movwf	fputc@c
  2383     07DF  0825               	movf	??_vfpfcnvrt+1,w
  2384     07E0  00F1               	movwf	fputc@c+1
  2385     07E1  0820               	movf	vfpfcnvrt@fp,w
  2386     07E2  00F2               	movwf	fputc@fp
  2387     07E3  0821               	movf	vfpfcnvrt@fp+1,w
  2388     07E4  00F3               	movwf	fputc@fp+1
  2389     07E5  120A  118A  268E  120A  118A  	fcall	_fputc
  2390     07EA  2FCB               	goto	l1194
  2391     07EB                     l730:
  2392     07EB  0008               	return
  2393     07EC                     __end_of_vfpfcnvrt:
  2394                           
  2395                           	psect	text15
  2396     068E                     __ptext15:	
  2397 ;; *************** function _fputc *****************
  2398 ;; Defined at:
  2399 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_fputc.c"
  2400 ;; Parameters:    Size  Location     Type
  2401 ;;  c               2    0[COMMON] int 
  2402 ;;  fp              2    2[COMMON] PTR struct _IO_FILE
  2403 ;;		 -> sprintf@f(11), 
  2404 ;; Auto vars:     Size  Location     Type
  2405 ;;		None
  2406 ;; Return value:  Size  Location     Type
  2407 ;;                  2    0[COMMON] int 
  2408 ;; Registers used:
  2409 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2410 ;; Tracked objects:
  2411 ;;		On entry : 0/0
  2412 ;;		On exit  : 0/0
  2413 ;;		Unchanged: 0/0
  2414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2415 ;;      Params:         4       0       0       0       0
  2416 ;;      Locals:         0       0       0       0       0
  2417 ;;      Temps:          9       0       0       0       0
  2418 ;;      Totals:        13       0       0       0       0
  2419 ;;Total ram usage:       13 bytes
  2420 ;; Hardware stack levels used: 1
  2421 ;; Hardware stack levels required when called: 1
  2422 ;; This function calls:
  2423 ;;		_putch
  2424 ;; This function is called by:
  2425 ;;		_vfpfcnvrt
  2426 ;; This function uses a non-reentrant model
  2427 ;;
  2428                           
  2429     068E                     _fputc:	
  2430                           ;psect for function _fputc
  2431                           
  2432     068E                     l1140:	
  2433                           ;incstack = 0
  2434                           ; Regs used in _fputc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2435                           
  2436     068E  0872               	movf	fputc@fp,w
  2437     068F  0473               	iorwf	fputc@fp+1,w
  2438     0690  1903               	btfsc	3,2
  2439     0691  2E93               	goto	u641
  2440     0692  2E94               	goto	u640
  2441     0693                     u641:
  2442     0693  2E9A               	goto	l1144
  2443     0694                     u640:
  2444     0694                     l1142:
  2445     0694  0872               	movf	fputc@fp,w
  2446     0695  0473               	iorwf	fputc@fp+1,w
  2447     0696  1D03               	btfss	3,2
  2448     0697  2E99               	goto	u651
  2449     0698  2E9A               	goto	u650
  2450     0699                     u651:
  2451     0699  2EA1               	goto	l1146
  2452     069A                     u650:
  2453     069A                     l1144:
  2454     069A  0870               	movf	fputc@c,w
  2455     069B  120A  118A  22AA  120A  118A  	fcall	_putch
  2456     06A0  2F27               	goto	l749
  2457     06A1                     l1146:
  2458     06A1  0872               	movf	fputc@fp,w
  2459     06A2  3E09               	addlw	9
  2460     06A3  00F4               	movwf	??_fputc
  2461     06A4  0873               	movf	fputc@fp+1,w
  2462     06A5  1803               	skipnc
  2463     06A6  3E01               	addlw	1
  2464     06A7  3E00               	addlw	0
  2465     06A8  00F5               	movwf	??_fputc+1
  2466     06A9  0874               	movf	??_fputc,w
  2467     06AA  0084               	movwf	4
  2468     06AB  1783               	bsf	3,7
  2469     06AC  1C75               	btfss	??_fputc+1,0
  2470     06AD  1383               	bcf	3,7
  2471     06AE  0800               	movf	0,w
  2472     06AF  00F6               	movwf	??_fputc+2
  2473     06B0  0A84               	incf	4,f
  2474     06B1  0800               	movf	0,w
  2475     06B2  00F7               	movwf	??_fputc+3
  2476     06B3  0876               	movf	??_fputc+2,w
  2477     06B4  0477               	iorwf	??_fputc+3,w
  2478     06B5  1903               	btfsc	3,2
  2479     06B6  2EB8               	goto	u661
  2480     06B7  2EB9               	goto	u660
  2481     06B8                     u661:
  2482     06B8  2EEB               	goto	l1150
  2483     06B9                     u660:
  2484     06B9                     l1148:
  2485     06B9  0872               	movf	fputc@fp,w
  2486     06BA  3E09               	addlw	9
  2487     06BB  00F4               	movwf	??_fputc
  2488     06BC  0873               	movf	fputc@fp+1,w
  2489     06BD  1803               	skipnc
  2490     06BE  3E01               	addlw	1
  2491     06BF  3E00               	addlw	0
  2492     06C0  00F5               	movwf	??_fputc+1
  2493     06C1  0874               	movf	??_fputc,w
  2494     06C2  0084               	movwf	4
  2495     06C3  1783               	bsf	3,7
  2496     06C4  1C75               	btfss	??_fputc+1,0
  2497     06C5  1383               	bcf	3,7
  2498     06C6  0800               	movf	0,w
  2499     06C7  00F6               	movwf	??_fputc+2
  2500     06C8  0A84               	incf	4,f
  2501     06C9  0800               	movf	0,w
  2502     06CA  00F7               	movwf	??_fputc+3
  2503     06CB  0872               	movf	fputc@fp,w
  2504     06CC  3E02               	addlw	2
  2505     06CD  00F8               	movwf	??_fputc+4
  2506     06CE  0873               	movf	fputc@fp+1,w
  2507     06CF  1803               	skipnc
  2508     06D0  3E01               	addlw	1
  2509     06D1  3E00               	addlw	0
  2510     06D2  00F9               	movwf	??_fputc+5
  2511     06D3  0878               	movf	??_fputc+4,w
  2512     06D4  0084               	movwf	4
  2513     06D5  1783               	bsf	3,7
  2514     06D6  1C79               	btfss	??_fputc+5,0
  2515     06D7  1383               	bcf	3,7
  2516     06D8  0800               	movf	0,w
  2517     06D9  00FA               	movwf	??_fputc+6
  2518     06DA  0A84               	incf	4,f
  2519     06DB  0800               	movf	0,w
  2520     06DC  00FB               	movwf	??_fputc+7
  2521     06DD  087B               	movf	??_fputc+7,w
  2522     06DE  3A80               	xorlw	128
  2523     06DF  00FC               	movwf	??_fputc+8
  2524     06E0  0877               	movf	??_fputc+3,w
  2525     06E1  3A80               	xorlw	128
  2526     06E2  027C               	subwf	??_fputc+8,w
  2527     06E3  1D03               	skipz
  2528     06E4  2EE7               	goto	u675
  2529     06E5  0876               	movf	??_fputc+2,w
  2530     06E6  027A               	subwf	??_fputc+6,w
  2531     06E7                     u675:
  2532     06E7  1803               	skipnc
  2533     06E8  2EEA               	goto	u671
  2534     06E9  2EEB               	goto	u670
  2535     06EA                     u671:
  2536     06EA  2F27               	goto	l749
  2537     06EB                     u670:
  2538     06EB                     l1150:
  2539     06EB  0872               	movf	fputc@fp,w
  2540     06EC  0084               	movwf	4
  2541     06ED  1783               	bsf	3,7
  2542     06EE  1C73               	btfss	fputc@fp+1,0
  2543     06EF  1383               	bcf	3,7
  2544     06F0  0800               	movf	0,w
  2545     06F1  00F4               	movwf	??_fputc
  2546     06F2  0A84               	incf	4,f
  2547     06F3  0800               	movf	0,w
  2548     06F4  00F5               	movwf	??_fputc+1
  2549     06F5  0872               	movf	fputc@fp,w
  2550     06F6  3E02               	addlw	2
  2551     06F7  00F6               	movwf	??_fputc+2
  2552     06F8  0873               	movf	fputc@fp+1,w
  2553     06F9  1803               	skipnc
  2554     06FA  3E01               	addlw	1
  2555     06FB  3E00               	addlw	0
  2556     06FC  00F7               	movwf	??_fputc+3
  2557     06FD  0876               	movf	??_fputc+2,w
  2558     06FE  0084               	movwf	4
  2559     06FF  1783               	bsf	3,7
  2560     0700  1C77               	btfss	??_fputc+3,0
  2561     0701  1383               	bcf	3,7
  2562     0702  0800               	movf	0,w
  2563     0703  0774               	addwf	??_fputc,w
  2564     0704  00F9               	movwf	??_fputc+5
  2565     0705  0875               	movf	??_fputc+1,w
  2566     0706  00F8               	movwf	??_fputc+4
  2567     0707  1803               	skipnc
  2568     0708  0AF8               	incf	??_fputc+4,f
  2569     0709  1F80               	btfss	0,7
  2570     070A  2F0C               	goto	u680
  2571     070B  03F8               	decf	??_fputc+4,f
  2572     070C                     u680:
  2573     070C  0878               	movf	??_fputc+4,w
  2574     070D  00FA               	movwf	??_fputc+6
  2575     070E  0879               	movf	??_fputc+5,w
  2576     070F  0084               	movwf	4
  2577     0710  1783               	bsf	3,7
  2578     0711  1C7A               	btfss	??_fputc+6,0
  2579     0712  1383               	bcf	3,7
  2580     0713  0870               	movf	fputc@c,w
  2581     0714  0080               	movwf	0
  2582     0715  0872               	movf	fputc@fp,w
  2583     0716  3E02               	addlw	2
  2584     0717  00F4               	movwf	??_fputc
  2585     0718  0873               	movf	fputc@fp+1,w
  2586     0719  1803               	skipnc
  2587     071A  3E01               	addlw	1
  2588     071B  3E00               	addlw	0
  2589     071C  00F5               	movwf	??_fputc+1
  2590     071D  0874               	movf	??_fputc,w
  2591     071E  0084               	movwf	4
  2592     071F  1783               	bsf	3,7
  2593     0720  1C75               	btfss	??_fputc+1,0
  2594     0721  1383               	bcf	3,7
  2595     0722  3001               	movlw	1
  2596     0723  0780               	addwf	0,f
  2597     0724  0A84               	incf	4,f
  2598     0725  1803               	skipnc
  2599     0726  0A80               	incf	0,f
  2600     0727                     l749:
  2601     0727  0008               	return
  2602     0728                     __end_of_fputc:
  2603                           
  2604                           	psect	text16
  2605     02AA                     __ptext16:	
  2606 ;; *************** function _putch *****************
  2607 ;; Defined at:
  2608 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\putch.c"
  2609 ;; Parameters:    Size  Location     Type
  2610 ;;  c               1    wreg     unsigned char 
  2611 ;; Auto vars:     Size  Location     Type
  2612 ;;  c               1    0[COMMON] unsigned char 
  2613 ;; Return value:  Size  Location     Type
  2614 ;;                  1    wreg      void 
  2615 ;; Registers used:
  2616 ;;		wreg
  2617 ;; Tracked objects:
  2618 ;;		On entry : 0/0
  2619 ;;		On exit  : 0/0
  2620 ;;		Unchanged: 0/0
  2621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2622 ;;      Params:         0       0       0       0       0
  2623 ;;      Locals:         0       0       0       0       0
  2624 ;;      Temps:          0       0       0       0       0
  2625 ;;      Totals:         0       0       0       0       0
  2626 ;;Total ram usage:        0 bytes
  2627 ;; Hardware stack levels used: 1
  2628 ;; This function calls:
  2629 ;;		Nothing
  2630 ;; This function is called by:
  2631 ;;		_fputc
  2632 ;; This function uses a non-reentrant model
  2633 ;;
  2634                           
  2635     02AA                     _putch:	
  2636                           ;psect for function _putch
  2637                           
  2638     02AA                     l760:	
  2639                           ;incstack = 0
  2640                           ; Regs used in _putch: [wreg]
  2641                           
  2642     02AA  0008               	return
  2643     02AB                     __end_of_putch:
  2644                           
  2645                           	psect	text17
  2646     044E                     __ptext17:	
  2647 ;; *************** function ___lwmod *****************
  2648 ;; Defined at:
  2649 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\lwmod.c"
  2650 ;; Parameters:    Size  Location     Type
  2651 ;;  divisor         2    0[COMMON] unsigned int 
  2652 ;;  dividend        2    2[COMMON] unsigned int 
  2653 ;; Auto vars:     Size  Location     Type
  2654 ;;  counter         1    4[COMMON] unsigned char 
  2655 ;; Return value:  Size  Location     Type
  2656 ;;                  2    0[COMMON] unsigned int 
  2657 ;; Registers used:
  2658 ;;		wreg, status,2, status,0
  2659 ;; Tracked objects:
  2660 ;;		On entry : 0/0
  2661 ;;		On exit  : 0/0
  2662 ;;		Unchanged: 0/0
  2663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2664 ;;      Params:         4       0       0       0       0
  2665 ;;      Locals:         1       0       0       0       0
  2666 ;;      Temps:          0       0       0       0       0
  2667 ;;      Totals:         5       0       0       0       0
  2668 ;;Total ram usage:        5 bytes
  2669 ;; Hardware stack levels used: 1
  2670 ;; This function calls:
  2671 ;;		Nothing
  2672 ;; This function is called by:
  2673 ;;		_vfpfcnvrt
  2674 ;; This function uses a non-reentrant model
  2675 ;;
  2676                           
  2677     044E                     ___lwmod:	
  2678                           ;psect for function ___lwmod
  2679                           
  2680     044E                     l1118:	
  2681                           ;incstack = 0
  2682                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2683                           
  2684     044E  0870               	movf	___lwmod@divisor,w
  2685     044F  0471               	iorwf	___lwmod@divisor+1,w
  2686     0450  1903               	btfsc	3,2
  2687     0451  2C53               	goto	u581
  2688     0452  2C54               	goto	u580
  2689     0453                     u581:
  2690     0453  2C81               	goto	l1136
  2691     0454                     u580:
  2692     0454                     l1120:
  2693     0454  3001               	movlw	1
  2694     0455  00F4               	movwf	___lwmod@counter
  2695     0456  2C60               	goto	l1126
  2696     0457                     l1122:
  2697     0457  3001               	movlw	1
  2698     0458                     u595:
  2699     0458  1003               	clrc
  2700     0459  0DF0               	rlf	___lwmod@divisor,f
  2701     045A  0DF1               	rlf	___lwmod@divisor+1,f
  2702     045B  3EFF               	addlw	-1
  2703     045C  1D03               	skipz
  2704     045D  2C58               	goto	u595
  2705     045E                     l1124:
  2706     045E  3001               	movlw	1
  2707     045F  07F4               	addwf	___lwmod@counter,f
  2708     0460                     l1126:
  2709     0460  1FF1               	btfss	___lwmod@divisor+1,7
  2710     0461  2C63               	goto	u601
  2711     0462  2C64               	goto	u600
  2712     0463                     u601:
  2713     0463  2C57               	goto	l1122
  2714     0464                     u600:
  2715     0464                     l1128:
  2716     0464  0871               	movf	___lwmod@divisor+1,w
  2717     0465  0273               	subwf	___lwmod@dividend+1,w
  2718     0466  1D03               	skipz
  2719     0467  2C6A               	goto	u615
  2720     0468  0870               	movf	___lwmod@divisor,w
  2721     0469  0272               	subwf	___lwmod@dividend,w
  2722     046A                     u615:
  2723     046A  1C03               	skipc
  2724     046B  2C6D               	goto	u611
  2725     046C  2C6E               	goto	u610
  2726     046D                     u611:
  2727     046D  2C74               	goto	l1132
  2728     046E                     u610:
  2729     046E                     l1130:
  2730     046E  0870               	movf	___lwmod@divisor,w
  2731     046F  02F2               	subwf	___lwmod@dividend,f
  2732     0470  0871               	movf	___lwmod@divisor+1,w
  2733     0471  1C03               	skipc
  2734     0472  03F3               	decf	___lwmod@dividend+1,f
  2735     0473  02F3               	subwf	___lwmod@dividend+1,f
  2736     0474                     l1132:
  2737     0474  3001               	movlw	1
  2738     0475                     u625:
  2739     0475  1003               	clrc
  2740     0476  0CF1               	rrf	___lwmod@divisor+1,f
  2741     0477  0CF0               	rrf	___lwmod@divisor,f
  2742     0478  3EFF               	addlw	-1
  2743     0479  1D03               	skipz
  2744     047A  2C75               	goto	u625
  2745     047B                     l1134:
  2746     047B  3001               	movlw	1
  2747     047C  02F4               	subwf	___lwmod@counter,f
  2748     047D  1D03               	btfss	3,2
  2749     047E  2C80               	goto	u631
  2750     047F  2C81               	goto	u630
  2751     0480                     u631:
  2752     0480  2C64               	goto	l1128
  2753     0481                     u630:
  2754     0481                     l1136:
  2755     0481  0873               	movf	___lwmod@dividend+1,w
  2756     0482  00F1               	movwf	?___lwmod+1
  2757     0483  0872               	movf	___lwmod@dividend,w
  2758     0484  00F0               	movwf	?___lwmod
  2759     0485                     l520:
  2760     0485  0008               	return
  2761     0486                     __end_of___lwmod:
  2762                           
  2763                           	psect	text18
  2764     0486                     __ptext18:	
  2765 ;; *************** function ___lwdiv *****************
  2766 ;; Defined at:
  2767 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\lwdiv.c"
  2768 ;; Parameters:    Size  Location     Type
  2769 ;;  divisor         2    0[COMMON] unsigned int 
  2770 ;;  dividend        2    2[COMMON] unsigned int 
  2771 ;; Auto vars:     Size  Location     Type
  2772 ;;  quotient        2    4[COMMON] unsigned int 
  2773 ;;  counter         1    6[COMMON] unsigned char 
  2774 ;; Return value:  Size  Location     Type
  2775 ;;                  2    0[COMMON] unsigned int 
  2776 ;; Registers used:
  2777 ;;		wreg, status,2, status,0
  2778 ;; Tracked objects:
  2779 ;;		On entry : 0/0
  2780 ;;		On exit  : 0/0
  2781 ;;		Unchanged: 0/0
  2782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2783 ;;      Params:         4       0       0       0       0
  2784 ;;      Locals:         3       0       0       0       0
  2785 ;;      Temps:          0       0       0       0       0
  2786 ;;      Totals:         7       0       0       0       0
  2787 ;;Total ram usage:        7 bytes
  2788 ;; Hardware stack levels used: 1
  2789 ;; This function calls:
  2790 ;;		Nothing
  2791 ;; This function is called by:
  2792 ;;		_vfpfcnvrt
  2793 ;; This function uses a non-reentrant model
  2794 ;;
  2795                           
  2796     0486                     ___lwdiv:	
  2797                           ;psect for function ___lwdiv
  2798                           
  2799     0486                     l1092:	
  2800                           ;incstack = 0
  2801                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2802                           
  2803     0486  01F4               	clrf	___lwdiv@quotient
  2804     0487  01F5               	clrf	___lwdiv@quotient+1
  2805     0488                     l1094:
  2806     0488  0870               	movf	___lwdiv@divisor,w
  2807     0489  0471               	iorwf	___lwdiv@divisor+1,w
  2808     048A  1903               	btfsc	3,2
  2809     048B  2C8D               	goto	u511
  2810     048C  2C8E               	goto	u510
  2811     048D                     u511:
  2812     048D  2CC3               	goto	l1114
  2813     048E                     u510:
  2814     048E                     l1096:
  2815     048E  3001               	movlw	1
  2816     048F  00F6               	movwf	___lwdiv@counter
  2817     0490  2C9A               	goto	l1102
  2818     0491                     l1098:
  2819     0491  3001               	movlw	1
  2820     0492                     u525:
  2821     0492  1003               	clrc
  2822     0493  0DF0               	rlf	___lwdiv@divisor,f
  2823     0494  0DF1               	rlf	___lwdiv@divisor+1,f
  2824     0495  3EFF               	addlw	-1
  2825     0496  1D03               	skipz
  2826     0497  2C92               	goto	u525
  2827     0498                     l1100:
  2828     0498  3001               	movlw	1
  2829     0499  07F6               	addwf	___lwdiv@counter,f
  2830     049A                     l1102:
  2831     049A  1FF1               	btfss	___lwdiv@divisor+1,7
  2832     049B  2C9D               	goto	u531
  2833     049C  2C9E               	goto	u530
  2834     049D                     u531:
  2835     049D  2C91               	goto	l1098
  2836     049E                     u530:
  2837     049E                     l1104:
  2838     049E  3001               	movlw	1
  2839     049F                     u545:
  2840     049F  1003               	clrc
  2841     04A0  0DF4               	rlf	___lwdiv@quotient,f
  2842     04A1  0DF5               	rlf	___lwdiv@quotient+1,f
  2843     04A2  3EFF               	addlw	-1
  2844     04A3  1D03               	skipz
  2845     04A4  2C9F               	goto	u545
  2846     04A5  0871               	movf	___lwdiv@divisor+1,w
  2847     04A6  0273               	subwf	___lwdiv@dividend+1,w
  2848     04A7  1D03               	skipz
  2849     04A8  2CAB               	goto	u555
  2850     04A9  0870               	movf	___lwdiv@divisor,w
  2851     04AA  0272               	subwf	___lwdiv@dividend,w
  2852     04AB                     u555:
  2853     04AB  1C03               	skipc
  2854     04AC  2CAE               	goto	u551
  2855     04AD  2CAF               	goto	u550
  2856     04AE                     u551:
  2857     04AE  2CB6               	goto	l1110
  2858     04AF                     u550:
  2859     04AF                     l1106:
  2860     04AF  0870               	movf	___lwdiv@divisor,w
  2861     04B0  02F2               	subwf	___lwdiv@dividend,f
  2862     04B1  0871               	movf	___lwdiv@divisor+1,w
  2863     04B2  1C03               	skipc
  2864     04B3  03F3               	decf	___lwdiv@dividend+1,f
  2865     04B4  02F3               	subwf	___lwdiv@dividend+1,f
  2866     04B5                     l1108:
  2867     04B5  1474               	bsf	___lwdiv@quotient,0
  2868     04B6                     l1110:
  2869     04B6  3001               	movlw	1
  2870     04B7                     u565:
  2871     04B7  1003               	clrc
  2872     04B8  0CF1               	rrf	___lwdiv@divisor+1,f
  2873     04B9  0CF0               	rrf	___lwdiv@divisor,f
  2874     04BA  3EFF               	addlw	-1
  2875     04BB  1D03               	skipz
  2876     04BC  2CB7               	goto	u565
  2877     04BD                     l1112:
  2878     04BD  3001               	movlw	1
  2879     04BE  02F6               	subwf	___lwdiv@counter,f
  2880     04BF  1D03               	btfss	3,2
  2881     04C0  2CC2               	goto	u571
  2882     04C1  2CC3               	goto	u570
  2883     04C2                     u571:
  2884     04C2  2C9E               	goto	l1104
  2885     04C3                     u570:
  2886     04C3                     l1114:
  2887     04C3  0875               	movf	___lwdiv@quotient+1,w
  2888     04C4  00F1               	movwf	?___lwdiv+1
  2889     04C5  0874               	movf	___lwdiv@quotient,w
  2890     04C6  00F0               	movwf	?___lwdiv
  2891     04C7                     l510:
  2892     04C7  0008               	return
  2893     04C8                     __end_of___lwdiv:
  2894                           
  2895                           	psect	text19
  2896     03CC                     __ptext19:	
  2897 ;; *************** function _UART_Print *****************
  2898 ;; Defined at:
  2899 ;;		line 213 in file "atividade13.c"
  2900 ;; Parameters:    Size  Location     Type
  2901 ;;  str             2    1[COMMON] PTR const unsigned char 
  2902 ;;		 -> UART_PrintInt@buffer(10), STR_6(39), STR_5(3), STR_4(41), 
  2903 ;;		 -> STR_3(34), 
  2904 ;; Auto vars:     Size  Location     Type
  2905 ;;		None
  2906 ;; Return value:  Size  Location     Type
  2907 ;;                  1    wreg      void 
  2908 ;; Registers used:
  2909 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2910 ;; Tracked objects:
  2911 ;;		On entry : 0/0
  2912 ;;		On exit  : 0/0
  2913 ;;		Unchanged: 0/0
  2914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2915 ;;      Params:         2       0       0       0       0
  2916 ;;      Locals:         0       0       0       0       0
  2917 ;;      Temps:          0       0       0       0       0
  2918 ;;      Totals:         2       0       0       0       0
  2919 ;;Total ram usage:        2 bytes
  2920 ;; Hardware stack levels used: 1
  2921 ;; Hardware stack levels required when called: 1
  2922 ;; This function calls:
  2923 ;;		_UART_PrintChar
  2924 ;; This function is called by:
  2925 ;;		_I2C_scan
  2926 ;;		_UART_PrintInt
  2927 ;; This function uses a non-reentrant model
  2928 ;;
  2929                           
  2930     03CC                     _UART_Print:	
  2931                           ;psect for function _UART_Print
  2932                           
  2933     03CC                     l1256:	
  2934                           ;incstack = 0
  2935                           ; Regs used in _UART_Print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2936                           
  2937                           
  2938                           ;atividade13.c: 214:     while (*str) {
  2939     03CC  2BE1               	goto	l1262
  2940     03CD                     l1258:
  2941                           
  2942                           ;atividade13.c: 215:         UART_PrintChar(*str++);
  2943     03CD  0872               	movf	UART_Print@str+1,w
  2944     03CE  00FF               	movwf	btemp+1
  2945     03CF  0871               	movf	UART_Print@str,w
  2946     03D0  0084               	movwf	4
  2947     03D1  120A  118A  2003  120A  118A  	fcall	stringtab
  2948     03D6  120A  118A  22C3  120A  118A  	fcall	_UART_PrintChar
  2949     03DB                     l1260:
  2950     03DB  3001               	movlw	1
  2951     03DC  07F1               	addwf	UART_Print@str,f
  2952     03DD  1803               	skipnc
  2953     03DE  0AF2               	incf	UART_Print@str+1,f
  2954     03DF  3000               	movlw	0
  2955     03E0  07F2               	addwf	UART_Print@str+1,f
  2956     03E1                     l1262:
  2957                           
  2958                           ;atividade13.c: 214:     while (*str) {
  2959     03E1  0872               	movf	UART_Print@str+1,w
  2960     03E2  1283               	bcf	3,5	;RP0=0, select bank0
  2961     03E3  1303               	bcf	3,6	;RP1=0, select bank0
  2962     03E4  00FF               	movwf	btemp+1
  2963     03E5  0871               	movf	UART_Print@str,w
  2964     03E6  0084               	movwf	4
  2965     03E7  120A  118A  2003  120A  118A  	fcall	stringtab
  2966     03EC  3A00               	xorlw	0
  2967     03ED  1D03               	skipz
  2968     03EE  2BF0               	goto	u841
  2969     03EF  2BF1               	goto	u840
  2970     03F0                     u841:
  2971     03F0  2BCD               	goto	l1258
  2972     03F1                     u840:
  2973     03F1                     l141:
  2974     03F1  0008               	return
  2975     03F2                     __end_of_UART_Print:
  2976                           
  2977                           	psect	text20
  2978     02C3                     __ptext20:	
  2979 ;; *************** function _UART_PrintChar *****************
  2980 ;; Defined at:
  2981 ;;		line 208 in file "atividade13.c"
  2982 ;; Parameters:    Size  Location     Type
  2983 ;;  c               1    wreg     unsigned char 
  2984 ;; Auto vars:     Size  Location     Type
  2985 ;;  c               1    0[COMMON] unsigned char 
  2986 ;; Return value:  Size  Location     Type
  2987 ;;                  1    wreg      void 
  2988 ;; Registers used:
  2989 ;;		wreg
  2990 ;; Tracked objects:
  2991 ;;		On entry : 0/0
  2992 ;;		On exit  : 0/0
  2993 ;;		Unchanged: 0/0
  2994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2995 ;;      Params:         0       0       0       0       0
  2996 ;;      Locals:         1       0       0       0       0
  2997 ;;      Temps:          0       0       0       0       0
  2998 ;;      Totals:         1       0       0       0       0
  2999 ;;Total ram usage:        1 bytes
  3000 ;; Hardware stack levels used: 1
  3001 ;; This function calls:
  3002 ;;		Nothing
  3003 ;; This function is called by:
  3004 ;;		_UART_Print
  3005 ;; This function uses a non-reentrant model
  3006 ;;
  3007                           
  3008     02C3                     _UART_PrintChar:	
  3009                           ;psect for function _UART_PrintChar
  3010                           
  3011                           
  3012                           ;incstack = 0
  3013                           ; Regs used in _UART_PrintChar: [wreg]
  3014                           ;UART_PrintChar@c stored from wreg
  3015     02C3  00F0               	movwf	UART_PrintChar@c
  3016     02C4                     l1242:
  3017     02C4                     l132:	
  3018                           ;atividade13.c: 209:     while (!TXIF);
  3019                           
  3020     02C4  1283               	bcf	3,5	;RP0=0, select bank0
  3021     02C5  1303               	bcf	3,6	;RP1=0, select bank0
  3022     02C6  1E0C               	btfss	12,4	;volatile
  3023     02C7  2AC9               	goto	u821
  3024     02C8  2ACA               	goto	u820
  3025     02C9                     u821:
  3026     02C9  2AC4               	goto	l132
  3027     02CA                     u820:
  3028     02CA                     l1244:
  3029                           
  3030                           ;atividade13.c: 210:     TXREG = c;
  3031     02CA  0870               	movf	UART_PrintChar@c,w
  3032     02CB  0099               	movwf	25	;volatile
  3033     02CC                     l135:
  3034     02CC  0008               	return
  3035     02CD                     __end_of_UART_PrintChar:
  3036                           
  3037                           	psect	text21
  3038     02FF                     __ptext21:	
  3039 ;; *************** function _I2C_Master_Write *****************
  3040 ;; Defined at:
  3041 ;;		line 82 in file "atividade13.c"
  3042 ;; Parameters:    Size  Location     Type
  3043 ;;  data            1    wreg     unsigned char 
  3044 ;; Auto vars:     Size  Location     Type
  3045 ;;  data            1    0[COMMON] unsigned char 
  3046 ;; Return value:  Size  Location     Type
  3047 ;;                  1    wreg      void 
  3048 ;; Registers used:
  3049 ;;		wreg, status,2, status,0, pclath, cstack
  3050 ;; Tracked objects:
  3051 ;;		On entry : 0/0
  3052 ;;		On exit  : 0/0
  3053 ;;		Unchanged: 0/0
  3054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3055 ;;      Params:         0       0       0       0       0
  3056 ;;      Locals:         1       0       0       0       0
  3057 ;;      Temps:          0       0       0       0       0
  3058 ;;      Totals:         1       0       0       0       0
  3059 ;;Total ram usage:        1 bytes
  3060 ;; Hardware stack levels used: 1
  3061 ;; Hardware stack levels required when called: 1
  3062 ;; This function calls:
  3063 ;;		_I2C_Master_Stop
  3064 ;; This function is called by:
  3065 ;;		_I2C_scan
  3066 ;;		_LCD_sendNibble
  3067 ;;		_LCD_backlight
  3068 ;; This function uses a non-reentrant model
  3069 ;;
  3070                           
  3071     02FF                     _I2C_Master_Write:	
  3072                           ;psect for function _I2C_Master_Write
  3073                           
  3074                           
  3075                           ;incstack = 0
  3076                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  3077                           ;I2C_Master_Write@data stored from wreg
  3078     02FF  00F0               	movwf	I2C_Master_Write@data
  3079     0300                     l1156:
  3080                           
  3081                           ;atividade13.c: 83:     SSPBUF = data;
  3082     0300  0870               	movf	I2C_Master_Write@data,w
  3083     0301  1283               	bcf	3,5	;RP0=0, select bank0
  3084     0302  1303               	bcf	3,6	;RP1=0, select bank0
  3085     0303  0093               	movwf	19	;volatile
  3086     0304                     l76:	
  3087                           ;atividade13.c: 84:     while (BF);
  3088                           
  3089     0304  1683               	bsf	3,5	;RP0=1, select bank1
  3090     0305  1303               	bcf	3,6	;RP1=0, select bank1
  3091     0306  1814               	btfsc	20,0	;volatile
  3092     0307  2B09               	goto	u701
  3093     0308  2B0A               	goto	u700
  3094     0309                     u701:
  3095     0309  2B04               	goto	l76
  3096     030A                     u700:
  3097     030A                     l78:
  3098                           
  3099                           ;atividade13.c: 85:     if (SSPCON2bits.ACKSTAT) {
  3100     030A  1F11               	btfss	17,6	;volatile
  3101     030B  2B0D               	goto	u711
  3102     030C  2B0E               	goto	u710
  3103     030D                     u711:
  3104     030D  2B13               	goto	l80
  3105     030E                     u710:
  3106     030E                     l1158:
  3107                           
  3108                           ;atividade13.c: 86:         I2C_Master_Stop();
  3109     030E  120A  118A  22B3  120A  118A  	fcall	_I2C_Master_Stop
  3110     0313                     l80:
  3111     0313  0008               	return
  3112     0314                     __end_of_I2C_Master_Write:
  3113                           
  3114                           	psect	text22
  3115     02B3                     __ptext22:	
  3116 ;; *************** function _I2C_Master_Stop *****************
  3117 ;; Defined at:
  3118 ;;		line 77 in file "atividade13.c"
  3119 ;; Parameters:    Size  Location     Type
  3120 ;;		None
  3121 ;; Auto vars:     Size  Location     Type
  3122 ;;		None
  3123 ;; Return value:  Size  Location     Type
  3124 ;;                  1    wreg      void 
  3125 ;; Registers used:
  3126 ;;		None
  3127 ;; Tracked objects:
  3128 ;;		On entry : 0/0
  3129 ;;		On exit  : 0/0
  3130 ;;		Unchanged: 0/0
  3131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3132 ;;      Params:         0       0       0       0       0
  3133 ;;      Locals:         0       0       0       0       0
  3134 ;;      Temps:          0       0       0       0       0
  3135 ;;      Totals:         0       0       0       0       0
  3136 ;;Total ram usage:        0 bytes
  3137 ;; Hardware stack levels used: 1
  3138 ;; This function calls:
  3139 ;;		Nothing
  3140 ;; This function is called by:
  3141 ;;		_I2C_Master_Write
  3142 ;;		_I2C_scan
  3143 ;;		_LCD_sendNibble
  3144 ;;		_LCD_backlight
  3145 ;; This function uses a non-reentrant model
  3146 ;;
  3147                           
  3148     02B3                     _I2C_Master_Stop:	
  3149                           ;psect for function _I2C_Master_Stop
  3150                           
  3151     02B3                     l1090:	
  3152                           ;incstack = 0
  3153                           ; Regs used in _I2C_Master_Stop: []
  3154                           
  3155                           
  3156                           ;atividade13.c: 78:     PEN = 1;
  3157     02B3  1683               	bsf	3,5	;RP0=1, select bank1
  3158     02B4  1303               	bcf	3,6	;RP1=0, select bank1
  3159     02B5  1511               	bsf	17,2	;volatile
  3160     02B6                     l70:	
  3161                           ;atividade13.c: 79:     while(PEN);
  3162                           
  3163     02B6  1911               	btfsc	17,2	;volatile
  3164     02B7  2AB9               	goto	u501
  3165     02B8  2ABA               	goto	u500
  3166     02B9                     u501:
  3167     02B9  2AB6               	goto	l70
  3168     02BA                     u500:
  3169     02BA                     l73:
  3170     02BA  0008               	return
  3171     02BB                     __end_of_I2C_Master_Stop:
  3172                           
  3173                           	psect	text23
  3174     02AB                     __ptext23:	
  3175 ;; *************** function _I2C_Master_Start *****************
  3176 ;; Defined at:
  3177 ;;		line 72 in file "atividade13.c"
  3178 ;; Parameters:    Size  Location     Type
  3179 ;;		None
  3180 ;; Auto vars:     Size  Location     Type
  3181 ;;		None
  3182 ;; Return value:  Size  Location     Type
  3183 ;;                  1    wreg      void 
  3184 ;; Registers used:
  3185 ;;		None
  3186 ;; Tracked objects:
  3187 ;;		On entry : 0/0
  3188 ;;		On exit  : 0/0
  3189 ;;		Unchanged: 0/0
  3190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3191 ;;      Params:         0       0       0       0       0
  3192 ;;      Locals:         0       0       0       0       0
  3193 ;;      Temps:          0       0       0       0       0
  3194 ;;      Totals:         0       0       0       0       0
  3195 ;;Total ram usage:        0 bytes
  3196 ;; Hardware stack levels used: 1
  3197 ;; This function calls:
  3198 ;;		Nothing
  3199 ;; This function is called by:
  3200 ;;		_I2C_scan
  3201 ;;		_LCD_sendNibble
  3202 ;;		_LCD_backlight
  3203 ;; This function uses a non-reentrant model
  3204 ;;
  3205                           
  3206     02AB                     _I2C_Master_Start:	
  3207                           ;psect for function _I2C_Master_Start
  3208                           
  3209     02AB                     l1154:	
  3210                           ;incstack = 0
  3211                           ; Regs used in _I2C_Master_Start: []
  3212                           
  3213                           
  3214                           ;atividade13.c: 73:     SEN = 1;
  3215     02AB  1683               	bsf	3,5	;RP0=1, select bank1
  3216     02AC  1303               	bcf	3,6	;RP1=0, select bank1
  3217     02AD  1411               	bsf	17,0	;volatile
  3218     02AE                     l64:	
  3219                           ;atividade13.c: 74:     while(SEN);
  3220                           
  3221     02AE  1811               	btfsc	17,0	;volatile
  3222     02AF  2AB1               	goto	u691
  3223     02B0  2AB2               	goto	u690
  3224     02B1                     u691:
  3225     02B1  2AAE               	goto	l64
  3226     02B2                     u690:
  3227     02B2                     l67:
  3228     02B2  0008               	return
  3229     02B3                     __end_of_I2C_Master_Start:
  3230                           
  3231                           	psect	text24
  3232     0418                     __ptext24:	
  3233 ;; *************** function _I2C_Master_Init *****************
  3234 ;; Defined at:
  3235 ;;		line 65 in file "atividade13.c"
  3236 ;; Parameters:    Size  Location     Type
  3237 ;;  c               4    0[BANK0 ] unsigned long 
  3238 ;; Auto vars:     Size  Location     Type
  3239 ;;		None
  3240 ;; Return value:  Size  Location     Type
  3241 ;;                  1    wreg      void 
  3242 ;; Registers used:
  3243 ;;		wreg, status,2, status,0, pclath, cstack
  3244 ;; Tracked objects:
  3245 ;;		On entry : 0/0
  3246 ;;		On exit  : 0/0
  3247 ;;		Unchanged: 0/0
  3248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3249 ;;      Params:         0       4       0       0       0
  3250 ;;      Locals:         0       0       0       0       0
  3251 ;;      Temps:          0       4       0       0       0
  3252 ;;      Totals:         0       8       0       0       0
  3253 ;;Total ram usage:        8 bytes
  3254 ;; Hardware stack levels used: 1
  3255 ;; Hardware stack levels required when called: 1
  3256 ;; This function calls:
  3257 ;;		___lldiv
  3258 ;; This function is called by:
  3259 ;;		_main
  3260 ;; This function uses a non-reentrant model
  3261 ;;
  3262                           
  3263     0418                     _I2C_Master_Init:	
  3264                           ;psect for function _I2C_Master_Init
  3265                           
  3266     0418                     l1314:	
  3267                           ;incstack = 0
  3268                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  3269                           
  3270                           
  3271                           ;atividade13.c: 66:     SSPCON = 0x28;
  3272     0418  3028               	movlw	40
  3273     0419  1283               	bcf	3,5	;RP0=0, select bank0
  3274     041A  1303               	bcf	3,6	;RP1=0, select bank0
  3275     041B  0094               	movwf	20	;volatile
  3276     041C                     l1316:
  3277                           
  3278                           ;atividade13.c: 67:     SSPCON2 = 0x00;
  3279     041C  1683               	bsf	3,5	;RP0=1, select bank1
  3280     041D  1303               	bcf	3,6	;RP1=0, select bank1
  3281     041E  0191               	clrf	17	;volatile
  3282     041F                     l1318:
  3283                           
  3284                           ;atividade13.c: 68:     SSPADD = (unsigned char)((4000000 / (4 * c)) - 1);
  3285     041F  1283               	bcf	3,5	;RP0=0, select bank0
  3286     0420  1303               	bcf	3,6	;RP1=0, select bank0
  3287     0421  0820               	movf	I2C_Master_Init@c,w
  3288     0422  00A4               	movwf	??_I2C_Master_Init
  3289     0423  0821               	movf	I2C_Master_Init@c+1,w
  3290     0424  00A5               	movwf	??_I2C_Master_Init+1
  3291     0425  0822               	movf	I2C_Master_Init@c+2,w
  3292     0426  00A6               	movwf	??_I2C_Master_Init+2
  3293     0427  0823               	movf	I2C_Master_Init@c+3,w
  3294     0428  00A7               	movwf	??_I2C_Master_Init+3
  3295     0429  3002               	movlw	2
  3296     042A                     u935:
  3297     042A  1003               	clrc
  3298     042B  0DA4               	rlf	??_I2C_Master_Init,f
  3299     042C  0DA5               	rlf	??_I2C_Master_Init+1,f
  3300     042D  0DA6               	rlf	??_I2C_Master_Init+2,f
  3301     042E  0DA7               	rlf	??_I2C_Master_Init+3,f
  3302     042F                     u930:
  3303     042F  3EFF               	addlw	-1
  3304     0430  1D03               	skipz
  3305     0431  2C2A               	goto	u935
  3306     0432  0827               	movf	??_I2C_Master_Init+3,w
  3307     0433  00F3               	movwf	___lldiv@divisor+3
  3308     0434  0826               	movf	??_I2C_Master_Init+2,w
  3309     0435  00F2               	movwf	___lldiv@divisor+2
  3310     0436  0825               	movf	??_I2C_Master_Init+1,w
  3311     0437  00F1               	movwf	___lldiv@divisor+1
  3312     0438  0824               	movf	??_I2C_Master_Init,w
  3313     0439  00F0               	movwf	___lldiv@divisor
  3314     043A  3000               	movlw	0
  3315     043B  00F7               	movwf	___lldiv@dividend+3
  3316     043C  303D               	movlw	61
  3317     043D  00F6               	movwf	___lldiv@dividend+2
  3318     043E  3009               	movlw	9
  3319     043F  00F5               	movwf	___lldiv@dividend+1
  3320     0440  3000               	movlw	0
  3321     0441  00F4               	movwf	___lldiv@dividend
  3322     0442  120A  118A  262A  120A  118A  	fcall	___lldiv
  3323     0447  0870               	movf	?___lldiv,w
  3324     0448  3EFF               	addlw	255
  3325     0449  1683               	bsf	3,5	;RP0=1, select bank1
  3326     044A  1303               	bcf	3,6	;RP1=0, select bank1
  3327     044B  0093               	movwf	19	;volatile
  3328     044C                     l1320:
  3329                           
  3330                           ;atividade13.c: 69:     SSPSTAT = 0x00;
  3331     044C  0194               	clrf	20	;volatile
  3332     044D                     l61:
  3333     044D  0008               	return
  3334     044E                     __end_of_I2C_Master_Init:
  3335                           
  3336                           	psect	text25
  3337     062A                     __ptext25:	
  3338 ;; *************** function ___lldiv *****************
  3339 ;; Defined at:
  3340 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\__lldiv.c"
  3341 ;; Parameters:    Size  Location     Type
  3342 ;;  divisor         4    0[COMMON] unsigned long 
  3343 ;;  dividend        4    4[COMMON] unsigned long 
  3344 ;; Auto vars:     Size  Location     Type
  3345 ;;  quotient        4    9[COMMON] unsigned long 
  3346 ;;  counter         1   13[COMMON] unsigned char 
  3347 ;; Return value:  Size  Location     Type
  3348 ;;                  4    0[COMMON] unsigned long 
  3349 ;; Registers used:
  3350 ;;		wreg, status,2, status,0
  3351 ;; Tracked objects:
  3352 ;;		On entry : 0/0
  3353 ;;		On exit  : 0/0
  3354 ;;		Unchanged: 0/0
  3355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3356 ;;      Params:         8       0       0       0       0
  3357 ;;      Locals:         5       0       0       0       0
  3358 ;;      Temps:          1       0       0       0       0
  3359 ;;      Totals:        14       0       0       0       0
  3360 ;;Total ram usage:       14 bytes
  3361 ;; Hardware stack levels used: 1
  3362 ;; This function calls:
  3363 ;;		Nothing
  3364 ;; This function is called by:
  3365 ;;		_I2C_Master_Init
  3366 ;; This function uses a non-reentrant model
  3367 ;;
  3368                           
  3369     062A                     ___lldiv:	
  3370                           ;psect for function ___lldiv
  3371                           
  3372     062A                     l1290:	
  3373                           ;incstack = 0
  3374                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3375                           
  3376     062A  3000               	movlw	0
  3377     062B  00FC               	movwf	___lldiv@quotient+3
  3378     062C  3000               	movlw	0
  3379     062D  00FB               	movwf	___lldiv@quotient+2
  3380     062E  3000               	movlw	0
  3381     062F  00FA               	movwf	___lldiv@quotient+1
  3382     0630  3000               	movlw	0
  3383     0631  00F9               	movwf	___lldiv@quotient
  3384     0632  0873               	movf	___lldiv@divisor+3,w
  3385     0633  0472               	iorwf	___lldiv@divisor+2,w
  3386     0634  0471               	iorwf	___lldiv@divisor+1,w
  3387     0635  0470               	iorwf	___lldiv@divisor,w
  3388     0636  1903               	skipnz
  3389     0637  2E39               	goto	u861
  3390     0638  2E3A               	goto	u860
  3391     0639                     u861:
  3392     0639  2E85               	goto	l1310
  3393     063A                     u860:
  3394     063A                     l1292:
  3395     063A  3001               	movlw	1
  3396     063B  00FD               	movwf	___lldiv@counter
  3397     063C  2E48               	goto	l1296
  3398     063D                     l1294:
  3399     063D  3001               	movlw	1
  3400     063E  00F8               	movwf	??___lldiv
  3401     063F                     u875:
  3402     063F  1003               	clrc
  3403     0640  0DF0               	rlf	___lldiv@divisor,f
  3404     0641  0DF1               	rlf	___lldiv@divisor+1,f
  3405     0642  0DF2               	rlf	___lldiv@divisor+2,f
  3406     0643  0DF3               	rlf	___lldiv@divisor+3,f
  3407     0644  0BF8               	decfsz	??___lldiv,f
  3408     0645  2E3F               	goto	u875
  3409     0646  3001               	movlw	1
  3410     0647  07FD               	addwf	___lldiv@counter,f
  3411     0648                     l1296:
  3412     0648  1FF3               	btfss	___lldiv@divisor+3,7
  3413     0649  2E4B               	goto	u881
  3414     064A  2E4C               	goto	u880
  3415     064B                     u881:
  3416     064B  2E3D               	goto	l1294
  3417     064C                     u880:
  3418     064C                     l1298:
  3419     064C  3001               	movlw	1
  3420     064D  00F8               	movwf	??___lldiv
  3421     064E                     u895:
  3422     064E  1003               	clrc
  3423     064F  0DF9               	rlf	___lldiv@quotient,f
  3424     0650  0DFA               	rlf	___lldiv@quotient+1,f
  3425     0651  0DFB               	rlf	___lldiv@quotient+2,f
  3426     0652  0DFC               	rlf	___lldiv@quotient+3,f
  3427     0653  0BF8               	decfsz	??___lldiv,f
  3428     0654  2E4E               	goto	u895
  3429     0655                     l1300:
  3430     0655  0873               	movf	___lldiv@divisor+3,w
  3431     0656  0277               	subwf	___lldiv@dividend+3,w
  3432     0657  1D03               	skipz
  3433     0658  2E63               	goto	u905
  3434     0659  0872               	movf	___lldiv@divisor+2,w
  3435     065A  0276               	subwf	___lldiv@dividend+2,w
  3436     065B  1D03               	skipz
  3437     065C  2E63               	goto	u905
  3438     065D  0871               	movf	___lldiv@divisor+1,w
  3439     065E  0275               	subwf	___lldiv@dividend+1,w
  3440     065F  1D03               	skipz
  3441     0660  2E63               	goto	u905
  3442     0661  0870               	movf	___lldiv@divisor,w
  3443     0662  0274               	subwf	___lldiv@dividend,w
  3444     0663                     u905:
  3445     0663  1C03               	skipc
  3446     0664  2E66               	goto	u901
  3447     0665  2E67               	goto	u900
  3448     0666                     u901:
  3449     0666  2E76               	goto	l1306
  3450     0667                     u900:
  3451     0667                     l1302:
  3452     0667  0870               	movf	___lldiv@divisor,w
  3453     0668  02F4               	subwf	___lldiv@dividend,f
  3454     0669  0871               	movf	___lldiv@divisor+1,w
  3455     066A  1C03               	skipc
  3456     066B  0F71               	incfsz	___lldiv@divisor+1,w
  3457     066C  02F5               	subwf	___lldiv@dividend+1,f
  3458     066D  0872               	movf	___lldiv@divisor+2,w
  3459     066E  1C03               	skipc
  3460     066F  0F72               	incfsz	___lldiv@divisor+2,w
  3461     0670  02F6               	subwf	___lldiv@dividend+2,f
  3462     0671  0873               	movf	___lldiv@divisor+3,w
  3463     0672  1C03               	skipc
  3464     0673  0F73               	incfsz	___lldiv@divisor+3,w
  3465     0674  02F7               	subwf	___lldiv@dividend+3,f
  3466     0675                     l1304:
  3467     0675  1479               	bsf	___lldiv@quotient,0
  3468     0676                     l1306:
  3469     0676  3001               	movlw	1
  3470     0677                     u915:
  3471     0677  1003               	clrc
  3472     0678  0CF3               	rrf	___lldiv@divisor+3,f
  3473     0679  0CF2               	rrf	___lldiv@divisor+2,f
  3474     067A  0CF1               	rrf	___lldiv@divisor+1,f
  3475     067B  0CF0               	rrf	___lldiv@divisor,f
  3476     067C  3EFF               	addlw	-1
  3477     067D  1D03               	skipz
  3478     067E  2E77               	goto	u915
  3479     067F                     l1308:
  3480     067F  3001               	movlw	1
  3481     0680  02FD               	subwf	___lldiv@counter,f
  3482     0681  1D03               	btfss	3,2
  3483     0682  2E84               	goto	u921
  3484     0683  2E85               	goto	u920
  3485     0684                     u921:
  3486     0684  2E4C               	goto	l1298
  3487     0685                     u920:
  3488     0685                     l1310:
  3489     0685  087C               	movf	___lldiv@quotient+3,w
  3490     0686  00F3               	movwf	?___lldiv+3
  3491     0687  087B               	movf	___lldiv@quotient+2,w
  3492     0688  00F2               	movwf	?___lldiv+2
  3493     0689  087A               	movf	___lldiv@quotient+1,w
  3494     068A  00F1               	movwf	?___lldiv+1
  3495     068B  0879               	movf	___lldiv@quotient,w
  3496     068C  00F0               	movwf	?___lldiv
  3497     068D                     l266:
  3498     068D  0008               	return
  3499     068E                     __end_of___lldiv:
  3500     0002                     ___latbits      equ	2
  3501     007E                     btemp           set	126	;btemp
  3502     007E                     wtemp0          set	126

Data Sizes:
    Strings     136
    Constant    0
    Data        0
    BSS         37
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     48      53
    BANK1            80      0      32
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 10
		 -> UART_PrintInt@buffer(BANK0[10]), 

    f$.$source	PTR const unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 10
		 -> UART_PrintInt@buffer(BANK0[10]), 

    fputc@fp$.$source	PTR const unsigned char  size(1) Largest target is 0

    LCD_print@str	PTR const unsigned char  size(1) Largest target is 11
		 -> STR_1(CODE[11]), STR_2(CODE[8]), 

    S619$buffer	PTR unsigned char  size(2) Largest target is 10
		 -> UART_PrintInt@buffer(BANK0[10]), 

    S619$source	PTR const unsigned char  size(1) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_7(CODE[3]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 10
		 -> UART_PrintInt@buffer(BANK0[10]), 

    UART_Print@str	PTR const unsigned char  size(2) Largest target is 41
		 -> STR_3(CODE[34]), STR_4(CODE[41]), STR_5(CODE[3]), STR_6(CODE[39]), 
		 -> UART_PrintInt@buffer(BANK0[10]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 3
		 -> STR_7(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMMON[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 3
		 -> STR_7(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_7(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 


Critical Paths under _main in COMMON

    _LCD_setCursor->_LCD_command
    _LCD_print->_LCD_data
    _LCD_data->_LCD_sendByte
    _LCD_init->_LCD_command
    _LCD_command->_LCD_sendByte
    _LCD_sendByte->_LCD_sendNibble
    _LCD_sendNibble->_I2C_Master_Write
    _LCD_backlight->_I2C_Master_Write
    _sprintf->_vfprintf
    _vfpfcnvrt->_fputc
    _UART_Print->_UART_PrintChar
    _I2C_Master_Init->___lldiv

Critical Paths under _main in BANK0

    _main->_I2C_scan
    _I2C_scan->_UART_PrintInt
    _UART_PrintInt->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3451
                    _I2C_Master_Init
                           _I2C_scan
                      _LCD_backlight
                           _LCD_init
                          _LCD_print
                      _LCD_setCursor
                          _UART_Init
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_setCursor                                        5     4      1     482
                                             11 COMMON     1     0      1
                                              0 BANK0      4     4      0
                        _LCD_command
 ---------------------------------------------------------------------------------
 (1) _LCD_print                                            1     0      1     407
                                             11 COMMON     1     0      1
                           _LCD_data
 ---------------------------------------------------------------------------------
 (2) _LCD_data                                             3     3      0     360
                                              8 COMMON     3     3      0
                       _LCD_sendByte
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             2     2      0     587
                                             11 COMMON     2     2      0
                        _LCD_command
                     _LCD_sendNibble
 ---------------------------------------------------------------------------------
 (2) _LCD_command                                          3     3      0     360
                                              8 COMMON     3     3      0
                       _LCD_sendByte
 ---------------------------------------------------------------------------------
 (3) _LCD_sendByte                                         3     2      1     331
                                              5 COMMON     3     2      1
                     _LCD_sendNibble
 ---------------------------------------------------------------------------------
 (4) _LCD_sendNibble                                       4     3      1     227
                                              1 COMMON     4     3      1
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _LCD_backlight                                        4     4      0     105
                                              1 COMMON     4     4      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _I2C_scan                                             3     3      0    1683
                                             45 BANK0      3     3      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                         _UART_Print
                      _UART_PrintInt
 ---------------------------------------------------------------------------------
 (2) _UART_PrintInt                                       12    10      2    1485
                                             33 BANK0     12    10      2
                         _UART_Print
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             19    15      4    1333
                                             16 BANK0     17    13      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             5     1      4    1128
                                             13 COMMON     1     1      0
                                             12 BANK0      4     0      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           13     9      4    1003
                                              0 BANK0     12     8      4
                            ___lwdiv
                            ___lwmod
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                               13     9      4     230
                                              0 COMMON    13     9      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     161
                                              0 COMMON     5     1      4
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4     164
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) _UART_Print                                           2     0      2      79
                                              1 COMMON     2     0      2
                     _UART_PrintChar
 ---------------------------------------------------------------------------------
 (4) _UART_PrintChar                                       1     1      0      29
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Write                                     1     1      0      29
                                              0 COMMON     1     1      0
                    _I2C_Master_Stop
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Stop                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Start                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     187
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     164
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _I2C_scan
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
       _I2C_Master_Stop
     _UART_Print
       _UART_PrintChar
     _UART_PrintInt
       _UART_Print
       _sprintf
         _vfprintf
           _vfpfcnvrt
             ___lwdiv
             ___lwmod
             _fputc
               _putch
   _LCD_backlight
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
   _LCD_init
     _LCD_command
       _LCD_sendByte
         _LCD_sendNibble
           _I2C_Master_Start
           _I2C_Master_Stop
           _I2C_Master_Write
     _LCD_sendNibble
   _LCD_print
     _LCD_data
       _LCD_sendByte
   _LCD_setCursor
     _LCD_command
   _UART_Init

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14     14      14    100.0%
BANK0               80     48      53     66.2%
BANK1               80      0      32     40.0%
BANK3               96      0       0      0.0%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      99      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Tue Feb 18 15:42:47 2025

                       pc 0002                        _BF 04A0                        l61 044D  
                      l70 02B6                        l55 050A                        l64 02AE  
                      l80 0313                        l56 050A                        l73 02BA  
                      l90 051A                        l67 02B2                        l91 051F  
                      l76 0304                        l78 030A                        l86 05C7  
                      l94 0566                        l89 0515                        l97 0347  
                      fsr 0004                       l100 02EB                       l103 02FE  
                     l112 037B                       l113 0383                       l106 0629  
                     l132 02C4                       l141 03F1                       l125 03FF  
                     l126 0417                       l135 02CC                       l119 0363  
                     l144 032C                       l129 02D9                       l510 04C7  
                     l520 0485                       l266 068D                       l730 07EB  
                     l722 0768                       l760 02AA                       l737 03CB  
                     l749 0727                       l693 03A6                       l986 02CD  
                     u500 02BA                       u501 02B9                       u510 048E  
                     u511 048D                       u600 0464                       _PEN 048A  
                     u601 0463                       u530 049E                       u610 046E  
                     u531 049D                       u611 046D                       u700 030A  
                     u701 0309                       u525 0492                       u710 030E  
                     u550 04AF                       u630 0481                       u711 030D  
                     u551 04AE                       u631 0480                       u615 046A  
                     u640 0694                       u720 0738                       u800 0523  
                     u545 049F                       u625 0475                       u641 0693  
                     u721 0737                       u801 0522                       u570 04C3  
                     u650 069A                       u730 0754                       u810 0529  
                     u571 04C2                       u555 04AB                       u651 0699  
                     u731 0753                       u811 0528                       u900 0667  
                     u820 02CA                       u580 0454                       u660 06B9  
                     u740 079B                       _SEN 0488                       u901 0666  
                     u821 02C9                       u565 04B7                       u581 0453  
                     u661 06B8                       u741 079A                       u670 06EB  
                     u750 07A0                       u830 03C7                       u671 06EA  
                     u751 079F                       u831 03C6                       u920 0685  
                     u840 03F1                       u680 070C                       u760 07BF  
                     u921 0684                       u905 0663                       u841 03F0  
                     u761 07BE                       u930 042F                       u690 02B2  
                     u770 0514                       u915 0677                       u691 02B1  
                     u595 0458                       u675 06E7                       u771 0513  
                     u860 063A                       u940 0589                       u780 0519  
                     u861 0639                       u941 0588                       u781 0518  
                     u950 05BE                       u790 051E                       u935 042A  
                     u951 05BD                       u791 051D                       u855 0333  
                     u880 064C                       u960 03F8                       u881 064B  
                     u961 03F7                       u970 036C                       u875 063F  
                     u971 036B                       u980 0363                       u981 0362  
                     u895 064E                       u997 02F9                       fsr0 0004  
                     indf 0000                      l1100 0498                      l1110 04B6  
                    l1102 049A                      l1112 04BD                      l1104 049E  
                    l1120 0454                      l1106 04AF                      l1114 04C3  
                    l1130 046E                      l1122 0457                      l1210 0519  
                    l1300 0655                      l1108 04B5                      l1132 0474  
                    l1124 045E                      l1140 068E                      l1220 052A  
                    l1212 051E                      l1204 050F                      l1302 0667  
                    l1310 0685                      l1134 047B                      l1126 0460  
                    l1118 044E                      l1150 06EB                      l1142 0694  
                    l1230 0539                      l1222 052C                      l1214 0523  
                    l1206 0510                      l1304 0675                      l1320 044C  
                    l1128 0464                      l1136 0481                      l1144 069A  
                    l1160 0728                      l1240 055C                      l1232 053F  
                    l1224 052D                      l1216 0524                      l1208 0514  
                    l1400 04CD                      l1306 0676                      l1314 0418  
                    l1154 02AB                      l1090 02B3                      l1242 02C4  
                    l1146 06A1                      l1170 0748                      l1162 0738  
                    l1250 03BB                      l1330 0574                      l1322 0567  
                    l1234 0544                      l1226 052E                      l1218 0529  
                    l1410 04F4                      l1402 04DC                      l1308 067F  
                    l1316 041C                      l1156 0300                      l1244 02CA  
                    l1260 03DB                      l1092 0486                      l1148 06B9  
                    l1180 0795                      l1172 0754                      l1164 073C  
                    l1252 03C7                      l1340 0597                      l1332 0579  
                    l1324 0570                      l1236 0549                      l1228 0533  
                    l1412 04FB                      l1404 04E1                      l1318 041F  
                    l1158 030E                      l1262 03E1                      l1094 0488  
                    l1182 079B                      l1174 0762                      l1166 0740  
                    l1246 03A7                      l1270 038C                      l1350 05B8  
                    l1342 05A5                      l1334 0583                      l1238 054B  
                    l1414 0503                      l1406 04E6                      l1256 03CC  
                    l1096 048E                      l1184 07A1                      l1176 076A  
                    l1192 07C0                      l1168 0744                      l1248 03AC  
                    l1272 038E                      l1280 0314                      l1352 05BE  
                    l1336 0589                      l1264 032E                      l1360 05E7  
                    l1408 04EC                      l1290 062A                      l1258 03CD  
                    l1098 0491                      l1186 07B5                      l1178 0780  
                    l1194 07CB                      l1274 0390                      l1266 0384  
                    l1338 058E                      l1346 05AF                      l1282 02DB  
                    l1370 0623                      l1362 05EC                      l1354 05C8  
                    l1292 063A                      l1188 07B9                      l1276 039D  
                    l1268 0388                      l1348 05B4                      l1380 0412  
                    l1372 03F3                      l1284 02E2                      l1364 05F8  
                    l1356 05D0                      l1294 063D                      l1198 07D2  
                    l1374 03F8                      l1366 05FF                      l1358 05D7  
                    l1286 02ED                      l1390 0348                      l1382 0367  
                    l1296 0648                      l1376 03FB                      l1368 061A  
                    l1288 02F5                      l1392 0349                      l1384 036C  
                    l1298 064C                      l1378 0401                      l1394 0355  
                    l1386 0374                      l1396 0357                      l1388 037D  
                    l1398 04C8                      STR_1 0085                      STR_2 0090  
                    STR_3 0063                      STR_4 0013                      STR_5 0060  
                    STR_6 003C                      STR_7 0098              ?_LCD_command 0070  
                    u1007 05CC                      u1017 05DB                      u1027 05E9  
                    u1037 05F5                      u1047 0603                      u1057 061E  
                    u1067 02E6                      u1077 0546                      u1087 0563  
                    _TXIF 0064                      _dbuf 00A0                      _main 04C8  
                    _prec 0052                      btemp 007E          __end_of_I2C_scan 05C8  
                    start 0000             _LCD_backlight 03F2          ?_I2C_Master_Init 0020  
        ?_I2C_Master_Stop 0070          __end_of_LCD_data 02FF          __end_of_LCD_init 062A  
                   ?_main 0070           __end_of___lldiv 068E           __end_of___lwdiv 04C8  
         __end_of___lwmod 0486                     _RCSTA 0018              vfpfcnvrt@fmt 0022  
                   _SPBRG 0099                     _TXREG 0019                     _TXSTA 0098  
             ?_UART_Print 0071                     _flags 0054                     _fputc 068E  
           ?_LCD_sendByte 0075                     _width 0050                     _putch 02AA  
                   pclath 000A                     status 0003                     wtemp0 007E  
         __end_of_sprintf 03A7           __initialization 07EC            ?_LCD_backlight 0070  
       _LCD_backlight$167 0072              __end_of_main 050E            LCD_sendByte@rs 0075  
                  ??_main 007E             _LCD_setCursor 0364         ?_I2C_Master_Start 0070  
       ?_I2C_Master_Write 0070         __end_of_LCD_print 0364            ??_LCD_sendByte 0076  
      ??_I2C_Master_Start 0070        ??_I2C_Master_Write 0070                    ?_fputc 0070  
                  ?_putch 0070                    _SSPADD 0093                    _SSPCON 0014  
                  _SSPBUF 0013              vfprintf@cfmt 007D         __end_of_UART_Init 02DA  
               ??___lldiv 0078                 ??___lwdiv 0074                 ??___lwmod 0074  
            LCD_data@data 007A            ?_LCD_setCursor 007B                    fputc@c 0070  
               ?_I2C_scan 0070        LCD_backlight@state 0071                    putch@c 0070  
        __end_of_vfprintf 03CC                 ??_sprintf 0034   __end_of__initialization 07FC  
   __end_of_UART_PrintInt 032D                 ?_LCD_data 0070                 ?_LCD_init 0070  
         ??_LCD_backlight 0071            __pcstackCOMMON 0070             __end_of_fputc 0728  
           __end_of_putch 02AB                ??_I2C_scan 004D            _LCD_sendNibble 050E  
                 ??_fputc 0074              LCD_print@str 007B                   ??_putch 0070  
              __pbssBANK0 0050                __pbssBANK1 00A0                ??_LCD_data 0078  
              ??_LCD_init 007B                __pmaintext 04C8      __end_of_LCD_sendByte 0348  
         ??_LCD_setCursor 007C        LCD_sendNibble@data 0074    __end_of_LCD_sendNibble 0567  
            ??_UART_Print 0073                   _SSPCON2 0091                   _SSPSTAT 0094  
    LCD_sendNibble@nibble 0073                __stringtab 0003        __end_of_UART_Print 03F2  
                 ___lldiv 062A                   ___lwdiv 0486                   ___lwmod 044E  
               ?_vfprintf 002C                   __ptext1 02CD                   __ptext2 0364  
                 __ptext3 0348                   __ptext4 02EC                   __ptext5 05C8  
                 __ptext6 02DA                   __ptext7 032D                   __ptext8 050E  
                 __ptext9 03F2           ?_LCD_sendNibble 0071                   _sprintf 0384  
                 clrloop0 02BC      end_of_initialization 07FC         _LCD_setCursor$160 0021  
          _UART_PrintChar 02C3                 _LCD_print 0348                   fputc@fp 0072  
         ___lldiv@divisor 0070           ___lldiv@counter 007D        LCD_setCursor@linha 0020  
       __end_of_vfpfcnvrt 07EC          I2C_Master_Init@c 0020          vfpfcnvrt@convarg 0026  
              ??_vfprintf 007D                 _UART_Init 02CD    __end_of_UART_PrintChar 02CD  
              ?_LCD_print 007B               vfpfcnvrt@ap 0023               vfpfcnvrt@cp 002A  
             vfpfcnvrt@fp 0020                ?_UART_Init 0070       start_initialization 07EC  
         ?_UART_PrintChar 0070             ??_LCD_command 0078              _LCD_sendByte 032D  
        LCD_sendByte@byte 0077         ??_I2C_Master_Init 0024         ??_I2C_Master_Stop 0070  
        LCD_sendNibble@rs 0071               vfprintf@fmt 002E     __end_of_LCD_backlight 0418  
       LCD_backlight@data 0074          LCD_setCursor@pos 0023                 ___latbits 0002  
           __pcstackBANK0 0020               ??_LCD_print 007C          _I2C_Master_Start 02AB  
        _I2C_Master_Write 02FF       __end_of_LCD_command 02EC          ___lwdiv@dividend 0072  
                ?___lldiv 0070                  ?___lwdiv 0070                  ?___lwmod 0070  
             ??_UART_Init 0070          ??_LCD_sendNibble 0072      I2C_Master_Write@data 0070  
   __end_of_LCD_setCursor 0384                 __pstrings 0003                  _I2C_scan 0567  
        ___lwdiv@quotient 0074                  ?_sprintf 0030             UART_Print@str 0071  
                _LCD_data 02EC                  _LCD_init 05C8             _UART_PrintInt 0314  
               clear_ram0 02BB                 _vfpfcnvrt 0728               __stringbase 0012  
              vfpfcnvrt@c 002B               _LCD_command 02DA            ?_UART_PrintInt 0041  
         I2C_scan@address 004F                vfprintf@ap 002F                vfprintf@fp 002C  
              ?_vfpfcnvrt 0020        __end_of__stringtab 0013          ??_UART_PrintChar 0070  
              sprintf@fmt 0031           _I2C_Master_Init 0418           _I2C_Master_Stop 02B3  
         ___lwdiv@divisor 0070           ___lwdiv@counter 0076                  __ptext10 0567  
                __ptext11 0314                  __ptext20 02C3                  __ptext12 0384  
                __ptext21 02FF                  __ptext13 03A7                  __ptext22 02B3  
                __ptext14 0728                  __ptext23 02AB                  __ptext15 068E  
                __ptext24 0418                  __ptext16 02AA                  __ptext25 062A  
                __ptext17 044E                  __ptext18 0486                  __ptext19 03CC  
         UART_PrintChar@c 0070                  _vfprintf 03A7  __end_of_I2C_Master_Start 02B3  
__end_of_I2C_Master_Write 0314       UART_PrintInt@buffer 0043           ??_UART_PrintInt 007E  
               sprintf@ap 0035          ___lwmod@dividend 0072          ___lldiv@dividend 0074  
               stringcode 000D       LCD_setCursor@coluna 007B   __end_of_I2C_Master_Init 044E  
 __end_of_I2C_Master_Stop 02BB               ??_vfpfcnvrt 0024                  sprintf@f 0036  
      UART_PrintInt@valor 0041                  sprintf@s 0030          ___lldiv@quotient 0079  
         ___lwmod@divisor 0070           ___lwmod@counter 0074                  stringdir 000D  
                stringtab 0003                _UART_Print 03CC               _SSPCON2bits 0091  
          LCD_command@cmd 007A  
