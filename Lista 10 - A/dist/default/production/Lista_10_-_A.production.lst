

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Fri Jan 31 17:15:16 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F877
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     8                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
     9                           	psect	intentry,global,class=CODE,space=0,delta=2
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12     0000                     
    13                           ; Generated 12/10/2023 GMT
    14                           ; 
    15                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution. Publication is not required when
    29                           ;        this file is used in an embedded application.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F877 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47     0004                     fsr             equ	4
    48     0004                     fsr0            equ	4
    49     0000                     indf            equ	0
    50     0000                     indf0           equ	0
    51     0002                     pc              equ	2
    52     0002                     pcl             equ	2
    53     000A                     pclath          equ	10
    54     0003                     status          equ	3
    55     0000                     INDF            equ	0	;# 
    56     0001                     TMR0            equ	1	;# 
    57     0002                     PCL             equ	2	;# 
    58     0003                     STATUS          equ	3	;# 
    59     0004                     FSR             equ	4	;# 
    60     0005                     PORTA           equ	5	;# 
    61     0006                     PORTB           equ	6	;# 
    62     0007                     PORTC           equ	7	;# 
    63     0008                     PORTD           equ	8	;# 
    64     0009                     PORTE           equ	9	;# 
    65     000A                     PCLATH          equ	10	;# 
    66     000B                     INTCON          equ	11	;# 
    67     000C                     PIR1            equ	12	;# 
    68     000D                     PIR2            equ	13	;# 
    69     000E                     TMR1            equ	14	;# 
    70     000E                     TMR1L           equ	14	;# 
    71     000F                     TMR1H           equ	15	;# 
    72     0010                     T1CON           equ	16	;# 
    73     0011                     TMR2            equ	17	;# 
    74     0012                     T2CON           equ	18	;# 
    75     0013                     SSPBUF          equ	19	;# 
    76     0014                     SSPCON          equ	20	;# 
    77     0015                     CCPR1           equ	21	;# 
    78     0015                     CCPR1L          equ	21	;# 
    79     0016                     CCPR1H          equ	22	;# 
    80     0017                     CCP1CON         equ	23	;# 
    81     0018                     RCSTA           equ	24	;# 
    82     0019                     TXREG           equ	25	;# 
    83     001A                     RCREG           equ	26	;# 
    84     001B                     CCPR2           equ	27	;# 
    85     001B                     CCPR2L          equ	27	;# 
    86     001C                     CCPR2H          equ	28	;# 
    87     001D                     CCP2CON         equ	29	;# 
    88     001E                     ADRESH          equ	30	;# 
    89     001F                     ADCON0          equ	31	;# 
    90     0081                     OPTION_REG      equ	129	;# 
    91     0085                     TRISA           equ	133	;# 
    92     0086                     TRISB           equ	134	;# 
    93     0087                     TRISC           equ	135	;# 
    94     0088                     TRISD           equ	136	;# 
    95     0089                     TRISE           equ	137	;# 
    96     008C                     PIE1            equ	140	;# 
    97     008D                     PIE2            equ	141	;# 
    98     008E                     PCON            equ	142	;# 
    99     0091                     SSPCON2         equ	145	;# 
   100     0092                     PR2             equ	146	;# 
   101     0093                     SSPADD          equ	147	;# 
   102     0094                     SSPSTAT         equ	148	;# 
   103     0098                     TXSTA           equ	152	;# 
   104     0099                     SPBRG           equ	153	;# 
   105     009E                     ADRESL          equ	158	;# 
   106     009F                     ADCON1          equ	159	;# 
   107     010C                     EEDATA          equ	268	;# 
   108     010D                     EEADR           equ	269	;# 
   109     010E                     EEDATH          equ	270	;# 
   110     010F                     EEADRH          equ	271	;# 
   111     018C                     EECON1          equ	396	;# 
   112     018D                     EECON2          equ	397	;# 
   113     0000                     INDF            equ	0	;# 
   114     0001                     TMR0            equ	1	;# 
   115     0002                     PCL             equ	2	;# 
   116     0003                     STATUS          equ	3	;# 
   117     0004                     FSR             equ	4	;# 
   118     0005                     PORTA           equ	5	;# 
   119     0006                     PORTB           equ	6	;# 
   120     0007                     PORTC           equ	7	;# 
   121     0008                     PORTD           equ	8	;# 
   122     0009                     PORTE           equ	9	;# 
   123     000A                     PCLATH          equ	10	;# 
   124     000B                     INTCON          equ	11	;# 
   125     000C                     PIR1            equ	12	;# 
   126     000D                     PIR2            equ	13	;# 
   127     000E                     TMR1            equ	14	;# 
   128     000E                     TMR1L           equ	14	;# 
   129     000F                     TMR1H           equ	15	;# 
   130     0010                     T1CON           equ	16	;# 
   131     0011                     TMR2            equ	17	;# 
   132     0012                     T2CON           equ	18	;# 
   133     0013                     SSPBUF          equ	19	;# 
   134     0014                     SSPCON          equ	20	;# 
   135     0015                     CCPR1           equ	21	;# 
   136     0015                     CCPR1L          equ	21	;# 
   137     0016                     CCPR1H          equ	22	;# 
   138     0017                     CCP1CON         equ	23	;# 
   139     0018                     RCSTA           equ	24	;# 
   140     0019                     TXREG           equ	25	;# 
   141     001A                     RCREG           equ	26	;# 
   142     001B                     CCPR2           equ	27	;# 
   143     001B                     CCPR2L          equ	27	;# 
   144     001C                     CCPR2H          equ	28	;# 
   145     001D                     CCP2CON         equ	29	;# 
   146     001E                     ADRESH          equ	30	;# 
   147     001F                     ADCON0          equ	31	;# 
   148     0081                     OPTION_REG      equ	129	;# 
   149     0085                     TRISA           equ	133	;# 
   150     0086                     TRISB           equ	134	;# 
   151     0087                     TRISC           equ	135	;# 
   152     0088                     TRISD           equ	136	;# 
   153     0089                     TRISE           equ	137	;# 
   154     008C                     PIE1            equ	140	;# 
   155     008D                     PIE2            equ	141	;# 
   156     008E                     PCON            equ	142	;# 
   157     0091                     SSPCON2         equ	145	;# 
   158     0092                     PR2             equ	146	;# 
   159     0093                     SSPADD          equ	147	;# 
   160     0094                     SSPSTAT         equ	148	;# 
   161     0098                     TXSTA           equ	152	;# 
   162     0099                     SPBRG           equ	153	;# 
   163     009E                     ADRESL          equ	158	;# 
   164     009F                     ADCON1          equ	159	;# 
   165     010C                     EEDATA          equ	268	;# 
   166     010D                     EEADR           equ	269	;# 
   167     010E                     EEDATH          equ	270	;# 
   168     010F                     EEADRH          equ	271	;# 
   169     018C                     EECON1          equ	396	;# 
   170     018D                     EECON2          equ	397	;# 
   171     000B                     _INTCON         set	11
   172     0012                     _T2CON          set	18
   173     0006                     _PORTBbits      set	6
   174     000B                     _INTCONbits     set	11
   175     0008                     _PORTD          set	8
   176     000C                     _PIR1bits       set	12
   177     008C                     _PIE1           set	140
   178     0092                     _PR2            set	146
   179     0086                     _TRISB          set	134
   180     0088                     _TRISD          set	136
   181                           
   182                           	psect	cinit
   183     000F                     start_initialization:	
   184                           ; #config settings
   185                           
   186     000F                     __initialization:
   187                           
   188                           ; Clear objects allocated to COMMON
   189     000F  01F0               	clrf	__pbssCOMMON& (0+127)
   190     0010  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   191     0011  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   192     0012  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   193     0013  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   194     0014  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   195     0015                     end_of_initialization:	
   196                           ;End of C runtime variable initialization code
   197                           
   198     0015                     __end_of__initialization:
   199     0015  0183               	clrf	3
   200     0016  120A  118A  285A   	ljmp	_main	;jump to C main() function
   201                           
   202                           	psect	bssCOMMON
   203     0070                     __pbssCOMMON:
   204     0070                     _contador_timer2:
   205     0070                     	ds	2
   206     0072                     _estado_anterior_rb7:
   207     0072                     	ds	1
   208     0073                     _estado_led_rd2:
   209     0073                     	ds	1
   210     0074                     _estado_led_rd1:
   211     0074                     	ds	1
   212     0075                     _estado_led_rd0:
   213     0075                     	ds	1
   214                           
   215                           	psect	cstackCOMMON
   216     0076                     __pcstackCOMMON:
   217     0076                     ?_interrupcao:
   218     0076                     ?_main:	
   219                           ; 1 bytes @ 0x0
   220                           
   221     0076                     ??_interrupcao:	
   222                           ; 1 bytes @ 0x0
   223                           
   224                           
   225                           ; 1 bytes @ 0x0
   226     0076                     	ds	2
   227     0078                     ??_main:
   228                           
   229                           	psect	maintext
   230     005A                     __pmaintext:	
   231                           ; 1 bytes @ 0x2
   232 ;;
   233 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   234 ;;
   235 ;; *************** function _main *****************
   236 ;; Defined at:
   237 ;;		line 49 in file "atividade10.c"
   238 ;; Parameters:    Size  Location     Type
   239 ;;		None
   240 ;; Auto vars:     Size  Location     Type
   241 ;;		None
   242 ;; Return value:  Size  Location     Type
   243 ;;                  1    wreg      void 
   244 ;; Registers used:
   245 ;;		wreg, status,2, status,0
   246 ;; Tracked objects:
   247 ;;		On entry : B00/0
   248 ;;		On exit  : 0/0
   249 ;;		Unchanged: 0/0
   250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   251 ;;      Params:         0       0       0       0       0
   252 ;;      Locals:         0       0       0       0       0
   253 ;;      Temps:          0       0       0       0       0
   254 ;;      Totals:         0       0       0       0       0
   255 ;;Total ram usage:        0 bytes
   256 ;; Hardware stack levels required when called: 1
   257 ;; This function calls:
   258 ;;		Nothing
   259 ;; This function is called by:
   260 ;;		Startup code after reset
   261 ;; This function uses a non-reentrant model
   262 ;;
   263                           
   264     005A                     _main:	
   265                           ;psect for function _main
   266                           
   267     005A                     l624:	
   268                           ;incstack = 0
   269                           ; Regs used in _main: [wreg+status,2+status,0]
   270                           
   271                           
   272                           ;atividade10.c: 51: 
   273     005A  1683               	bsf	3,5	;RP0=1, select bank1
   274     005B  1303               	bcf	3,6	;RP1=0, select bank1
   275     005C  0188               	clrf	8	;volatile
   276     005D                     l626:
   277                           
   278                           ;atividade10.c: 52:     INTCON = 0b11011000;
   279     005D  3081               	movlw	129
   280     005E  0086               	movwf	6	;volatile
   281                           
   282                           ;atividade10.c: 53:     PIE1 = 0b00000010;
   283     005F  1283               	bcf	3,5	;RP0=0, select bank0
   284     0060  1303               	bcf	3,6	;RP1=0, select bank0
   285     0061  0188               	clrf	8	;volatile
   286     0062                     l628:
   287                           
   288                           ;atividade10.c: 54:     PIR1bits.TMR2IF = 0;
   289     0062  0D06               	rlf	6,w	;volatile
   290     0063  0D06               	rlf	6,w	;volatile
   291     0064  3901               	andlw	1
   292     0065  00F2               	movwf	_estado_anterior_rb7	;volatile
   293     0066                     l630:
   294                           
   295                           ;atividade10.c: 57: }
   296     0066  3007               	movlw	7
   297     0067  0092               	movwf	18	;volatile
   298     0068                     l632:
   299     0068  30FA               	movlw	250
   300     0069  1683               	bsf	3,5	;RP0=1, select bank1
   301     006A  1303               	bcf	3,6	;RP1=0, select bank1
   302     006B  0092               	movwf	18	;volatile
   303     006C                     l634:
   304     006C  30D8               	movlw	216
   305     006D  008B               	movwf	11	;volatile
   306     006E                     l636:
   307     006E  3002               	movlw	2
   308     006F  008C               	movwf	12	;volatile
   309     0070                     l638:
   310     0070  1283               	bcf	3,5	;RP0=0, select bank0
   311     0071  1303               	bcf	3,6	;RP1=0, select bank0
   312     0072  108C               	bcf	12,1	;volatile
   313     0073                     l45:
   314     0073                     l46:
   315     0073  2873               	goto	l45
   316     0074  120A  118A  280C   	ljmp	start
   317     0077                     __end_of_main:
   318                           
   319                           	psect	text1
   320     0019                     __ptext1:	
   321 ;; *************** function _interrupcao *****************
   322 ;; Defined at:
   323 ;;		line 19 in file "atividade10.c"
   324 ;; Parameters:    Size  Location     Type
   325 ;;		None
   326 ;; Auto vars:     Size  Location     Type
   327 ;;		None
   328 ;; Return value:  Size  Location     Type
   329 ;;                  1    wreg      void 
   330 ;; Registers used:
   331 ;;		wreg, status,2, status,0
   332 ;; Tracked objects:
   333 ;;		On entry : 0/0
   334 ;;		On exit  : 0/0
   335 ;;		Unchanged: 0/0
   336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   337 ;;      Params:         0       0       0       0       0
   338 ;;      Locals:         0       0       0       0       0
   339 ;;      Temps:          2       0       0       0       0
   340 ;;      Totals:         2       0       0       0       0
   341 ;;Total ram usage:        2 bytes
   342 ;; Hardware stack levels used: 1
   343 ;; This function calls:
   344 ;;		Nothing
   345 ;; This function is called by:
   346 ;;		Interrupt level 1
   347 ;; This function uses a non-reentrant model
   348 ;;
   349                           
   350     0019                     _interrupcao:	
   351                           ;psect for function _interrupcao
   352                           
   353     0019                     i1l592:
   354                           
   355                           ;atividade10.c: 21: 
   356     0019  1283               	bcf	3,5	;RP0=0, select bank0
   357     001A  1303               	bcf	3,6	;RP1=0, select bank0
   358     001B  1C8C               	btfss	12,1	;volatile
   359     001C  281E               	goto	u1_21
   360     001D  281F               	goto	u1_20
   361     001E                     u1_21:
   362     001E  2835               	goto	i1l604
   363     001F                     u1_20:
   364     001F                     i1l594:
   365                           
   366                           ;atividade10.c: 22: 
   367     001F  108C               	bcf	12,1	;volatile
   368     0020                     i1l596:
   369                           
   370                           ;atividade10.c: 23:     if (INTCONbits.INTF) {
   371     0020  3001               	movlw	1
   372     0021  07F0               	addwf	_contador_timer2,f	;volatile
   373     0022  1803               	skipnc
   374     0023  0AF1               	incf	_contador_timer2+1,f	;volatile
   375     0024  3000               	movlw	0
   376     0025  07F1               	addwf	_contador_timer2+1,f	;volatile
   377                           
   378                           ;atividade10.c: 24:         INTCONbits.INTF = 0;
   379     0026  3000               	movlw	0
   380     0027  0271               	subwf	_contador_timer2+1,w	;volatile
   381     0028  309C               	movlw	156
   382     0029  1903               	skipnz
   383     002A  0270               	subwf	_contador_timer2,w	;volatile
   384     002B  1C03               	skipc
   385     002C  282E               	goto	u2_21
   386     002D  282F               	goto	u2_20
   387     002E                     u2_21:
   388     002E  2835               	goto	i1l604
   389     002F                     u2_20:
   390     002F                     i1l598:
   391                           
   392                           ;atividade10.c: 25:         estado_led_rd1 = ~estado_led_rd1;
   393     002F  01F0               	clrf	_contador_timer2	;volatile
   394     0030  01F1               	clrf	_contador_timer2+1	;volatile
   395     0031                     i1l600:
   396                           
   397                           ;atividade10.c: 26:         PORTD ^= 0x02;
   398     0031  0975               	comf	_estado_led_rd0,w	;volatile
   399     0032  00F5               	movwf	_estado_led_rd0	;volatile
   400     0033                     i1l602:
   401                           
   402                           ;atividade10.c: 27:     }
   403     0033  3001               	movlw	1
   404     0034  0688               	xorwf	8,f	;volatile
   405     0035                     i1l604:
   406                           
   407                           ;atividade10.c: 32:         if (PORTBbits.RB7 != estado_anterior_rb7) {
   408     0035  1C8B               	btfss	11,1	;volatile
   409     0036  2838               	goto	u3_21
   410     0037  2839               	goto	u3_20
   411     0038                     u3_21:
   412     0038  283E               	goto	i1l612
   413     0039                     u3_20:
   414     0039                     i1l606:
   415                           
   416                           ;atividade10.c: 33:             estado_led_rd2 = ~estado_led_rd2;
   417     0039  108B               	bcf	11,1	;volatile
   418     003A                     i1l608:
   419                           
   420                           ;atividade10.c: 34:             PORTD ^= 0x04;
   421     003A  0974               	comf	_estado_led_rd1,w	;volatile
   422     003B  00F4               	movwf	_estado_led_rd1	;volatile
   423     003C                     i1l610:
   424                           
   425                           ;atividade10.c: 35:             estado_anterior_rb7 = PORTBbits.RB7;
   426     003C  3002               	movlw	2
   427     003D  0688               	xorwf	8,f	;volatile
   428     003E                     i1l612:
   429                           
   430                           ;atividade10.c: 39: 
   431     003E  1C0B               	btfss	11,0	;volatile
   432     003F  2841               	goto	u4_21
   433     0040  2842               	goto	u4_20
   434     0041                     u4_21:
   435     0041  2853               	goto	i1l40
   436     0042                     u4_20:
   437     0042                     i1l614:
   438                           
   439                           ;atividade10.c: 40: void main(void) {
   440     0042  100B               	bcf	11,0	;volatile
   441     0043                     i1l616:
   442                           
   443                           ;atividade10.c: 41: 
   444     0043  0D06               	rlf	6,w	;volatile
   445     0044  0D06               	rlf	6,w	;volatile
   446     0045  3901               	andlw	1
   447     0046  0672               	xorwf	_estado_anterior_rb7,w	;volatile
   448     0047  1903               	skipnz
   449     0048  284A               	goto	u5_21
   450     0049  284B               	goto	u5_20
   451     004A                     u5_21:
   452     004A  2853               	goto	i1l40
   453     004B                     u5_20:
   454     004B                     i1l618:
   455                           
   456                           ;atividade10.c: 42:     TRISD = 0x00;
   457     004B  0973               	comf	_estado_led_rd2,w	;volatile
   458     004C  00F3               	movwf	_estado_led_rd2	;volatile
   459     004D                     i1l620:
   460                           
   461                           ;atividade10.c: 43:     TRISB = 0x81;
   462     004D  3004               	movlw	4
   463     004E  0688               	xorwf	8,f	;volatile
   464     004F                     i1l622:
   465                           
   466                           ;atividade10.c: 44:     PORTD = 0x00;
   467     004F  0D06               	rlf	6,w	;volatile
   468     0050  0D06               	rlf	6,w	;volatile
   469     0051  3901               	andlw	1
   470     0052  00F2               	movwf	_estado_anterior_rb7	;volatile
   471     0053                     i1l40:
   472     0053  0877               	movf	??_interrupcao+1,w
   473     0054  008A               	movwf	10
   474     0055  0E76               	swapf	??_interrupcao,w
   475     0056  0083               	movwf	3
   476     0057  0EFE               	swapf	btemp,f
   477     0058  0E7E               	swapf	btemp,w
   478     0059  0009               	retfie
   479     005A                     __end_of_interrupcao:
   480     0002                     ___latbits      equ	2
   481     007E                     btemp           set	126	;btemp
   482     007E                     wtemp0          set	126
   483                           
   484                           	psect	intentry
   485     0004                     __pintentry:	
   486                           ;incstack = 0
   487                           ; Regs used in _interrupcao: [wreg+status,2+status,0]
   488                           
   489     0004                     interrupt_function:
   490     007E                     saved_w         set	btemp
   491     0004  00FE               	movwf	btemp
   492     0005  0E03               	swapf	3,w
   493     0006  00F6               	movwf	??_interrupcao
   494     0007  080A               	movf	10,w
   495     0008  00F7               	movwf	??_interrupcao+1
   496     0009  120A  118A  2819   	ljmp	_interrupcao
   497                           
   498                           	psect	config
   499                           
   500                           ;Config register CONFIG @ 0x2007
   501                           ;	Oscillator Selection bits
   502                           ;	FOSC = HS, HS oscillator
   503                           ;	Watchdog Timer Enable bit
   504                           ;	WDTE = OFF, WDT disabled
   505                           ;	Power-up Timer Enable bit
   506                           ;	PWRTE = OFF, PWRT disabled
   507                           ;	FLASH Program Memory Code Protection bits
   508                           ;	CP = OFF, Code protection off
   509                           ;	Brown-out Reset Enable bit
   510                           ;	BOREN = 0x1, unprogrammed default
   511                           ;	Low Voltage In-Circuit Serial Programming Enable bit
   512                           ;	LVP = 0x1, unprogrammed default
   513                           ;	Data EE Memory Code Protection
   514                           ;	CPD = 0x1, unprogrammed default
   515                           ;	FLASH Program Memory Write Enable
   516                           ;	WRT = 0x1, unprogrammed default
   517                           ;	In-Circuit Debugger Mode bit
   518                           ;	DEBUG = 0x1, unprogrammed default
   519     2007                     	org	8199
   520     2007  3FFA               	dw	16378

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _interrupcao in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _interrupcao in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupcao in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupcao in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupcao in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _interrupcao                                          2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _interrupcao (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14      2       8     57.1%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK3               96      0       0      0.0%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       8      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Fri Jan 31 17:15:16 2025

                     l45 0073                       l46 0073                      l630 0066  
                    l632 0068                      l624 005A                      l634 006C  
                    l626 005D                      l636 006E                      l628 0062  
                    l638 0070                      _PR2 0092                     _PIE1 008C  
                   i1l40 0053                     u1_20 001F                     u1_21 001E  
                   u2_20 002F                     u2_21 002E                     u3_20 0039  
                   u3_21 0038                     u4_20 0042                     u4_21 0041  
                   u5_20 004B                     u5_21 004A                     _main 005A  
                   btemp 007E                     start 000C                    ?_main 0076  
                  _T2CON 0012                    i1l600 0031                    i1l610 003C  
                  i1l602 0033                    i1l620 004D                    i1l612 003E  
                  i1l604 0035                    i1l622 004F                    i1l614 0042  
                  i1l606 0039                    i1l616 0043                    i1l608 003A  
                  i1l618 004B                    i1l592 0019                    i1l594 001F  
                  i1l596 0020                    i1l598 002F                    _PORTD 0008  
                  _TRISB 0086                    _TRISD 0088          _contador_timer2 0070  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             ?_interrupcao 0076             __end_of_main 0077  
                 ??_main 0078                   _INTCON 000B                   saved_w 007E  
__end_of__initialization 0015           __pcstackCOMMON 0076               __pmaintext 005A  
             __pintentry 0004                  __ptext1 0019     end_of_initialization 0015  
              _PORTBbits 0006           _estado_led_rd0 0075           _estado_led_rd1 0074  
         _estado_led_rd2 0073      start_initialization 000F              __pbssCOMMON 0070  
              ___latbits 0002            ??_interrupcao 0076        interrupt_function 0004  
               _PIR1bits 000C      __end_of_interrupcao 005A              _interrupcao 0019  
             _INTCONbits 000B                 intlevel1 0000      _estado_anterior_rb7 0072  
