

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Tue Feb 04 15:35:56 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F877
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     8                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
     9                           	psect	intentry,global,class=CODE,space=0,delta=2
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12     0000                     
    13                           ; Generated 12/10/2023 GMT
    14                           ; 
    15                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution. Publication is not required when
    29                           ;        this file is used in an embedded application.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F877 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47     0004                     fsr             equ	4
    48     0004                     fsr0            equ	4
    49     0000                     indf            equ	0
    50     0000                     indf0           equ	0
    51     0002                     pc              equ	2
    52     0002                     pcl             equ	2
    53     000A                     pclath          equ	10
    54     0003                     status          equ	3
    55     0000                     INDF            equ	0	;# 
    56     0001                     TMR0            equ	1	;# 
    57     0002                     PCL             equ	2	;# 
    58     0003                     STATUS          equ	3	;# 
    59     0004                     FSR             equ	4	;# 
    60     0005                     PORTA           equ	5	;# 
    61     0006                     PORTB           equ	6	;# 
    62     0007                     PORTC           equ	7	;# 
    63     0008                     PORTD           equ	8	;# 
    64     0009                     PORTE           equ	9	;# 
    65     000A                     PCLATH          equ	10	;# 
    66     000B                     INTCON          equ	11	;# 
    67     000C                     PIR1            equ	12	;# 
    68     000D                     PIR2            equ	13	;# 
    69     000E                     TMR1            equ	14	;# 
    70     000E                     TMR1L           equ	14	;# 
    71     000F                     TMR1H           equ	15	;# 
    72     0010                     T1CON           equ	16	;# 
    73     0011                     TMR2            equ	17	;# 
    74     0012                     T2CON           equ	18	;# 
    75     0013                     SSPBUF          equ	19	;# 
    76     0014                     SSPCON          equ	20	;# 
    77     0015                     CCPR1           equ	21	;# 
    78     0015                     CCPR1L          equ	21	;# 
    79     0016                     CCPR1H          equ	22	;# 
    80     0017                     CCP1CON         equ	23	;# 
    81     0018                     RCSTA           equ	24	;# 
    82     0019                     TXREG           equ	25	;# 
    83     001A                     RCREG           equ	26	;# 
    84     001B                     CCPR2           equ	27	;# 
    85     001B                     CCPR2L          equ	27	;# 
    86     001C                     CCPR2H          equ	28	;# 
    87     001D                     CCP2CON         equ	29	;# 
    88     001E                     ADRESH          equ	30	;# 
    89     001F                     ADCON0          equ	31	;# 
    90     0081                     OPTION_REG      equ	129	;# 
    91     0085                     TRISA           equ	133	;# 
    92     0086                     TRISB           equ	134	;# 
    93     0087                     TRISC           equ	135	;# 
    94     0088                     TRISD           equ	136	;# 
    95     0089                     TRISE           equ	137	;# 
    96     008C                     PIE1            equ	140	;# 
    97     008D                     PIE2            equ	141	;# 
    98     008E                     PCON            equ	142	;# 
    99     0091                     SSPCON2         equ	145	;# 
   100     0092                     PR2             equ	146	;# 
   101     0093                     SSPADD          equ	147	;# 
   102     0094                     SSPSTAT         equ	148	;# 
   103     0098                     TXSTA           equ	152	;# 
   104     0099                     SPBRG           equ	153	;# 
   105     009E                     ADRESL          equ	158	;# 
   106     009F                     ADCON1          equ	159	;# 
   107     010C                     EEDATA          equ	268	;# 
   108     010D                     EEADR           equ	269	;# 
   109     010E                     EEDATH          equ	270	;# 
   110     010F                     EEADRH          equ	271	;# 
   111     018C                     EECON1          equ	396	;# 
   112     018D                     EECON2          equ	397	;# 
   113     0000                     INDF            equ	0	;# 
   114     0001                     TMR0            equ	1	;# 
   115     0002                     PCL             equ	2	;# 
   116     0003                     STATUS          equ	3	;# 
   117     0004                     FSR             equ	4	;# 
   118     0005                     PORTA           equ	5	;# 
   119     0006                     PORTB           equ	6	;# 
   120     0007                     PORTC           equ	7	;# 
   121     0008                     PORTD           equ	8	;# 
   122     0009                     PORTE           equ	9	;# 
   123     000A                     PCLATH          equ	10	;# 
   124     000B                     INTCON          equ	11	;# 
   125     000C                     PIR1            equ	12	;# 
   126     000D                     PIR2            equ	13	;# 
   127     000E                     TMR1            equ	14	;# 
   128     000E                     TMR1L           equ	14	;# 
   129     000F                     TMR1H           equ	15	;# 
   130     0010                     T1CON           equ	16	;# 
   131     0011                     TMR2            equ	17	;# 
   132     0012                     T2CON           equ	18	;# 
   133     0013                     SSPBUF          equ	19	;# 
   134     0014                     SSPCON          equ	20	;# 
   135     0015                     CCPR1           equ	21	;# 
   136     0015                     CCPR1L          equ	21	;# 
   137     0016                     CCPR1H          equ	22	;# 
   138     0017                     CCP1CON         equ	23	;# 
   139     0018                     RCSTA           equ	24	;# 
   140     0019                     TXREG           equ	25	;# 
   141     001A                     RCREG           equ	26	;# 
   142     001B                     CCPR2           equ	27	;# 
   143     001B                     CCPR2L          equ	27	;# 
   144     001C                     CCPR2H          equ	28	;# 
   145     001D                     CCP2CON         equ	29	;# 
   146     001E                     ADRESH          equ	30	;# 
   147     001F                     ADCON0          equ	31	;# 
   148     0081                     OPTION_REG      equ	129	;# 
   149     0085                     TRISA           equ	133	;# 
   150     0086                     TRISB           equ	134	;# 
   151     0087                     TRISC           equ	135	;# 
   152     0088                     TRISD           equ	136	;# 
   153     0089                     TRISE           equ	137	;# 
   154     008C                     PIE1            equ	140	;# 
   155     008D                     PIE2            equ	141	;# 
   156     008E                     PCON            equ	142	;# 
   157     0091                     SSPCON2         equ	145	;# 
   158     0092                     PR2             equ	146	;# 
   159     0093                     SSPADD          equ	147	;# 
   160     0094                     SSPSTAT         equ	148	;# 
   161     0098                     TXSTA           equ	152	;# 
   162     0099                     SPBRG           equ	153	;# 
   163     009E                     ADRESL          equ	158	;# 
   164     009F                     ADCON1          equ	159	;# 
   165     010C                     EEDATA          equ	268	;# 
   166     010D                     EEADR           equ	269	;# 
   167     010E                     EEDATH          equ	270	;# 
   168     010F                     EEADRH          equ	271	;# 
   169     018C                     EECON1          equ	396	;# 
   170     018D                     EECON2          equ	397	;# 
   171     000B                     _INTCON         set	11
   172     0012                     _T2CON          set	18
   173     0006                     _PORTBbits      set	6
   174     000B                     _INTCONbits     set	11
   175     0008                     _PORTD          set	8
   176     000C                     _PIR1bits       set	12
   177     0092                     _TMR2ON         set	146
   178     008C                     _PIE1           set	140
   179     0092                     _PR2            set	146
   180     0086                     _TRISB          set	134
   181     0088                     _TRISD          set	136
   182                           
   183                           	psect	cinit
   184     000F                     start_initialization:	
   185                           ; #config settings
   186                           
   187     000F                     __initialization:
   188                           
   189                           ; Clear objects allocated to COMMON
   190     000F  01F0               	clrf	__pbssCOMMON& (0+127)
   191     0010  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   192     0011  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   193     0012  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   194     0013  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   195     0014  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   196     0015                     end_of_initialization:	
   197                           ;End of C runtime variable initialization code
   198                           
   199     0015                     __end_of__initialization:
   200     0015  0183               	clrf	3
   201     0016  120A  118A  285A   	ljmp	_main	;jump to C main() function
   202                           
   203                           	psect	bssCOMMON
   204     0070                     __pbssCOMMON:
   205     0070                     _contador_timer2:
   206     0070                     	ds	2
   207     0072                     _estado_anterior_rb7:
   208     0072                     	ds	1
   209     0073                     _estado_led_rd2:
   210     0073                     	ds	1
   211     0074                     _estado_led_rd1:
   212     0074                     	ds	1
   213     0075                     _estado_led_rd0:
   214     0075                     	ds	1
   215                           
   216                           	psect	cstackCOMMON
   217     0076                     __pcstackCOMMON:
   218     0076                     ?_interrupcao:
   219     0076                     ?_main:	
   220                           ; 1 bytes @ 0x0
   221                           
   222     0076                     ??_interrupcao:	
   223                           ; 1 bytes @ 0x0
   224                           
   225                           
   226                           ; 1 bytes @ 0x0
   227     0076                     	ds	2
   228     0078                     ??_main:
   229                           
   230                           	psect	maintext
   231     005A                     __pmaintext:	
   232                           ; 1 bytes @ 0x2
   233 ;;
   234 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   235 ;;
   236 ;; *************** function _main *****************
   237 ;; Defined at:
   238 ;;		line 49 in file "atividade10.c"
   239 ;; Parameters:    Size  Location     Type
   240 ;;		None
   241 ;; Auto vars:     Size  Location     Type
   242 ;;		None
   243 ;; Return value:  Size  Location     Type
   244 ;;                  1    wreg      void 
   245 ;; Registers used:
   246 ;;		wreg, status,2, status,0
   247 ;; Tracked objects:
   248 ;;		On entry : B00/0
   249 ;;		On exit  : 0/0
   250 ;;		Unchanged: 0/0
   251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   252 ;;      Params:         0       0       0       0       0
   253 ;;      Locals:         0       0       0       0       0
   254 ;;      Temps:          0       0       0       0       0
   255 ;;      Totals:         0       0       0       0       0
   256 ;;Total ram usage:        0 bytes
   257 ;; Hardware stack levels required when called: 1
   258 ;; This function calls:
   259 ;;		Nothing
   260 ;; This function is called by:
   261 ;;		Startup code after reset
   262 ;; This function uses a non-reentrant model
   263 ;;
   264                           
   265     005A                     _main:	
   266                           ;psect for function _main
   267                           
   268     005A                     l626:	
   269                           ;incstack = 0
   270                           ; Regs used in _main: [wreg+status,2+status,0]
   271                           
   272                           
   273                           ;atividade10.c: 51: 
   274     005A  1683               	bsf	3,5	;RP0=1, select bank1
   275     005B  1303               	bcf	3,6	;RP1=0, select bank1
   276     005C  0188               	clrf	8	;volatile
   277     005D                     l628:
   278                           
   279                           ;atividade10.c: 52: 
   280     005D  3081               	movlw	129
   281     005E  0086               	movwf	6	;volatile
   282                           
   283                           ;atividade10.c: 53:     INTCON = 0b11011000;
   284     005F  1283               	bcf	3,5	;RP0=0, select bank0
   285     0060  1303               	bcf	3,6	;RP1=0, select bank0
   286     0061  0188               	clrf	8	;volatile
   287     0062                     l630:
   288                           
   289                           ;atividade10.c: 54:     PIE1 = 0b00000010;
   290     0062  0D06               	rlf	6,w	;volatile
   291     0063  0D06               	rlf	6,w	;volatile
   292     0064  3901               	andlw	1
   293     0065  00F2               	movwf	_estado_anterior_rb7	;volatile
   294     0066                     l632:
   295                           
   296                           ;atividade10.c: 57:     while (1);
   297     0066  1512               	bsf	18,2	;volatile
   298     0067                     l634:
   299                           
   300                           ;atividade10.c: 58: }
   301     0067  3007               	movlw	7
   302     0068  0092               	movwf	18	;volatile
   303     0069                     l636:
   304     0069  30FA               	movlw	250
   305     006A  1683               	bsf	3,5	;RP0=1, select bank1
   306     006B  1303               	bcf	3,6	;RP1=0, select bank1
   307     006C  0092               	movwf	18	;volatile
   308     006D                     l638:
   309     006D  30D8               	movlw	216
   310     006E  008B               	movwf	11	;volatile
   311     006F                     l640:
   312     006F  3002               	movlw	2
   313     0070  008C               	movwf	12	;volatile
   314     0071                     l642:
   315     0071  1283               	bcf	3,5	;RP0=0, select bank0
   316     0072  1303               	bcf	3,6	;RP1=0, select bank0
   317     0073  108C               	bcf	12,1	;volatile
   318     0074                     l47:
   319     0074                     l48:
   320     0074  2874               	goto	l47
   321     0075  120A  118A  280C   	ljmp	start
   322     0078                     __end_of_main:
   323                           
   324                           	psect	text1
   325     0019                     __ptext1:	
   326 ;; *************** function _interrupcao *****************
   327 ;; Defined at:
   328 ;;		line 19 in file "atividade10.c"
   329 ;; Parameters:    Size  Location     Type
   330 ;;		None
   331 ;; Auto vars:     Size  Location     Type
   332 ;;		None
   333 ;; Return value:  Size  Location     Type
   334 ;;                  1    wreg      void 
   335 ;; Registers used:
   336 ;;		wreg, status,2, status,0
   337 ;; Tracked objects:
   338 ;;		On entry : 0/0
   339 ;;		On exit  : 0/0
   340 ;;		Unchanged: 0/0
   341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   342 ;;      Params:         0       0       0       0       0
   343 ;;      Locals:         0       0       0       0       0
   344 ;;      Temps:          2       0       0       0       0
   345 ;;      Totals:         2       0       0       0       0
   346 ;;Total ram usage:        2 bytes
   347 ;; Hardware stack levels used: 1
   348 ;; This function calls:
   349 ;;		Nothing
   350 ;; This function is called by:
   351 ;;		Interrupt level 1
   352 ;; This function uses a non-reentrant model
   353 ;;
   354                           
   355     0019                     _interrupcao:	
   356                           ;psect for function _interrupcao
   357                           
   358     0019                     i1l594:
   359                           
   360                           ;atividade10.c: 21: 
   361     0019  1283               	bcf	3,5	;RP0=0, select bank0
   362     001A  1303               	bcf	3,6	;RP1=0, select bank0
   363     001B  1C8C               	btfss	12,1	;volatile
   364     001C  281E               	goto	u1_21
   365     001D  281F               	goto	u1_20
   366     001E                     u1_21:
   367     001E  2835               	goto	i1l606
   368     001F                     u1_20:
   369     001F                     i1l596:
   370                           
   371                           ;atividade10.c: 22: 
   372     001F  108C               	bcf	12,1	;volatile
   373     0020                     i1l598:
   374                           
   375                           ;atividade10.c: 23:     if (INTCONbits.INTF) {
   376     0020  3001               	movlw	1
   377     0021  07F0               	addwf	_contador_timer2,f	;volatile
   378     0022  1803               	skipnc
   379     0023  0AF1               	incf	_contador_timer2+1,f	;volatile
   380     0024  3000               	movlw	0
   381     0025  07F1               	addwf	_contador_timer2+1,f	;volatile
   382                           
   383                           ;atividade10.c: 24:         INTCONbits.INTF = 0;
   384     0026  3000               	movlw	0
   385     0027  0271               	subwf	_contador_timer2+1,w	;volatile
   386     0028  309C               	movlw	156
   387     0029  1903               	skipnz
   388     002A  0270               	subwf	_contador_timer2,w	;volatile
   389     002B  1C03               	skipc
   390     002C  282E               	goto	u2_21
   391     002D  282F               	goto	u2_20
   392     002E                     u2_21:
   393     002E  2835               	goto	i1l606
   394     002F                     u2_20:
   395     002F                     i1l600:
   396                           
   397                           ;atividade10.c: 25:         estado_led_rd1 = ~estado_led_rd1;
   398     002F  01F0               	clrf	_contador_timer2	;volatile
   399     0030  01F1               	clrf	_contador_timer2+1	;volatile
   400     0031                     i1l602:
   401                           
   402                           ;atividade10.c: 26:         PORTD ^= 0x02;
   403     0031  0975               	comf	_estado_led_rd0,w	;volatile
   404     0032  00F5               	movwf	_estado_led_rd0	;volatile
   405     0033                     i1l604:
   406                           
   407                           ;atividade10.c: 27:     }
   408     0033  3001               	movlw	1
   409     0034  0688               	xorwf	8,f	;volatile
   410     0035                     i1l606:
   411                           
   412                           ;atividade10.c: 32:         if (PORTBbits.RB7 != estado_anterior_rb7) {
   413     0035  1C8B               	btfss	11,1	;volatile
   414     0036  2838               	goto	u3_21
   415     0037  2839               	goto	u3_20
   416     0038                     u3_21:
   417     0038  283E               	goto	i1l614
   418     0039                     u3_20:
   419     0039                     i1l608:
   420                           
   421                           ;atividade10.c: 33:             estado_led_rd2 = ~estado_led_rd2;
   422     0039  108B               	bcf	11,1	;volatile
   423     003A                     i1l610:
   424                           
   425                           ;atividade10.c: 34:             PORTD ^= 0x04;
   426     003A  0974               	comf	_estado_led_rd1,w	;volatile
   427     003B  00F4               	movwf	_estado_led_rd1	;volatile
   428     003C                     i1l612:
   429                           
   430                           ;atividade10.c: 35:             estado_anterior_rb7 = PORTBbits.RB7;
   431     003C  3002               	movlw	2
   432     003D  0688               	xorwf	8,f	;volatile
   433     003E                     i1l614:
   434                           
   435                           ;atividade10.c: 39: 
   436     003E  1C0B               	btfss	11,0	;volatile
   437     003F  2841               	goto	u4_21
   438     0040  2842               	goto	u4_20
   439     0041                     u4_21:
   440     0041  2853               	goto	i1l42
   441     0042                     u4_20:
   442     0042                     i1l616:
   443                           
   444                           ;atividade10.c: 40: void main(void) {
   445     0042  100B               	bcf	11,0	;volatile
   446     0043                     i1l618:
   447                           
   448                           ;atividade10.c: 41: 
   449     0043  0D06               	rlf	6,w	;volatile
   450     0044  0D06               	rlf	6,w	;volatile
   451     0045  3901               	andlw	1
   452     0046  0672               	xorwf	_estado_anterior_rb7,w	;volatile
   453     0047  1903               	skipnz
   454     0048  284A               	goto	u5_21
   455     0049  284B               	goto	u5_20
   456     004A                     u5_21:
   457     004A  2853               	goto	i1l42
   458     004B                     u5_20:
   459     004B                     i1l620:
   460                           
   461                           ;atividade10.c: 42:     TRISD = 0x00;
   462     004B  0973               	comf	_estado_led_rd2,w	;volatile
   463     004C  00F3               	movwf	_estado_led_rd2	;volatile
   464     004D                     i1l622:
   465                           
   466                           ;atividade10.c: 43:     TRISB = 0x81;
   467     004D  3004               	movlw	4
   468     004E  0688               	xorwf	8,f	;volatile
   469     004F                     i1l624:
   470                           
   471                           ;atividade10.c: 44:     PORTD = 0x00;
   472     004F  0D06               	rlf	6,w	;volatile
   473     0050  0D06               	rlf	6,w	;volatile
   474     0051  3901               	andlw	1
   475     0052  00F2               	movwf	_estado_anterior_rb7	;volatile
   476     0053                     i1l42:
   477     0053  0877               	movf	??_interrupcao+1,w
   478     0054  008A               	movwf	10
   479     0055  0E76               	swapf	??_interrupcao,w
   480     0056  0083               	movwf	3
   481     0057  0EFE               	swapf	btemp,f
   482     0058  0E7E               	swapf	btemp,w
   483     0059  0009               	retfie
   484     005A                     __end_of_interrupcao:
   485     0002                     ___latbits      equ	2
   486     007E                     btemp           set	126	;btemp
   487     007E                     wtemp0          set	126
   488                           
   489                           	psect	intentry
   490     0004                     __pintentry:	
   491                           ;incstack = 0
   492                           ; Regs used in _interrupcao: [wreg+status,2+status,0]
   493                           
   494     0004                     interrupt_function:
   495     007E                     saved_w         set	btemp
   496     0004  00FE               	movwf	btemp
   497     0005  0E03               	swapf	3,w
   498     0006  00F6               	movwf	??_interrupcao
   499     0007  080A               	movf	10,w
   500     0008  00F7               	movwf	??_interrupcao+1
   501     0009  120A  118A  2819   	ljmp	_interrupcao
   502                           
   503                           	psect	config
   504                           
   505                           ;Config register CONFIG @ 0x2007
   506                           ;	Oscillator Selection bits
   507                           ;	FOSC = HS, HS oscillator
   508                           ;	Watchdog Timer Enable bit
   509                           ;	WDTE = OFF, WDT disabled
   510                           ;	Power-up Timer Enable bit
   511                           ;	PWRTE = OFF, PWRT disabled
   512                           ;	FLASH Program Memory Code Protection bits
   513                           ;	CP = OFF, Code protection off
   514                           ;	Brown-out Reset Enable bit
   515                           ;	BOREN = 0x1, unprogrammed default
   516                           ;	Low Voltage In-Circuit Serial Programming Enable bit
   517                           ;	LVP = 0x1, unprogrammed default
   518                           ;	Data EE Memory Code Protection
   519                           ;	CPD = 0x1, unprogrammed default
   520                           ;	FLASH Program Memory Write Enable
   521                           ;	WRT = 0x1, unprogrammed default
   522                           ;	In-Circuit Debugger Mode bit
   523                           ;	DEBUG = 0x1, unprogrammed default
   524     2007                     	org	8199
   525     2007  3FFA               	dw	16378

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _interrupcao in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _interrupcao in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupcao in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupcao in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupcao in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _interrupcao                                          2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _interrupcao (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14      2       8     57.1%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK3               96      0       0      0.0%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       8      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Tue Feb 04 15:35:56 2025

                     l47 0074                       l48 0074                      l630 0062  
                    l640 006F                      l632 0066                      l642 0071  
                    l634 0067                      l626 005A                      l636 0069  
                    l628 005D                      l638 006D                      _PR2 0092  
                   _PIE1 008C                     i1l42 0053                     u1_20 001F  
                   u1_21 001E                     u2_20 002F                     u2_21 002E  
                   u3_20 0039                     u3_21 0038                     u4_20 0042  
                   u4_21 0041                     u5_20 004B                     u5_21 004A  
                   _main 005A                     btemp 007E                     start 000C  
                  ?_main 0076                    _T2CON 0012                    i1l600 002F  
                  i1l610 003A                    i1l602 0031                    i1l620 004B  
                  i1l612 003C                    i1l604 0033                    i1l622 004D  
                  i1l614 003E                    i1l606 0035                    i1l624 004F  
                  i1l616 0042                    i1l608 0039                    i1l618 0043  
                  i1l594 0019                    i1l596 001F                    i1l598 0020  
                  _PORTD 0008                    _TRISB 0086                    _TRISD 0088  
        _contador_timer2 0070                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000F             ?_interrupcao 0076  
           __end_of_main 0078                   ??_main 0078                   _INTCON 000B  
                 _TMR2ON 0092                   saved_w 007E  __end_of__initialization 0015  
         __pcstackCOMMON 0076               __pmaintext 005A               __pintentry 0004  
                __ptext1 0019     end_of_initialization 0015                _PORTBbits 0006  
         _estado_led_rd0 0075           _estado_led_rd1 0074           _estado_led_rd2 0073  
    start_initialization 000F              __pbssCOMMON 0070                ___latbits 0002  
          ??_interrupcao 0076        interrupt_function 0004                 _PIR1bits 000C  
    __end_of_interrupcao 005A              _interrupcao 0019               _INTCONbits 000B  
               intlevel1 0000      _estado_anterior_rb7 0072  
