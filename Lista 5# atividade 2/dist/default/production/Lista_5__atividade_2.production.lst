

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Mon Nov 25 15:57:07 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F877
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12     0000                     
    13                           ; Generated 12/10/2023 GMT
    14                           ; 
    15                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution. Publication is not required when
    29                           ;        this file is used in an embedded application.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F877 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47     0004                     fsr             equ	4
    48     0004                     fsr0            equ	4
    49     0000                     indf            equ	0
    50     0000                     indf0           equ	0
    51     0002                     pc              equ	2
    52     0002                     pcl             equ	2
    53     000A                     pclath          equ	10
    54     0003                     status          equ	3
    55     0000                     INDF            equ	0	;# 
    56     0001                     TMR0            equ	1	;# 
    57     0002                     PCL             equ	2	;# 
    58     0003                     STATUS          equ	3	;# 
    59     0004                     FSR             equ	4	;# 
    60     0005                     PORTA           equ	5	;# 
    61     0006                     PORTB           equ	6	;# 
    62     0007                     PORTC           equ	7	;# 
    63     0008                     PORTD           equ	8	;# 
    64     0009                     PORTE           equ	9	;# 
    65     000A                     PCLATH          equ	10	;# 
    66     000B                     INTCON          equ	11	;# 
    67     000C                     PIR1            equ	12	;# 
    68     000D                     PIR2            equ	13	;# 
    69     000E                     TMR1            equ	14	;# 
    70     000E                     TMR1L           equ	14	;# 
    71     000F                     TMR1H           equ	15	;# 
    72     0010                     T1CON           equ	16	;# 
    73     0011                     TMR2            equ	17	;# 
    74     0012                     T2CON           equ	18	;# 
    75     0013                     SSPBUF          equ	19	;# 
    76     0014                     SSPCON          equ	20	;# 
    77     0015                     CCPR1           equ	21	;# 
    78     0015                     CCPR1L          equ	21	;# 
    79     0016                     CCPR1H          equ	22	;# 
    80     0017                     CCP1CON         equ	23	;# 
    81     0018                     RCSTA           equ	24	;# 
    82     0019                     TXREG           equ	25	;# 
    83     001A                     RCREG           equ	26	;# 
    84     001B                     CCPR2           equ	27	;# 
    85     001B                     CCPR2L          equ	27	;# 
    86     001C                     CCPR2H          equ	28	;# 
    87     001D                     CCP2CON         equ	29	;# 
    88     001E                     ADRESH          equ	30	;# 
    89     001F                     ADCON0          equ	31	;# 
    90     0081                     OPTION_REG      equ	129	;# 
    91     0085                     TRISA           equ	133	;# 
    92     0086                     TRISB           equ	134	;# 
    93     0087                     TRISC           equ	135	;# 
    94     0088                     TRISD           equ	136	;# 
    95     0089                     TRISE           equ	137	;# 
    96     008C                     PIE1            equ	140	;# 
    97     008D                     PIE2            equ	141	;# 
    98     008E                     PCON            equ	142	;# 
    99     0091                     SSPCON2         equ	145	;# 
   100     0092                     PR2             equ	146	;# 
   101     0093                     SSPADD          equ	147	;# 
   102     0094                     SSPSTAT         equ	148	;# 
   103     0098                     TXSTA           equ	152	;# 
   104     0099                     SPBRG           equ	153	;# 
   105     009E                     ADRESL          equ	158	;# 
   106     009F                     ADCON1          equ	159	;# 
   107     010C                     EEDATA          equ	268	;# 
   108     010D                     EEADR           equ	269	;# 
   109     010E                     EEDATH          equ	270	;# 
   110     010F                     EEADRH          equ	271	;# 
   111     018C                     EECON1          equ	396	;# 
   112     018D                     EECON2          equ	397	;# 
   113     0000                     INDF            equ	0	;# 
   114     0001                     TMR0            equ	1	;# 
   115     0002                     PCL             equ	2	;# 
   116     0003                     STATUS          equ	3	;# 
   117     0004                     FSR             equ	4	;# 
   118     0005                     PORTA           equ	5	;# 
   119     0006                     PORTB           equ	6	;# 
   120     0007                     PORTC           equ	7	;# 
   121     0008                     PORTD           equ	8	;# 
   122     0009                     PORTE           equ	9	;# 
   123     000A                     PCLATH          equ	10	;# 
   124     000B                     INTCON          equ	11	;# 
   125     000C                     PIR1            equ	12	;# 
   126     000D                     PIR2            equ	13	;# 
   127     000E                     TMR1            equ	14	;# 
   128     000E                     TMR1L           equ	14	;# 
   129     000F                     TMR1H           equ	15	;# 
   130     0010                     T1CON           equ	16	;# 
   131     0011                     TMR2            equ	17	;# 
   132     0012                     T2CON           equ	18	;# 
   133     0013                     SSPBUF          equ	19	;# 
   134     0014                     SSPCON          equ	20	;# 
   135     0015                     CCPR1           equ	21	;# 
   136     0015                     CCPR1L          equ	21	;# 
   137     0016                     CCPR1H          equ	22	;# 
   138     0017                     CCP1CON         equ	23	;# 
   139     0018                     RCSTA           equ	24	;# 
   140     0019                     TXREG           equ	25	;# 
   141     001A                     RCREG           equ	26	;# 
   142     001B                     CCPR2           equ	27	;# 
   143     001B                     CCPR2L          equ	27	;# 
   144     001C                     CCPR2H          equ	28	;# 
   145     001D                     CCP2CON         equ	29	;# 
   146     001E                     ADRESH          equ	30	;# 
   147     001F                     ADCON0          equ	31	;# 
   148     0081                     OPTION_REG      equ	129	;# 
   149     0085                     TRISA           equ	133	;# 
   150     0086                     TRISB           equ	134	;# 
   151     0087                     TRISC           equ	135	;# 
   152     0088                     TRISD           equ	136	;# 
   153     0089                     TRISE           equ	137	;# 
   154     008C                     PIE1            equ	140	;# 
   155     008D                     PIE2            equ	141	;# 
   156     008E                     PCON            equ	142	;# 
   157     0091                     SSPCON2         equ	145	;# 
   158     0092                     PR2             equ	146	;# 
   159     0093                     SSPADD          equ	147	;# 
   160     0094                     SSPSTAT         equ	148	;# 
   161     0098                     TXSTA           equ	152	;# 
   162     0099                     SPBRG           equ	153	;# 
   163     009E                     ADRESL          equ	158	;# 
   164     009F                     ADCON1          equ	159	;# 
   165     010C                     EEDATA          equ	268	;# 
   166     010D                     EEADR           equ	269	;# 
   167     010E                     EEDATH          equ	270	;# 
   168     010F                     EEADRH          equ	271	;# 
   169     018C                     EECON1          equ	396	;# 
   170     018D                     EECON2          equ	397	;# 
   171                           
   172                           	psect	idataCOMMON
   173     0773                     __pidataCOMMON:
   174                           
   175                           ;initializer for _stepSequence
   176     0773  3409               	retlw	9
   177     0774  340C               	retlw	12
   178     0775  3406               	retlw	6
   179     0776  3403               	retlw	3
   180     0006                     _PORTBbits      set	6
   181     0008                     _PORTD          set	8
   182     0086                     _TRISB          set	134
   183     0088                     _TRISD          set	136
   184                           
   185                           	psect	cinit
   186     07E2                     start_initialization:	
   187                           ; #config settings
   188                           
   189     07E2                     __initialization:
   190                           
   191                           ; Initialize objects allocated to COMMON
   192     07E2  120A  118A  2773  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   193     07E7  00F6               	movwf	__pdataCOMMON& (0+127)
   194     07E8  120A  118A  2774  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   195     07ED  00F7               	movwf	(__pdataCOMMON+1)& (0+127)
   196     07EE  120A  118A  2775  120A  118A  	fcall	__pidataCOMMON+2	;fetch initializer
   197     07F3  00F8               	movwf	(__pdataCOMMON+2)& (0+127)
   198     07F4  120A  118A  2776  120A  118A  	fcall	__pidataCOMMON+3	;fetch initializer
   199     07F9  00F9               	movwf	(__pdataCOMMON+3)& (0+127)
   200                           
   201                           ; Clear objects allocated to COMMON
   202     07FA  01FA               	clrf	__pbssCOMMON& (0+127)
   203     07FB  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   204     07FC                     end_of_initialization:	
   205                           ;End of C runtime variable initialization code
   206                           
   207     07FC                     __end_of__initialization:
   208     07FC  0183               	clrf	3
   209     07FD  120A  118A  2F77   	ljmp	_main	;jump to C main() function
   210                           
   211                           	psect	bssCOMMON
   212     007A                     __pbssCOMMON:
   213     007A                     _sentido:
   214     007A                     	ds	1
   215     007B                     _stepIndex:
   216     007B                     	ds	1
   217                           
   218                           	psect	dataCOMMON
   219     0076                     __pdataCOMMON:
   220     0076                     _stepSequence:
   221     0076                     	ds	4
   222                           
   223                           	psect	cstackCOMMON
   224     0070                     __pcstackCOMMON:
   225     0070                     ?_main:
   226     0070                     ??_main:	
   227                           ; 1 bytes @ 0x0
   228                           
   229                           
   230                           ; 1 bytes @ 0x0
   231     0070                     	ds	3
   232     0073                     _main$69:
   233                           
   234                           ; 2 bytes @ 0x3
   235     0073                     	ds	2
   236     0075                     main@botaoAnterior:
   237                           
   238                           ; 1 bytes @ 0x5
   239     0075                     	ds	1
   240                           
   241                           	psect	maintext
   242     0777                     __pmaintext:	
   243 ;;
   244 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   245 ;;
   246 ;; *************** function _main *****************
   247 ;; Defined at:
   248 ;;		line 19 in file "codigo.c"
   249 ;; Parameters:    Size  Location     Type
   250 ;;		None
   251 ;; Auto vars:     Size  Location     Type
   252 ;;  botaoAnterio    1    5[COMMON] unsigned char 
   253 ;; Return value:  Size  Location     Type
   254 ;;                  1    wreg      void 
   255 ;; Registers used:
   256 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   257 ;; Tracked objects:
   258 ;;		On entry : B00/0
   259 ;;		On exit  : 0/0
   260 ;;		Unchanged: 0/0
   261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   262 ;;      Params:         0       0       0       0       0
   263 ;;      Locals:         3       0       0       0       0
   264 ;;      Temps:          3       0       0       0       0
   265 ;;      Totals:         6       0       0       0       0
   266 ;;Total ram usage:        6 bytes
   267 ;; This function calls:
   268 ;;		Nothing
   269 ;; This function is called by:
   270 ;;		Startup code after reset
   271 ;; This function uses a non-reentrant model
   272 ;;
   273                           
   274     0777                     _main:	
   275                           ;psect for function _main
   276                           
   277     0777                     l609:	
   278                           ;incstack = 0
   279                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0]
   280                           
   281                           
   282                           ;codigo.c: 21:         }
   283     0777  1683               	bsf	3,5	;RP0=1, select bank1
   284     0778  1303               	bcf	3,6	;RP1=0, select bank1
   285     0779  0188               	clrf	8	;volatile
   286     077A                     l611:
   287                           
   288                           ;codigo.c: 22:         botaoAnterior = PORTBbits.RB0;
   289     077A  30FF               	movlw	255
   290     077B  0086               	movwf	6	;volatile
   291                           
   292                           ;codigo.c: 23: 
   293     077C  1283               	bcf	3,5	;RP0=0, select bank0
   294     077D  1303               	bcf	3,6	;RP1=0, select bank0
   295     077E  0188               	clrf	8	;volatile
   296     077F                     l613:
   297                           
   298                           ;codigo.c: 24: 
   299     077F  3001               	movlw	1
   300     0780  00F5               	movwf	main@botaoAnterior
   301     0781                     l615:
   302                           
   303                           ;codigo.c: 29:         }
   304     0781  1283               	bcf	3,5	;RP0=0, select bank0
   305     0782  1303               	bcf	3,6	;RP1=0, select bank0
   306     0783  1806               	btfsc	6,0	;volatile
   307     0784  2F86               	goto	u91
   308     0785  2F87               	goto	u90
   309     0786                     u91:
   310     0786  2FAB               	goto	l625
   311     0787                     u90:
   312     0787                     l617:
   313     0787  0375               	decf	main@botaoAnterior,w
   314     0788  1D03               	btfss	3,2
   315     0789  2F8B               	goto	u101
   316     078A  2F8C               	goto	u100
   317     078B                     u101:
   318     078B  2FAB               	goto	l625
   319     078C                     u100:
   320     078C                     l619:
   321                           
   322                           ;codigo.c: 30: 
   323     078C  3002               	movlw	2
   324     078D  00F2               	movwf	??_main+2
   325     078E  3045               	movlw	69
   326     078F  00F1               	movwf	??_main+1
   327     0790  30A9               	movlw	169
   328     0791  00F0               	movwf	??_main
   329     0792                     u177:
   330     0792  0BF0               	decfsz	??_main,f
   331     0793  2F92               	goto	u177
   332     0794  0BF1               	decfsz	??_main+1,f
   333     0795  2F92               	goto	u177
   334     0796  0BF2               	decfsz	??_main+2,f
   335     0797  2F92               	goto	u177
   336     0798  2F99               	nop2
   337     0799                     l621:
   338                           
   339                           ;codigo.c: 31:         PORTD = stepSequence[stepIndex];
   340     0799  1283               	bcf	3,5	;RP0=0, select bank0
   341     079A  1303               	bcf	3,6	;RP1=0, select bank0
   342     079B  1806               	btfsc	6,0	;volatile
   343     079C  2F9E               	goto	u111
   344     079D  2F9F               	goto	u110
   345     079E                     u111:
   346     079E  2FAB               	goto	l625
   347     079F                     u110:
   348     079F                     l623:
   349                           
   350                           ;codigo.c: 32:         _delay((unsigned long)((200)*(20000000/4000.0)));
   351     079F  087A               	movf	_sentido,w
   352     07A0  1903               	btfsc	3,2
   353     07A1  2FA3               	goto	u121
   354     07A2  2FA5               	goto	u120
   355     07A3                     u121:
   356     07A3  3001               	movlw	1
   357     07A4  2FA6               	goto	u130
   358     07A5                     u120:
   359     07A5  3000               	movlw	0
   360     07A6                     u130:
   361     07A6  00FA               	movwf	_sentido
   362     07A7                     l24:	
   363                           ;codigo.c: 33:     }
   364                           
   365     07A7  1C06               	btfss	6,0	;volatile
   366     07A8  2FAA               	goto	u141
   367     07A9  2FAB               	goto	u140
   368     07AA                     u141:
   369     07AA  2FA7               	goto	l24
   370     07AB                     u140:
   371     07AB                     l625:
   372     07AB  0806               	movf	6,w	;volatile
   373     07AC  3901               	andlw	1
   374     07AD  00F5               	movwf	main@botaoAnterior
   375     07AE  037A               	decf	_sentido,w
   376     07AF  1D03               	btfss	3,2
   377     07B0  2FB2               	goto	u151
   378     07B1  2FB3               	goto	u150
   379     07B2                     u151:
   380     07B2  2FB9               	goto	l629
   381     07B3                     u150:
   382     07B3                     l627:
   383     07B3  087B               	movf	_stepIndex,w
   384     07B4  3E01               	addlw	1
   385     07B5  00FB               	movwf	_stepIndex
   386     07B6  3003               	movlw	3
   387     07B7  05FB               	andwf	_stepIndex,f
   388     07B8  2FCC               	goto	l635
   389     07B9                     l629:
   390     07B9  087B               	movf	_stepIndex,w
   391     07BA  1903               	btfsc	3,2
   392     07BB  2FBD               	goto	u161
   393     07BC  2FBE               	goto	u160
   394     07BD                     u161:
   395     07BD  2FC6               	goto	l633
   396     07BE                     u160:
   397     07BE                     l631:
   398     07BE  087B               	movf	_stepIndex,w
   399     07BF  3EFF               	addlw	255
   400     07C0  00F3               	movwf	_main$69
   401     07C1  30FF               	movlw	255
   402     07C2  1803               	skipnc
   403     07C3  3000               	movlw	0
   404     07C4  00F4               	movwf	_main$69+1
   405     07C5  2FCA               	goto	l32
   406     07C6                     l633:
   407     07C6  3003               	movlw	3
   408     07C7  00F3               	movwf	_main$69
   409     07C8  3000               	movlw	0
   410     07C9  00F4               	movwf	_main$69+1
   411     07CA                     l32:
   412     07CA  0873               	movf	_main$69,w
   413     07CB  00FB               	movwf	_stepIndex
   414     07CC                     l635:
   415     07CC  087B               	movf	_stepIndex,w
   416     07CD  3E76               	addlw	(low (_stepSequence| 0))& (0+255)
   417     07CE  0084               	movwf	4
   418     07CF  0800               	movf	0,w
   419     07D0  0088               	movwf	8	;volatile
   420     07D1                     l637:
   421     07D1  3006               	movlw	6
   422     07D2  00F2               	movwf	??_main+2
   423     07D3  3013               	movlw	19
   424     07D4  00F1               	movwf	??_main+1
   425     07D5  30AD               	movlw	173
   426     07D6  00F0               	movwf	??_main
   427     07D7                     u187:
   428     07D7  0BF0               	decfsz	??_main,f
   429     07D8  2FD7               	goto	u187
   430     07D9  0BF1               	decfsz	??_main+1,f
   431     07DA  2FD7               	goto	u187
   432     07DB  0BF2               	decfsz	??_main+2,f
   433     07DC  2FD7               	goto	u187
   434     07DD  2FDE               	nop2
   435     07DE  2F81               	goto	l615
   436     07DF  120A  118A  2800   	ljmp	start
   437     07E2                     __end_of_main:
   438     0002                     ___latbits      equ	2
   439     007E                     btemp           set	126	;btemp
   440     007E                     wtemp0          set	126
   441                           
   442                           	psect	config
   443                           
   444                           ;Config register CONFIG @ 0x2007
   445                           ;	Oscillator Selection bits
   446                           ;	FOSC = HS, HS oscillator
   447                           ;	Watchdog Timer Enable bit
   448                           ;	WDTE = OFF, WDT disabled
   449                           ;	Power-up Timer Enable bit
   450                           ;	PWRTE = OFF, PWRT disabled
   451                           ;	FLASH Program Memory Code Protection bits
   452                           ;	CP = OFF, Code protection off
   453                           ;	Brown-out Reset Enable bit
   454                           ;	BOREN = OFF, BOR disabled
   455                           ;	Low Voltage In-Circuit Serial Programming Enable bit
   456                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   457                           ;	Data EE Memory Code Protection
   458                           ;	CPD = OFF, Code Protection off
   459                           ;	FLASH Program Memory Write Enable
   460                           ;	WRT = OFF, Unprotected program memory may not be written to by EECON control
   461                           ;	In-Circuit Debugger Mode bit
   462                           ;	DEBUG = 0x1, unprogrammed default
   463     2007                     	org	8199
   464     2007  3D3A               	dw	15674

Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0      48
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BANK3               96      0       0      0.0%
BITBANK3            96      0       0      0.0%
BANK2               96      0       0      0.0%
BITBANK2            96      0       0      0.0%
BANK1               80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BANK0               80      0       0      0.0%
BITBANK0            80      0       0      0.0%
COMMON              14      6      12     85.7%
BITCOMMON           14      0       0      0.0%
DATA                 0      0      12      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Mon Nov 25 15:57:07 2024

                     l32 07CA                       l24 07A7                       u90 0787  
                     u91 0786             _stepSequence 0076                      l611 077A  
                    l621 0799                      l613 077F                      l631 07BE  
                    l623 079F                      l615 0781                      l633 07C6  
                    l617 0787                      l625 07AB                      l609 0777  
                    l635 07CC                      l627 07B3                      l619 078C  
                    l637 07D1                      l629 07B9                      u100 078C  
                    u101 078B                      u110 079F                      u111 079E  
                    u120 07A5                      u121 07A3                      u130 07A6  
                    u140 07AB                      u141 07AA                      u150 07B3  
                    u151 07B2                      u160 07BE                      u161 07BD  
                    u177 0792                      u187 07D7                      fsr0 0004  
                    indf 0000                     _main 0777                     btemp 007E  
                   start 0000                    ?_main 0070                    _PORTD 0008  
                  _TRISB 0086                    _TRISD 0088                    status 0003  
                  wtemp0 007E          __initialization 07E2             __end_of_main 07E2  
                 ??_main 0070             __pdataCOMMON 0076  __end_of__initialization 07FC  
         __pcstackCOMMON 0070               __pmaintext 0777                  _main$69 0073  
                _sentido 007A     end_of_initialization 07FC                _PORTBbits 0006  
          __pidataCOMMON 0773      start_initialization 07E2        main@botaoAnterior 0075  
            __pbssCOMMON 007A                ___latbits 0002                _stepIndex 007B  
