

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Tue Jan 28 23:14:16 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F877
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     7                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    10                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13     0000                     
    14                           ; Generated 12/10/2023 GMT
    15                           ; 
    16                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48     0004                     fsr             equ	4
    49     0004                     fsr0            equ	4
    50     0000                     indf            equ	0
    51     0000                     indf0           equ	0
    52     0002                     pc              equ	2
    53     0002                     pcl             equ	2
    54     000A                     pclath          equ	10
    55     0003                     status          equ	3
    56     0000                     INDF            equ	0	;# 
    57     0001                     TMR0            equ	1	;# 
    58     0002                     PCL             equ	2	;# 
    59     0003                     STATUS          equ	3	;# 
    60     0004                     FSR             equ	4	;# 
    61     0005                     PORTA           equ	5	;# 
    62     0006                     PORTB           equ	6	;# 
    63     0007                     PORTC           equ	7	;# 
    64     0008                     PORTD           equ	8	;# 
    65     0009                     PORTE           equ	9	;# 
    66     000A                     PCLATH          equ	10	;# 
    67     000B                     INTCON          equ	11	;# 
    68     000C                     PIR1            equ	12	;# 
    69     000D                     PIR2            equ	13	;# 
    70     000E                     TMR1            equ	14	;# 
    71     000E                     TMR1L           equ	14	;# 
    72     000F                     TMR1H           equ	15	;# 
    73     0010                     T1CON           equ	16	;# 
    74     0011                     TMR2            equ	17	;# 
    75     0012                     T2CON           equ	18	;# 
    76     0013                     SSPBUF          equ	19	;# 
    77     0014                     SSPCON          equ	20	;# 
    78     0015                     CCPR1           equ	21	;# 
    79     0015                     CCPR1L          equ	21	;# 
    80     0016                     CCPR1H          equ	22	;# 
    81     0017                     CCP1CON         equ	23	;# 
    82     0018                     RCSTA           equ	24	;# 
    83     0019                     TXREG           equ	25	;# 
    84     001A                     RCREG           equ	26	;# 
    85     001B                     CCPR2           equ	27	;# 
    86     001B                     CCPR2L          equ	27	;# 
    87     001C                     CCPR2H          equ	28	;# 
    88     001D                     CCP2CON         equ	29	;# 
    89     001E                     ADRESH          equ	30	;# 
    90     001F                     ADCON0          equ	31	;# 
    91     0081                     OPTION_REG      equ	129	;# 
    92     0085                     TRISA           equ	133	;# 
    93     0086                     TRISB           equ	134	;# 
    94     0087                     TRISC           equ	135	;# 
    95     0088                     TRISD           equ	136	;# 
    96     0089                     TRISE           equ	137	;# 
    97     008C                     PIE1            equ	140	;# 
    98     008D                     PIE2            equ	141	;# 
    99     008E                     PCON            equ	142	;# 
   100     0091                     SSPCON2         equ	145	;# 
   101     0092                     PR2             equ	146	;# 
   102     0093                     SSPADD          equ	147	;# 
   103     0094                     SSPSTAT         equ	148	;# 
   104     0098                     TXSTA           equ	152	;# 
   105     0099                     SPBRG           equ	153	;# 
   106     009E                     ADRESL          equ	158	;# 
   107     009F                     ADCON1          equ	159	;# 
   108     010C                     EEDATA          equ	268	;# 
   109     010D                     EEADR           equ	269	;# 
   110     010E                     EEDATH          equ	270	;# 
   111     010F                     EEADRH          equ	271	;# 
   112     018C                     EECON1          equ	396	;# 
   113     018D                     EECON2          equ	397	;# 
   114     0000                     INDF            equ	0	;# 
   115     0001                     TMR0            equ	1	;# 
   116     0002                     PCL             equ	2	;# 
   117     0003                     STATUS          equ	3	;# 
   118     0004                     FSR             equ	4	;# 
   119     0005                     PORTA           equ	5	;# 
   120     0006                     PORTB           equ	6	;# 
   121     0007                     PORTC           equ	7	;# 
   122     0008                     PORTD           equ	8	;# 
   123     0009                     PORTE           equ	9	;# 
   124     000A                     PCLATH          equ	10	;# 
   125     000B                     INTCON          equ	11	;# 
   126     000C                     PIR1            equ	12	;# 
   127     000D                     PIR2            equ	13	;# 
   128     000E                     TMR1            equ	14	;# 
   129     000E                     TMR1L           equ	14	;# 
   130     000F                     TMR1H           equ	15	;# 
   131     0010                     T1CON           equ	16	;# 
   132     0011                     TMR2            equ	17	;# 
   133     0012                     T2CON           equ	18	;# 
   134     0013                     SSPBUF          equ	19	;# 
   135     0014                     SSPCON          equ	20	;# 
   136     0015                     CCPR1           equ	21	;# 
   137     0015                     CCPR1L          equ	21	;# 
   138     0016                     CCPR1H          equ	22	;# 
   139     0017                     CCP1CON         equ	23	;# 
   140     0018                     RCSTA           equ	24	;# 
   141     0019                     TXREG           equ	25	;# 
   142     001A                     RCREG           equ	26	;# 
   143     001B                     CCPR2           equ	27	;# 
   144     001B                     CCPR2L          equ	27	;# 
   145     001C                     CCPR2H          equ	28	;# 
   146     001D                     CCP2CON         equ	29	;# 
   147     001E                     ADRESH          equ	30	;# 
   148     001F                     ADCON0          equ	31	;# 
   149     0081                     OPTION_REG      equ	129	;# 
   150     0085                     TRISA           equ	133	;# 
   151     0086                     TRISB           equ	134	;# 
   152     0087                     TRISC           equ	135	;# 
   153     0088                     TRISD           equ	136	;# 
   154     0089                     TRISE           equ	137	;# 
   155     008C                     PIE1            equ	140	;# 
   156     008D                     PIE2            equ	141	;# 
   157     008E                     PCON            equ	142	;# 
   158     0091                     SSPCON2         equ	145	;# 
   159     0092                     PR2             equ	146	;# 
   160     0093                     SSPADD          equ	147	;# 
   161     0094                     SSPSTAT         equ	148	;# 
   162     0098                     TXSTA           equ	152	;# 
   163     0099                     SPBRG           equ	153	;# 
   164     009E                     ADRESL          equ	158	;# 
   165     009F                     ADCON1          equ	159	;# 
   166     010C                     EEDATA          equ	268	;# 
   167     010D                     EEADR           equ	269	;# 
   168     010E                     EEDATH          equ	270	;# 
   169     010F                     EEADRH          equ	271	;# 
   170     018C                     EECON1          equ	396	;# 
   171     018D                     EECON2          equ	397	;# 
   172     0017                     _CCP1CONbits    set	23
   173     0015                     _CCPR1L         set	21
   174     0012                     _T2CON          set	18
   175     0017                     _CCP1CON        set	23
   176     001E                     _ADRESH         set	30
   177     001F                     _ADCON0bits     set	31
   178     001F                     _ADCON0         set	31
   179     0087                     _TRISCbits      set	135
   180     0085                     _TRISA          set	133
   181     0092                     _PR2            set	146
   182     009E                     _ADRESL         set	158
   183     009F                     _ADCON1         set	159
   184                           
   185                           	psect	cinit
   186     07FC                     start_initialization:	
   187                           ; #config settings
   188                           
   189     07FC                     __initialization:
   190     07FC                     end_of_initialization:	
   191                           ;End of C runtime variable initialization code
   192                           
   193     07FC                     __end_of__initialization:
   194     07FC  0183               	clrf	3
   195     07FD  120A  118A  2FC7   	ljmp	_main	;jump to C main() function
   196                           
   197                           	psect	cstackCOMMON
   198     0070                     __pcstackCOMMON:
   199     0070                     ?_inicializar_ADC:
   200     0070                     ?_configurar_PWM:	
   201                           ; 1 bytes @ 0x0
   202                           
   203     0070                     ?_ajustar_duty_PWM:	
   204                           ; 1 bytes @ 0x0
   205                           
   206     0070                     ?_main:	
   207                           ; 1 bytes @ 0x0
   208                           
   209     0070                     ?_realizar_leitura_ADC:	
   210                           ; 1 bytes @ 0x0
   211                           
   212     0070                     ajustar_duty_PWM@valor:	
   213                           ; 2 bytes @ 0x0
   214                           
   215     0070                     ??_inicializar_ADC:	
   216                           ; 2 bytes @ 0x0
   217                           
   218     0070                     ??_configurar_PWM:	
   219                           ; 1 bytes @ 0x0
   220                           
   221                           
   222                           ; 1 bytes @ 0x0
   223     0070                     	ds	2
   224     0072                     ??_realizar_leitura_ADC:
   225     0072                     ??_ajustar_duty_PWM:	
   226                           ; 1 bytes @ 0x2
   227                           
   228                           
   229                           ; 1 bytes @ 0x2
   230     0072                     	ds	2
   231     0074                     realizar_leitura_ADC@canal:
   232                           
   233                           ; 1 bytes @ 0x4
   234     0074                     	ds	1
   235     0075                     ??_main:
   236                           
   237                           ; 1 bytes @ 0x5
   238     0075                     	ds	2
   239     0077                     main@leitura_ADC:
   240                           
   241                           ; 2 bytes @ 0x7
   242     0077                     	ds	2
   243     0079                     main@duty_PWM:
   244                           
   245                           ; 2 bytes @ 0x9
   246     0079                     	ds	2
   247                           
   248                           	psect	maintext
   249     07C7                     __pmaintext:	
   250 ;;
   251 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   252 ;;
   253 ;; *************** function _main *****************
   254 ;; Defined at:
   255 ;;		line 43 in file "atividade7.c"
   256 ;; Parameters:    Size  Location     Type
   257 ;;		None
   258 ;; Auto vars:     Size  Location     Type
   259 ;;  duty_PWM        2    9[COMMON] unsigned int 
   260 ;;  leitura_ADC     2    7[COMMON] unsigned int 
   261 ;; Return value:  Size  Location     Type
   262 ;;                  1    wreg      void 
   263 ;; Registers used:
   264 ;;		wreg, status,2, status,0, pclath, cstack
   265 ;; Tracked objects:
   266 ;;		On entry : B00/0
   267 ;;		On exit  : 0/0
   268 ;;		Unchanged: 0/0
   269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   270 ;;      Params:         0       0       0       0       0
   271 ;;      Locals:         4       0       0       0       0
   272 ;;      Temps:          2       0       0       0       0
   273 ;;      Totals:         6       0       0       0       0
   274 ;;Total ram usage:        6 bytes
   275 ;; Hardware stack levels required when called: 1
   276 ;; This function calls:
   277 ;;		_ajustar_duty_PWM
   278 ;;		_configurar_PWM
   279 ;;		_inicializar_ADC
   280 ;;		_realizar_leitura_ADC
   281 ;; This function is called by:
   282 ;;		Startup code after reset
   283 ;; This function uses a non-reentrant model
   284 ;;
   285                           
   286     07C7                     _main:	
   287                           ;psect for function _main
   288                           
   289     07C7                     l645:	
   290                           ;incstack = 0
   291                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   292                           
   293                           
   294                           ;atividade7.c: 44:     while (1) {;atividade7.c: 47:         ajustar_duty_PWM(duty_PWM);
   295     07C7  30FF               	movlw	255
   296     07C8  1683               	bsf	3,5	;RP0=1, select bank1
   297     07C9  1303               	bcf	3,6	;RP1=0, select bank1
   298     07CA  0085               	movwf	5	;volatile
   299                           
   300                           ;atividade7.c: 48:         _delay((unsigned long)((5)*(16000000/4000.0)));
   301     07CB  1107               	bcf	7,2	;volatile
   302     07CC                     l647:
   303                           
   304                           ;atividade7.c: 50: }
   305     07CC  120A  118A  275C  120A  118A  	fcall	_inicializar_ADC
   306     07D1  120A  118A  2765  120A  118A  	fcall	_configurar_PWM
   307     07D6                     l649:
   308     07D6  3003               	movlw	3
   309     07D7  120A  118A  2773  120A  118A  	fcall	_realizar_leitura_ADC
   310     07DC  0871               	movf	?_realizar_leitura_ADC+1,w
   311     07DD  00F8               	movwf	main@leitura_ADC+1
   312     07DE  0870               	movf	?_realizar_leitura_ADC,w
   313     07DF  00F7               	movwf	main@leitura_ADC
   314     07E0  30FF               	movlw	255
   315     07E1  0577               	andwf	main@leitura_ADC,w
   316     07E2  00F9               	movwf	main@duty_PWM
   317     07E3  3003               	movlw	3
   318     07E4  0578               	andwf	main@leitura_ADC+1,w
   319     07E5  00FA               	movwf	main@duty_PWM+1
   320     07E6                     l651:
   321     07E6  087A               	movf	main@duty_PWM+1,w
   322     07E7  00F1               	movwf	ajustar_duty_PWM@valor+1
   323     07E8  0879               	movf	main@duty_PWM,w
   324     07E9  00F0               	movwf	ajustar_duty_PWM@valor
   325     07EA  120A  118A  279A  120A  118A  	fcall	_ajustar_duty_PWM
   326     07EF                     l653:
   327     07EF  301A               	movlw	26
   328     07F0  00F6               	movwf	??_main+1
   329     07F1  30F8               	movlw	248
   330     07F2  00F5               	movwf	??_main
   331     07F3                     u57:
   332     07F3  0BF5               	decfsz	??_main,f
   333     07F4  2FF3               	goto	u57
   334     07F5  0BF6               	decfsz	??_main+1,f
   335     07F6  2FF3               	goto	u57
   336     07F7  0000               	nop
   337     07F8  2FD6               	goto	l649
   338     07F9  120A  118A  2800   	ljmp	start
   339     07FC                     __end_of_main:
   340                           
   341                           	psect	text1
   342     0773                     __ptext1:	
   343 ;; *************** function _realizar_leitura_ADC *****************
   344 ;; Defined at:
   345 ;;		line 18 in file "atividade7.c"
   346 ;; Parameters:    Size  Location     Type
   347 ;;  canal           1    wreg     unsigned char 
   348 ;; Auto vars:     Size  Location     Type
   349 ;;  canal           1    4[COMMON] unsigned char 
   350 ;; Return value:  Size  Location     Type
   351 ;;                  2    0[COMMON] unsigned int 
   352 ;; Registers used:
   353 ;;		wreg, status,2, status,0
   354 ;; Tracked objects:
   355 ;;		On entry : 0/0
   356 ;;		On exit  : 0/0
   357 ;;		Unchanged: 0/0
   358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   359 ;;      Params:         2       0       0       0       0
   360 ;;      Locals:         1       0       0       0       0
   361 ;;      Temps:          2       0       0       0       0
   362 ;;      Totals:         5       0       0       0       0
   363 ;;Total ram usage:        5 bytes
   364 ;; Hardware stack levels used: 1
   365 ;; This function calls:
   366 ;;		Nothing
   367 ;; This function is called by:
   368 ;;		_main
   369 ;; This function uses a non-reentrant model
   370 ;;
   371                           
   372     0773                     _realizar_leitura_ADC:	
   373                           ;psect for function _realizar_leitura_ADC
   374                           
   375                           
   376                           ;incstack = 0
   377                           ; Regs used in _realizar_leitura_ADC: [wreg+status,2+status,0]
   378                           ;realizar_leitura_ADC@canal stored from wreg
   379     0773  00F4               	movwf	realizar_leitura_ADC@canal
   380     0774                     l627:
   381                           
   382                           ;atividade7.c: 19: void configurar_PWM() {
   383     0774  30C5               	movlw	197
   384     0775  1283               	bcf	3,5	;RP0=0, select bank0
   385     0776  1303               	bcf	3,6	;RP1=0, select bank0
   386     0777  059F               	andwf	31,f	;volatile
   387                           
   388                           ;atividade7.c: 20:     CCP1CON = 0b00001100;
   389     0778  0874               	movf	realizar_leitura_ADC@canal,w	;volatile
   390     0779  00F2               	movwf	??_realizar_leitura_ADC
   391     077A  3002               	movlw	2
   392     077B                     u35:
   393     077B  1003               	clrc
   394     077C  0DF2               	rlf	??_realizar_leitura_ADC,f
   395     077D  3EFF               	addlw	-1
   396     077E  1D03               	skipz
   397     077F  2F7B               	goto	u35
   398     0780  1003               	clrc
   399     0781  0D72               	rlf	??_realizar_leitura_ADC,w
   400     0782  049F               	iorwf	31,f	;volatile
   401     0783                     l629:
   402                           
   403                           ;atividade7.c: 21:     PR2 = 0xFF;
   404     0783  300B               	movlw	11
   405     0784  00F3               	movwf	??_realizar_leitura_ADC+1
   406     0785  3062               	movlw	98
   407     0786  00F2               	movwf	??_realizar_leitura_ADC
   408     0787                     u67:
   409     0787  0BF2               	decfsz	??_realizar_leitura_ADC,f
   410     0788  2F87               	goto	u67
   411     0789  0BF3               	decfsz	??_realizar_leitura_ADC+1,f
   412     078A  2F87               	goto	u67
   413     078B  0000               	nop
   414     078C                     l631:
   415                           
   416                           ;atividade7.c: 22:     T2CON = 0b00000100;
   417     078C  1283               	bcf	3,5	;RP0=0, select bank0
   418     078D  1303               	bcf	3,6	;RP1=0, select bank0
   419     078E  151F               	bsf	31,2	;volatile
   420     078F                     l32:	
   421                           ;atividade7.c: 23:     CCPR1L = 0x00;
   422                           
   423     078F  191F               	btfsc	31,2	;volatile
   424     0790  2F92               	goto	u41
   425     0791  2F93               	goto	u40
   426     0792                     u41:
   427     0792  2F8F               	goto	l32
   428     0793                     u40:
   429     0793                     l633:
   430                           
   431                           ;atividade7.c: 24: }
   432     0793  081E               	movf	30,w	;volatile
   433     0794  00F1               	movwf	?_realizar_leitura_ADC+1
   434     0795  1683               	bsf	3,5	;RP0=1, select bank1
   435     0796  1303               	bcf	3,6	;RP1=0, select bank1
   436     0797  081E               	movf	30,w	;volatile
   437     0798  00F0               	movwf	?_realizar_leitura_ADC
   438     0799                     l35:
   439     0799  0008               	return
   440     079A                     __end_of_realizar_leitura_ADC:
   441                           
   442                           	psect	text2
   443     075C                     __ptext2:	
   444 ;; *************** function _inicializar_ADC *****************
   445 ;; Defined at:
   446 ;;		line 12 in file "atividade7.c"
   447 ;; Parameters:    Size  Location     Type
   448 ;;		None
   449 ;; Auto vars:     Size  Location     Type
   450 ;;		None
   451 ;; Return value:  Size  Location     Type
   452 ;;                  1    wreg      void 
   453 ;; Registers used:
   454 ;;		None
   455 ;; Tracked objects:
   456 ;;		On entry : 0/0
   457 ;;		On exit  : 0/0
   458 ;;		Unchanged: 0/0
   459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   460 ;;      Params:         0       0       0       0       0
   461 ;;      Locals:         0       0       0       0       0
   462 ;;      Temps:          0       0       0       0       0
   463 ;;      Totals:         0       0       0       0       0
   464 ;;Total ram usage:        0 bytes
   465 ;; Hardware stack levels used: 1
   466 ;; This function calls:
   467 ;;		Nothing
   468 ;; This function is called by:
   469 ;;		_main
   470 ;; This function uses a non-reentrant model
   471 ;;
   472                           
   473     075C                     _inicializar_ADC:	
   474                           ;psect for function _inicializar_ADC
   475                           
   476     075C                     l593:	
   477                           ;incstack = 0
   478                           ; Regs used in _inicializar_ADC: []
   479                           
   480                           
   481                           ;atividade7.c: 13:     ADCON0bits.GO_DONE = 1;
   482     075C  3099               	movlw	153
   483     075D  1283               	bcf	3,5	;RP0=0, select bank0
   484     075E  1303               	bcf	3,6	;RP1=0, select bank0
   485     075F  009F               	movwf	31	;volatile
   486                           
   487                           ;atividade7.c: 14:     while (ADCON0bits.GO_DONE);
   488     0760  3082               	movlw	130
   489     0761  1683               	bsf	3,5	;RP0=1, select bank1
   490     0762  1303               	bcf	3,6	;RP1=0, select bank1
   491     0763  009F               	movwf	31	;volatile
   492     0764                     l29:
   493     0764  0008               	return
   494     0765                     __end_of_inicializar_ADC:
   495                           
   496                           	psect	text3
   497     0765                     __ptext3:	
   498 ;; *************** function _configurar_PWM *****************
   499 ;; Defined at:
   500 ;;		line 28 in file "atividade7.c"
   501 ;; Parameters:    Size  Location     Type
   502 ;;		None
   503 ;; Auto vars:     Size  Location     Type
   504 ;;		None
   505 ;; Return value:  Size  Location     Type
   506 ;;                  1    wreg      void 
   507 ;; Registers used:
   508 ;;		status,2
   509 ;; Tracked objects:
   510 ;;		On entry : 0/0
   511 ;;		On exit  : 0/0
   512 ;;		Unchanged: 0/0
   513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   514 ;;      Params:         0       0       0       0       0
   515 ;;      Locals:         0       0       0       0       0
   516 ;;      Temps:          0       0       0       0       0
   517 ;;      Totals:         0       0       0       0       0
   518 ;;Total ram usage:        0 bytes
   519 ;; Hardware stack levels used: 1
   520 ;; This function calls:
   521 ;;		Nothing
   522 ;; This function is called by:
   523 ;;		_main
   524 ;; This function uses a non-reentrant model
   525 ;;
   526                           
   527     0765                     _configurar_PWM:	
   528                           ;psect for function _configurar_PWM
   529                           
   530     0765                     l605:	
   531                           ;incstack = 0
   532                           ; Regs used in _configurar_PWM: [status,2]
   533                           
   534                           
   535                           ;atividade7.c: 29:     CCPR1L = (unsigned char)(valor >> 2);
   536     0765  300C               	movlw	12
   537     0766  1283               	bcf	3,5	;RP0=0, select bank0
   538     0767  1303               	bcf	3,6	;RP1=0, select bank0
   539     0768  0097               	movwf	23	;volatile
   540                           
   541                           ;atividade7.c: 30:     CCP1CONbits.CCP1X = (valor >> 1) & 1;
   542     0769  30FF               	movlw	255
   543     076A  1683               	bsf	3,5	;RP0=1, select bank1
   544     076B  1303               	bcf	3,6	;RP1=0, select bank1
   545     076C  0092               	movwf	18	;volatile
   546                           
   547                           ;atividade7.c: 31:     CCP1CONbits.CCP1Y = valor & 1;
   548     076D  3004               	movlw	4
   549     076E  1283               	bcf	3,5	;RP0=0, select bank0
   550     076F  1303               	bcf	3,6	;RP1=0, select bank0
   551     0770  0092               	movwf	18	;volatile
   552     0771                     l607:
   553                           
   554                           ;atividade7.c: 32: }
   555     0771  0195               	clrf	21	;volatile
   556     0772                     l38:
   557     0772  0008               	return
   558     0773                     __end_of_configurar_PWM:
   559                           
   560                           	psect	text4
   561     079A                     __ptext4:	
   562 ;; *************** function _ajustar_duty_PWM *****************
   563 ;; Defined at:
   564 ;;		line 36 in file "atividade7.c"
   565 ;; Parameters:    Size  Location     Type
   566 ;;  valor           2    0[COMMON] unsigned int 
   567 ;; Auto vars:     Size  Location     Type
   568 ;;		None
   569 ;; Return value:  Size  Location     Type
   570 ;;                  1    wreg      void 
   571 ;; Registers used:
   572 ;;		wreg, status,2, status,0
   573 ;; Tracked objects:
   574 ;;		On entry : 0/0
   575 ;;		On exit  : 0/0
   576 ;;		Unchanged: 0/0
   577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   578 ;;      Params:         2       0       0       0       0
   579 ;;      Locals:         0       0       0       0       0
   580 ;;      Temps:          3       0       0       0       0
   581 ;;      Totals:         5       0       0       0       0
   582 ;;Total ram usage:        5 bytes
   583 ;; Hardware stack levels used: 1
   584 ;; This function calls:
   585 ;;		Nothing
   586 ;; This function is called by:
   587 ;;		_main
   588 ;; This function uses a non-reentrant model
   589 ;;
   590                           
   591     079A                     _ajustar_duty_PWM:	
   592                           ;psect for function _ajustar_duty_PWM
   593                           
   594     079A                     l637:	
   595                           ;incstack = 0
   596                           ; Regs used in _ajustar_duty_PWM: [wreg+status,2+status,0]
   597                           
   598                           
   599                           ;atividade7.c: 37: 
   600     079A  30FF               	movlw	255
   601     079B  05F0               	andwf	ajustar_duty_PWM@valor,f
   602     079C  3003               	movlw	3
   603     079D  05F1               	andwf	ajustar_duty_PWM@valor+1,f
   604     079E                     l639:
   605                           
   606                           ;atividade7.c: 38:     TRISA = 0xFF;
   607     079E  0871               	movf	ajustar_duty_PWM@valor+1,w
   608     079F  00F3               	movwf	??_ajustar_duty_PWM+1
   609     07A0  0870               	movf	ajustar_duty_PWM@valor,w
   610     07A1  00F2               	movwf	??_ajustar_duty_PWM
   611     07A2  1003               	clrc
   612     07A3  0CF3               	rrf	??_ajustar_duty_PWM+1,f
   613     07A4  0CF2               	rrf	??_ajustar_duty_PWM,f
   614     07A5  1003               	clrc
   615     07A6  0CF3               	rrf	??_ajustar_duty_PWM+1,f
   616     07A7  0CF2               	rrf	??_ajustar_duty_PWM,f
   617     07A8  0872               	movf	??_ajustar_duty_PWM,w
   618     07A9  1283               	bcf	3,5	;RP0=0, select bank0
   619     07AA  1303               	bcf	3,6	;RP1=0, select bank0
   620     07AB  0095               	movwf	21	;volatile
   621     07AC                     l641:
   622                           
   623                           ;atividade7.c: 39:     TRISCbits.TRISC2 = 0;
   624     07AC  0871               	movf	ajustar_duty_PWM@valor+1,w
   625     07AD  00F3               	movwf	??_ajustar_duty_PWM+1
   626     07AE  0870               	movf	ajustar_duty_PWM@valor,w
   627     07AF  00F2               	movwf	??_ajustar_duty_PWM
   628     07B0  1003               	clrc
   629     07B1  0CF3               	rrf	??_ajustar_duty_PWM+1,f
   630     07B2  0CF2               	rrf	??_ajustar_duty_PWM,f
   631     07B3  0872               	movf	??_ajustar_duty_PWM,w
   632     07B4  3901               	andlw	1
   633     07B5  00F4               	movwf	??_ajustar_duty_PWM+2
   634     07B6  0EF4               	swapf	??_ajustar_duty_PWM+2,f
   635     07B7  0DF4               	rlf	??_ajustar_duty_PWM+2,f
   636     07B8  0817               	movf	23,w	;volatile
   637     07B9  0674               	xorwf	??_ajustar_duty_PWM+2,w
   638     07BA  39DF               	andlw	-33
   639     07BB  0674               	xorwf	??_ajustar_duty_PWM+2,w
   640     07BC  0097               	movwf	23	;volatile
   641     07BD                     l643:
   642                           
   643                           ;atividade7.c: 40: 
   644     07BD  0870               	movf	ajustar_duty_PWM@valor,w
   645     07BE  3901               	andlw	1
   646     07BF  00F2               	movwf	??_ajustar_duty_PWM
   647     07C0  0EF2               	swapf	??_ajustar_duty_PWM,f
   648     07C1  0817               	movf	23,w	;volatile
   649     07C2  0672               	xorwf	??_ajustar_duty_PWM,w
   650     07C3  39EF               	andlw	-17
   651     07C4  0672               	xorwf	??_ajustar_duty_PWM,w
   652     07C5  0097               	movwf	23	;volatile
   653     07C6                     l41:
   654     07C6  0008               	return
   655     07C7                     __end_of_ajustar_duty_PWM:
   656     0002                     ___latbits      equ	2
   657     007E                     btemp           set	126	;btemp
   658     007E                     wtemp0          set	126
   659                           
   660                           	psect	config
   661                           
   662                           ;Config register CONFIG @ 0x2007
   663                           ;	Oscillator Selection bits
   664                           ;	FOSC = HS, HS oscillator
   665                           ;	Watchdog Timer Enable bit
   666                           ;	WDTE = OFF, WDT disabled
   667                           ;	Power-up Timer Enable bit
   668                           ;	PWRTE = OFF, PWRT disabled
   669                           ;	FLASH Program Memory Code Protection bits
   670                           ;	CP = OFF, Code protection off
   671                           ;	Brown-out Reset Enable bit
   672                           ;	BOREN = 0x1, unprogrammed default
   673                           ;	Low Voltage In-Circuit Serial Programming Enable bit
   674                           ;	LVP = 0x1, unprogrammed default
   675                           ;	Data EE Memory Code Protection
   676                           ;	CPD = 0x1, unprogrammed default
   677                           ;	FLASH Program Memory Write Enable
   678                           ;	WRT = 0x1, unprogrammed default
   679                           ;	In-Circuit Debugger Mode bit
   680                           ;	DEBUG = 0x1, unprogrammed default
   681     2007                     	org	8199
   682     2007  3FFA               	dw	16378

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_ajustar_duty_PWM
    _main->_realizar_leitura_ADC

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0     143
                                              5 COMMON     6     6      0
                   _ajustar_duty_PWM
                     _configurar_PWM
                    _inicializar_ADC
               _realizar_leitura_ADC
 ---------------------------------------------------------------------------------
 (1) _realizar_leitura_ADC                                 5     3      2      29
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _inicializar_ADC                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configurar_PWM                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ajustar_duty_PWM                                     5     3      2      68
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ajustar_duty_PWM
   _configurar_PWM
   _inicializar_ADC
   _realizar_leitura_ADC

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14     11      11     78.6%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK3               96      0       0      0.0%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      11      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Tue Jan 28 23:14:16 2025

                          l32 078F                            l41 07C6                            l35 0799  
                          l29 0764                            l38 0772                            u40 0793  
                          u41 0792                            u35 077B                            u57 07F3  
                          u67 0787              ?_inicializar_ADC 0070                           l605 0765  
                         l607 0771                           l631 078C                           l641 07AC  
                         l633 0793                           l643 07BD                           l627 0774  
                         l651 07E6                           l637 079A                           l629 0783  
                         l653 07EF                           l645 07C7                           l639 079E  
                         l647 07CC                           l593 075C                           l649 07D6  
                         _PR2 0092  __end_of_realizar_leitura_ADC 079A               ?_configurar_PWM 0070  
                        _main 07C7                          btemp 007E                          start 0000  
                       ?_main 0070                         _T2CON 0012                         _TRISA 0085  
                main@duty_PWM 0079                         status 0003                         wtemp0 007E  
             __initialization 07FC                  __end_of_main 07FC                        ??_main 0075  
                      _ADCON0 001F                        _ADCON1 009F                        _ADRESH 001E  
                      _ADRESL 009E                        _CCPR1L 0015              _ajustar_duty_PWM 079A  
        _realizar_leitura_ADC 0773     realizar_leitura_ADC@canal 0074       __end_of__initialization 07FC  
       ?_realizar_leitura_ADC 0070                __pcstackCOMMON 0070              ??_configurar_PWM 0070  
                  __pmaintext 07C7                       _CCP1CON 0017         ajustar_duty_PWM@valor 0070  
      ??_realizar_leitura_ADC 0072                       __ptext1 0773                       __ptext2 075C  
                     __ptext3 0765                       __ptext4 079A      __end_of_ajustar_duty_PWM 07C7  
        end_of_initialization 07FC                     _TRISCbits 0087                   _CCP1CONbits 0017  
           ??_inicializar_ADC 0070           start_initialization 07FC                     ___latbits 0002  
           ?_ajustar_duty_PWM 0070            ??_ajustar_duty_PWM 0072                    _ADCON0bits 001F  
             main@leitura_ADC 0077               _inicializar_ADC 075C       __end_of_inicializar_ADC 0765  
              _configurar_PWM 0765        __end_of_configurar_PWM 0773  
