

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Fri Feb 14 11:17:57 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F877
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     5                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,space=0,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    13                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2,group=2
    15                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2,group=3
    18                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2,group=1
    19                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2,group=1
    20                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2,group=3
    21                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2,group=3
    22                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2,group=3
    23                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2,group=2
    24                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2,group=2
    25                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2
    32                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    33                           	dabs	1,0x7E,2
    34     0000                     
    35                           ; Generated 12/10/2023 GMT
    36                           ; 
    37                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution. Publication is not required when
    51                           ;        this file is used in an embedded application.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC16F877 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69     0004                     fsr             equ	4
    70     0004                     fsr0            equ	4
    71     0000                     indf            equ	0
    72     0000                     indf0           equ	0
    73     0002                     pc              equ	2
    74     0002                     pcl             equ	2
    75     000A                     pclath          equ	10
    76     0003                     status          equ	3
    77     0000                     INDF            equ	0	;# 
    78     0001                     TMR0            equ	1	;# 
    79     0002                     PCL             equ	2	;# 
    80     0003                     STATUS          equ	3	;# 
    81     0004                     FSR             equ	4	;# 
    82     0005                     PORTA           equ	5	;# 
    83     0006                     PORTB           equ	6	;# 
    84     0007                     PORTC           equ	7	;# 
    85     0008                     PORTD           equ	8	;# 
    86     0009                     PORTE           equ	9	;# 
    87     000A                     PCLATH          equ	10	;# 
    88     000B                     INTCON          equ	11	;# 
    89     000C                     PIR1            equ	12	;# 
    90     000D                     PIR2            equ	13	;# 
    91     000E                     TMR1            equ	14	;# 
    92     000E                     TMR1L           equ	14	;# 
    93     000F                     TMR1H           equ	15	;# 
    94     0010                     T1CON           equ	16	;# 
    95     0011                     TMR2            equ	17	;# 
    96     0012                     T2CON           equ	18	;# 
    97     0013                     SSPBUF          equ	19	;# 
    98     0014                     SSPCON          equ	20	;# 
    99     0015                     CCPR1           equ	21	;# 
   100     0015                     CCPR1L          equ	21	;# 
   101     0016                     CCPR1H          equ	22	;# 
   102     0017                     CCP1CON         equ	23	;# 
   103     0018                     RCSTA           equ	24	;# 
   104     0019                     TXREG           equ	25	;# 
   105     001A                     RCREG           equ	26	;# 
   106     001B                     CCPR2           equ	27	;# 
   107     001B                     CCPR2L          equ	27	;# 
   108     001C                     CCPR2H          equ	28	;# 
   109     001D                     CCP2CON         equ	29	;# 
   110     001E                     ADRESH          equ	30	;# 
   111     001F                     ADCON0          equ	31	;# 
   112     0081                     OPTION_REG      equ	129	;# 
   113     0085                     TRISA           equ	133	;# 
   114     0086                     TRISB           equ	134	;# 
   115     0087                     TRISC           equ	135	;# 
   116     0088                     TRISD           equ	136	;# 
   117     0089                     TRISE           equ	137	;# 
   118     008C                     PIE1            equ	140	;# 
   119     008D                     PIE2            equ	141	;# 
   120     008E                     PCON            equ	142	;# 
   121     0091                     SSPCON2         equ	145	;# 
   122     0092                     PR2             equ	146	;# 
   123     0093                     SSPADD          equ	147	;# 
   124     0094                     SSPSTAT         equ	148	;# 
   125     0098                     TXSTA           equ	152	;# 
   126     0099                     SPBRG           equ	153	;# 
   127     009E                     ADRESL          equ	158	;# 
   128     009F                     ADCON1          equ	159	;# 
   129     010C                     EEDATA          equ	268	;# 
   130     010D                     EEADR           equ	269	;# 
   131     010E                     EEDATH          equ	270	;# 
   132     010F                     EEADRH          equ	271	;# 
   133     018C                     EECON1          equ	396	;# 
   134     018D                     EECON2          equ	397	;# 
   135     0000                     INDF            equ	0	;# 
   136     0001                     TMR0            equ	1	;# 
   137     0002                     PCL             equ	2	;# 
   138     0003                     STATUS          equ	3	;# 
   139     0004                     FSR             equ	4	;# 
   140     0005                     PORTA           equ	5	;# 
   141     0006                     PORTB           equ	6	;# 
   142     0007                     PORTC           equ	7	;# 
   143     0008                     PORTD           equ	8	;# 
   144     0009                     PORTE           equ	9	;# 
   145     000A                     PCLATH          equ	10	;# 
   146     000B                     INTCON          equ	11	;# 
   147     000C                     PIR1            equ	12	;# 
   148     000D                     PIR2            equ	13	;# 
   149     000E                     TMR1            equ	14	;# 
   150     000E                     TMR1L           equ	14	;# 
   151     000F                     TMR1H           equ	15	;# 
   152     0010                     T1CON           equ	16	;# 
   153     0011                     TMR2            equ	17	;# 
   154     0012                     T2CON           equ	18	;# 
   155     0013                     SSPBUF          equ	19	;# 
   156     0014                     SSPCON          equ	20	;# 
   157     0015                     CCPR1           equ	21	;# 
   158     0015                     CCPR1L          equ	21	;# 
   159     0016                     CCPR1H          equ	22	;# 
   160     0017                     CCP1CON         equ	23	;# 
   161     0018                     RCSTA           equ	24	;# 
   162     0019                     TXREG           equ	25	;# 
   163     001A                     RCREG           equ	26	;# 
   164     001B                     CCPR2           equ	27	;# 
   165     001B                     CCPR2L          equ	27	;# 
   166     001C                     CCPR2H          equ	28	;# 
   167     001D                     CCP2CON         equ	29	;# 
   168     001E                     ADRESH          equ	30	;# 
   169     001F                     ADCON0          equ	31	;# 
   170     0081                     OPTION_REG      equ	129	;# 
   171     0085                     TRISA           equ	133	;# 
   172     0086                     TRISB           equ	134	;# 
   173     0087                     TRISC           equ	135	;# 
   174     0088                     TRISD           equ	136	;# 
   175     0089                     TRISE           equ	137	;# 
   176     008C                     PIE1            equ	140	;# 
   177     008D                     PIE2            equ	141	;# 
   178     008E                     PCON            equ	142	;# 
   179     0091                     SSPCON2         equ	145	;# 
   180     0092                     PR2             equ	146	;# 
   181     0093                     SSPADD          equ	147	;# 
   182     0094                     SSPSTAT         equ	148	;# 
   183     0098                     TXSTA           equ	152	;# 
   184     0099                     SPBRG           equ	153	;# 
   185     009E                     ADRESL          equ	158	;# 
   186     009F                     ADCON1          equ	159	;# 
   187     010C                     EEDATA          equ	268	;# 
   188     010D                     EEADR           equ	269	;# 
   189     010E                     EEDATH          equ	270	;# 
   190     010F                     EEADRH          equ	271	;# 
   191     018C                     EECON1          equ	396	;# 
   192     018D                     EECON2          equ	397	;# 
   193                           
   194                           	psect	nvBANK0
   195     0069                     __pnvBANK0:
   196     0069                     _velocidade_atual:
   197     0069                     	ds	1
   198     0006                     _PORTBbits      set	6
   199     0008                     _PORTDbits      set	8
   200     0019                     _TXREG          set	25
   201     0018                     _RCSTAbits      set	24
   202     0012                     _T2CON          set	18
   203     0017                     _CCP1CON        set	23
   204     0015                     _CCPR1L         set	21
   205     000B                     _INTCONbits     set	11
   206     0098                     _TXSTAbits      set	152
   207     0099                     _SPBRG          set	153
   208     0092                     _PR2            set	146
   209     0087                     _TRISCbits      set	135
   210     0086                     _TRISB          set	134
   211     0088                     _TRISD          set	136
   212     010C                     _EEDATA         set	268
   213     010D                     _EEADR          set	269
   214     018D                     _EECON2         set	397
   215     018C                     _EECON1bits     set	396
   216                           
   217                           	psect	strings
   218     0003                     __pstrings:
   219     0003                     stringtab:
   220     0003                     __stringtab:
   221                           
   222                           ;	String table - string pointers are 1 byte each
   223     0003  1BFF               	btfsc	btemp+1,7
   224     0004  280D               	ljmp	stringcode
   225     0005  1383               	bcf	3,7
   226     0006  187F               	btfsc	btemp+1,0
   227     0007  1783               	bsf	3,7
   228     0008  0800               	movf	0,w
   229     0009  0A84               	incf	4,f
   230     000A  1903               	skipnz
   231     000B  0AFF               	incf	btemp+1,f
   232     000C  0008               	return
   233     000D                     stringcode:
   234     000D                     stringdir:
   235     000D  3000               	movlw	high stringdir
   236     000E  008A               	movwf	10
   237     000F  0804               	movf	4,w
   238     0010  0A84               	incf	4,f
   239     0011  0782               	addwf	2,f
   240     0012                     __stringbase:
   241     0012  3400               	retlw	0
   242     0013                     __end_of__stringtab:
   243     0013                     STR_1:
   244     0013  3456               	retlw	86	;'V'
   245     0014  3465               	retlw	101	;'e'
   246     0015  346C               	retlw	108	;'l'
   247     0016  346F               	retlw	111	;'o'
   248     0017  3463               	retlw	99	;'c'
   249     0018  3469               	retlw	105	;'i'
   250     0019  3464               	retlw	100	;'d'
   251     001A  3461               	retlw	97	;'a'
   252     001B  3464               	retlw	100	;'d'
   253     001C  3465               	retlw	101	;'e'
   254     001D  3473               	retlw	115	;'s'
   255     001E  3420               	retlw	32	;' '
   256     001F  3464               	retlw	100	;'d'
   257     0020  3469               	retlw	105	;'i'
   258     0021  3467               	retlw	103	;'g'
   259     0022  3469               	retlw	105	;'i'
   260     0023  3474               	retlw	116	;'t'
   261     0024  3461               	retlw	97	;'a'
   262     0025  3464               	retlw	100	;'d'
   263     0026  3461               	retlw	97	;'a'
   264     0027  3473               	retlw	115	;'s'
   265     0028  343A               	retlw	58	;':'
   266     0029  3420               	retlw	32	;' '
   267     002A  3400               	retlw	0
   268     002B                     STR_3:
   269     002B  3456               	retlw	86	;'V'
   270     002C  3465               	retlw	101	;'e'
   271     002D  346C               	retlw	108	;'l'
   272     002E  346F               	retlw	111	;'o'
   273     002F  3463               	retlw	99	;'c'
   274     0030  3469               	retlw	105	;'i'
   275     0031  3464               	retlw	100	;'d'
   276     0032  3461               	retlw	97	;'a'
   277     0033  3464               	retlw	100	;'d'
   278     0034  3465               	retlw	101	;'e'
   279     0035  3420               	retlw	32	;' '
   280     0036  3461               	retlw	97	;'a'
   281     0037  3474               	retlw	116	;'t'
   282     0038  3475               	retlw	117	;'u'
   283     0039  3461               	retlw	97	;'a'
   284     003A  346C               	retlw	108	;'l'
   285     003B  343A               	retlw	58	;':'
   286     003C  3420               	retlw	32	;' '
   287     003D  3425               	retlw	37	;'%'
   288     003E  3464               	retlw	100	;'d'
   289     003F  340D               	retlw	13
   290     0040  340A               	retlw	10
   291     0041  3400               	retlw	0
   292     003F                     STR_2           equ	STR_3+20
   293                           
   294                           	psect	cinit
   295     07EB                     start_initialization:	
   296                           ; #config settings
   297                           
   298     07EB                     __initialization:
   299                           
   300                           ; Clear objects allocated to BANK0
   301     07EB  1383               	bcf	3,7	;select IRP bank0
   302     07EC  3059               	movlw	low __pbssBANK0
   303     07ED  0084               	movwf	4
   304     07EE  3069               	movlw	low (__pbssBANK0+16)
   305     07EF  120A  118A  239F  120A  118A  	fcall	clear_ram0
   306                           
   307                           ; Clear objects allocated to BANK1
   308     07F4  30A0               	movlw	low __pbssBANK1
   309     07F5  0084               	movwf	4
   310     07F6  30C0               	movlw	low (__pbssBANK1+32)
   311     07F7  120A  118A  239F  120A  118A  	fcall	clear_ram0
   312     07FC                     end_of_initialization:	
   313                           ;End of C runtime variable initialization code
   314                           
   315     07FC                     __end_of__initialization:
   316     07FC  0183               	clrf	3
   317     07FD  120A  118A  2E05   	ljmp	_main	;jump to C main() function
   318                           
   319                           	psect	bssBANK0
   320     0059                     __pbssBANK0:
   321     0059                     _width:
   322     0059                     	ds	2
   323     005B                     _prec:
   324     005B                     	ds	2
   325     005D                     _flags:
   326     005D                     	ds	1
   327     005E                     _posicao:
   328     005E                     	ds	1
   329     005F                     _sequencia:
   330     005F                     	ds	10
   331                           
   332                           	psect	bssBANK1
   333     00A0                     __pbssBANK1:
   334     00A0                     _dbuf:
   335     00A0                     	ds	32
   336                           
   337                           	psect	clrtext
   338     039F                     clear_ram0:	
   339                           ;	Called with FSR containing the base address, and
   340                           ;	W with the last address+1
   341                           
   342     039F  0064               	clrwdt	;clear the watchdog before getting into this loop
   343     03A0                     clrloop0:
   344     03A0  0180               	clrf	0	;clear RAM location pointed to by FSR
   345     03A1  0A84               	incf	4,f	;increment pointer
   346     03A2  0604               	xorwf	4,w	;XOR with final address
   347     03A3  1903               	btfsc	3,2	;have we reached the end yet?
   348     03A4  3400               	retlw	0	;all done for this memory range, return
   349     03A5  0604               	xorwf	4,w	;XOR again to restore value
   350     03A6  2BA0               	goto	clrloop0	;do the next byte
   351                           
   352                           	psect	cstackCOMMON
   353     0070                     __pcstackCOMMON:
   354     0070                     ?_config_PWM:
   355     0070                     ?_config_UART:	
   356                           ; 1 bytes @ 0x0
   357                           
   358     0070                     ?_eeprom_read:	
   359                           ; 1 bytes @ 0x0
   360                           
   361     0070                     ?_set_PWM:	
   362                           ; 1 bytes @ 0x0
   363                           
   364     0070                     ?_enviarVelocidadeAtualUART:	
   365                           ; 1 bytes @ 0x0
   366                           
   367     0070                     ?_ler_teclado:	
   368                           ; 1 bytes @ 0x0
   369                           
   370     0070                     ?_eeprom_write:	
   371                           ; 1 bytes @ 0x0
   372                           
   373     0070                     ?_enviarSequenciaUART:	
   374                           ; 1 bytes @ 0x0
   375                           
   376     0070                     ?_putch:	
   377                           ; 1 bytes @ 0x0
   378                           
   379     0070                     ?_main:	
   380                           ; 1 bytes @ 0x0
   381                           
   382     0070                     ?_enviarChar:	
   383                           ; 1 bytes @ 0x0
   384                           
   385     0070                     ?_fputc:	
   386                           ; 1 bytes @ 0x0
   387                           
   388     0070                     ?___wmul:	
   389                           ; 2 bytes @ 0x0
   390                           
   391     0070                     ?___awdiv:	
   392                           ; 2 bytes @ 0x0
   393                           
   394     0070                     ?___awmod:	
   395                           ; 2 bytes @ 0x0
   396                           
   397     0070                     eeprom_write@dado:	
   398                           ; 2 bytes @ 0x0
   399                           
   400     0070                     eeprom_read@endereco:	
   401                           ; 1 bytes @ 0x0
   402                           
   403     0070                     enviarChar@c:	
   404                           ; 1 bytes @ 0x0
   405                           
   406     0070                     ler_teclado@tecla:	
   407                           ; 1 bytes @ 0x0
   408                           
   409     0070                     putch@c:	
   410                           ; 1 bytes @ 0x0
   411                           
   412     0070                     ___wmul@multiplier:	
   413                           ; 1 bytes @ 0x0
   414                           
   415     0070                     ___awdiv@divisor:	
   416                           ; 2 bytes @ 0x0
   417                           
   418     0070                     ___awmod@divisor:	
   419                           ; 2 bytes @ 0x0
   420                           
   421     0070                     fputc@c:	
   422                           ; 2 bytes @ 0x0
   423                           
   424     0070                     ??_config_PWM:	
   425                           ; 2 bytes @ 0x0
   426                           
   427     0070                     ??_config_UART:	
   428                           ; 1 bytes @ 0x0
   429                           
   430     0070                     ??_eeprom_read:	
   431                           ; 1 bytes @ 0x0
   432                           
   433     0070                     ??_ler_teclado:	
   434                           ; 1 bytes @ 0x0
   435                           
   436     0070                     ??_putch:	
   437                           ; 1 bytes @ 0x0
   438                           
   439     0070                     ??_enviarChar:	
   440                           ; 1 bytes @ 0x0
   441                           
   442                           
   443                           ; 1 bytes @ 0x0
   444     0070                     	ds	1
   445     0071                     ?_enviarString:
   446     0071                     eeprom_write@endereco:	
   447                           ; 1 bytes @ 0x1
   448                           
   449     0071                     enviarString@s:	
   450                           ; 1 bytes @ 0x1
   451                           
   452     0071                     ??_eeprom_write:	
   453                           ; 2 bytes @ 0x1
   454                           
   455                           
   456                           ; 1 bytes @ 0x1
   457     0071                     	ds	1
   458     0072                     ___wmul@multiplicand:
   459     0072                     ___awdiv@dividend:	
   460                           ; 2 bytes @ 0x2
   461                           
   462     0072                     ___awmod@dividend:	
   463                           ; 2 bytes @ 0x2
   464                           
   465     0072                     fputc@fp:	
   466                           ; 2 bytes @ 0x2
   467                           
   468                           
   469                           ; 2 bytes @ 0x2
   470     0072                     	ds	1
   471     0073                     ??_enviarSequenciaUART:
   472     0073                     ??_enviarString:	
   473                           ; 1 bytes @ 0x3
   474                           
   475                           
   476                           ; 1 bytes @ 0x3
   477     0073                     	ds	1
   478     0074                     ___awdiv@counter:
   479     0074                     ___awmod@counter:	
   480                           ; 1 bytes @ 0x4
   481                           
   482     0074                     ___wmul@product:	
   483                           ; 1 bytes @ 0x4
   484                           
   485     0074                     ??_fputc:	
   486                           ; 2 bytes @ 0x4
   487                           
   488     0074                     ??___wmul:	
   489                           ; 1 bytes @ 0x4
   490                           
   491     0074                     ??___awdiv:	
   492                           ; 1 bytes @ 0x4
   493                           
   494     0074                     ??___awmod:	
   495                           ; 1 bytes @ 0x4
   496                           
   497                           
   498                           ; 1 bytes @ 0x4
   499     0074                     	ds	1
   500     0075                     ___awdiv@sign:
   501     0075                     ___awmod@sign:	
   502                           ; 1 bytes @ 0x5
   503                           
   504                           
   505                           ; 1 bytes @ 0x5
   506     0075                     	ds	1
   507     0076                     ?_abs:
   508     0076                     ___awdiv@quotient:	
   509                           ; 2 bytes @ 0x6
   510                           
   511     0076                     abs@a:	
   512                           ; 2 bytes @ 0x6
   513                           
   514     0076                     ??_set_PWM:	
   515                           ; 2 bytes @ 0x6
   516                           
   517                           
   518                           ; 1 bytes @ 0x6
   519     0076                     	ds	2
   520     0078                     set_PWM@velocidade:
   521     0078                     ??_abs:	
   522                           ; 1 bytes @ 0x8
   523                           
   524                           
   525                           ; 1 bytes @ 0x8
   526     0078                     	ds	1
   527     0079                     set_PWM@duty_cycle:
   528                           
   529                           ; 2 bytes @ 0x9
   530     0079                     	ds	4
   531     007D                     vfprintf@cfmt:
   532     007D                     ??_vfprintf:	
   533                           ; 1 bytes @ 0xD
   534                           
   535                           
   536                           ; 1 bytes @ 0xD
   537     007D                     	ds	1
   538     007E                     ??_main:
   539                           
   540                           	psect	cstackBANK0
   541     0020                     __pcstackBANK0:	
   542                           ; 1 bytes @ 0xE
   543                           
   544     0020                     ?_vfpfcnvrt:
   545     0020                     vfpfcnvrt@fp:	
   546                           ; 1 bytes @ 0x0
   547                           
   548                           
   549                           ; 2 bytes @ 0x0
   550     0020                     	ds	2
   551     0022                     vfpfcnvrt@fmt:
   552                           
   553                           ; 1 bytes @ 0x2
   554     0022                     	ds	1
   555     0023                     vfpfcnvrt@ap:
   556                           
   557                           ; 1 bytes @ 0x3
   558     0023                     	ds	1
   559     0024                     ??_vfpfcnvrt:
   560                           
   561                           ; 1 bytes @ 0x4
   562     0024                     	ds	2
   563     0026                     vfpfcnvrt@done:
   564                           
   565                           ; 1 bytes @ 0x6
   566     0026                     	ds	1
   567     0027                     vfpfcnvrt@cp:
   568                           
   569                           ; 1 bytes @ 0x7
   570     0027                     	ds	1
   571     0028                     vfpfcnvrt@convarg:
   572                           
   573                           ; 4 bytes @ 0x8
   574     0028                     	ds	4
   575     002C                     vfpfcnvrt@c:
   576                           
   577                           ; 1 bytes @ 0xC
   578     002C                     	ds	1
   579     002D                     ?_vfprintf:
   580     002D                     vfprintf@fp:	
   581                           ; 2 bytes @ 0xD
   582                           
   583                           
   584                           ; 2 bytes @ 0xD
   585     002D                     	ds	2
   586     002F                     vfprintf@fmt:
   587                           
   588                           ; 1 bytes @ 0xF
   589     002F                     	ds	1
   590     0030                     vfprintf@ap:
   591                           
   592                           ; 1 bytes @ 0x10
   593     0030                     	ds	1
   594     0031                     ?_sprintf:
   595     0031                     sprintf@s:	
   596                           ; 2 bytes @ 0x11
   597                           
   598                           
   599                           ; 1 bytes @ 0x11
   600     0031                     	ds	1
   601     0032                     sprintf@fmt:
   602                           
   603                           ; 1 bytes @ 0x12
   604     0032                     	ds	3
   605     0035                     ??_sprintf:
   606                           
   607                           ; 1 bytes @ 0x15
   608     0035                     	ds	1
   609     0036                     sprintf@ap:
   610                           
   611                           ; 1 bytes @ 0x16
   612     0036                     	ds	1
   613     0037                     sprintf@f:
   614                           
   615                           ; 11 bytes @ 0x17
   616     0037                     	ds	11
   617     0042                     ??_enviarVelocidadeAtualUART:
   618                           
   619                           ; 1 bytes @ 0x22
   620     0042                     	ds	2
   621     0044                     enviarVelocidadeAtualUART@buffer:
   622                           
   623                           ; 20 bytes @ 0x24
   624     0044                     	ds	20
   625     0058                     main@tecla:
   626                           
   627                           ; 1 bytes @ 0x38
   628     0058                     	ds	1
   629                           
   630                           	psect	maintext
   631     0605                     __pmaintext:	
   632 ;;
   633 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   634 ;;
   635 ;; *************** function _main *****************
   636 ;; Defined at:
   637 ;;		line 54 in file "atividade7.c"
   638 ;; Parameters:    Size  Location     Type
   639 ;;		None
   640 ;; Auto vars:     Size  Location     Type
   641 ;;  tecla           1   56[BANK0 ] unsigned char 
   642 ;; Return value:  Size  Location     Type
   643 ;;                  1    wreg      void 
   644 ;; Registers used:
   645 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   646 ;; Tracked objects:
   647 ;;		On entry : B00/0
   648 ;;		On exit  : 0/0
   649 ;;		Unchanged: 0/0
   650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   651 ;;      Params:         0       0       0       0       0
   652 ;;      Locals:         0       1       0       0       0
   653 ;;      Temps:          0       0       0       0       0
   654 ;;      Totals:         0       1       0       0       0
   655 ;;Total ram usage:        1 bytes
   656 ;; Hardware stack levels required when called: 6
   657 ;; This function calls:
   658 ;;		_config_PWM
   659 ;;		_config_UART
   660 ;;		_eeprom_read
   661 ;;		_eeprom_write
   662 ;;		_enviarSequenciaUART
   663 ;;		_enviarVelocidadeAtualUART
   664 ;;		_ler_teclado
   665 ;;		_set_PWM
   666 ;; This function is called by:
   667 ;;		Startup code after reset
   668 ;; This function uses a non-reentrant model
   669 ;;
   670                           
   671     0605                     _main:	
   672                           ;psect for function _main
   673                           
   674     0605                     l1336:	
   675                           ;incstack = 0
   676                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   677                           
   678                           
   679                           ;atividade7.c: 55:     TRISD = 0xF0;
   680     0605  30F0               	movlw	240
   681     0606  1683               	bsf	3,5	;RP0=1, select bank1
   682     0607  1303               	bcf	3,6	;RP1=0, select bank1
   683     0608  0088               	movwf	8	;volatile
   684                           
   685                           ;atividade7.c: 56:     TRISB = 0xFF;
   686     0609  30FF               	movlw	255
   687     060A  0086               	movwf	6	;volatile
   688                           
   689                           ;atividade7.c: 57:     TRISCbits.TRISC2 = 0;
   690     060B  1107               	bcf	7,2	;volatile
   691     060C                     l1338:
   692                           
   693                           ;atividade7.c: 59:     config_PWM();
   694     060C  120A  118A  23A7  120A  118A  	fcall	_config_PWM
   695                           
   696                           ;atividade7.c: 60:     config_UART();
   697     0611  120A  118A  23CC  120A  118A  	fcall	_config_UART
   698     0616                     l1340:
   699                           
   700                           ;atividade7.c: 62:     velocidade_atual = eeprom_read(0x00);
   701     0616  3000               	movlw	0
   702     0617  120A  118A  23BF  120A  118A  	fcall	_eeprom_read
   703     061C  1283               	bcf	3,5	;RP0=0, select bank0
   704     061D  1303               	bcf	3,6	;RP1=0, select bank0
   705     061E  00E9               	movwf	_velocidade_atual
   706     061F                     l1342:
   707                           
   708                           ;atividade7.c: 63:     if (velocidade_atual > 10) velocidade_atual = 0;
   709     061F  300B               	movlw	11
   710     0620  0269               	subwf	_velocidade_atual,w
   711     0621  1C03               	skipc
   712     0622  2E24               	goto	u1101
   713     0623  2E25               	goto	u1100
   714     0624                     u1101:
   715     0624  2E26               	goto	l1346
   716     0625                     u1100:
   717     0625                     l1344:
   718     0625  01E9               	clrf	_velocidade_atual
   719     0626                     l1346:
   720                           
   721                           ;atividade7.c: 65:     set_PWM(velocidade_atual);
   722     0626  0869               	movf	_velocidade_atual,w
   723     0627  120A  118A  24CD  120A  118A  	fcall	_set_PWM
   724     062C                     l1348:
   725                           
   726                           ;atividade7.c: 66:     enviarVelocidadeAtualUART();
   727     062C  120A  118A  241E  120A  118A  	fcall	_enviarVelocidadeAtualUART
   728     0631                     l1350:
   729                           
   730                           ;atividade7.c: 69:         unsigned char tecla = ler_teclado();
   731     0631  120A  118A  24FE  120A  118A  	fcall	_ler_teclado
   732     0636  1283               	bcf	3,5	;RP0=0, select bank0
   733     0637  1303               	bcf	3,6	;RP1=0, select bank0
   734     0638  00D8               	movwf	main@tecla
   735     0639                     l1352:
   736                           
   737                           ;atividade7.c: 71:         if (tecla != 0xFF) {
   738     0639  0A58               	incf	main@tecla,w
   739     063A  1903               	btfsc	3,2
   740     063B  2E3D               	goto	u1111
   741     063C  2E3E               	goto	u1110
   742     063D                     u1111:
   743     063D  2E31               	goto	l1350
   744     063E                     u1110:
   745     063E                     l1354:
   746                           
   747                           ;atividade7.c: 72:             if (posicao == 0) {
   748     063E  085E               	movf	_posicao,w
   749     063F  1D03               	btfss	3,2
   750     0640  2E42               	goto	u1121
   751     0641  2E43               	goto	u1120
   752     0642                     u1121:
   753     0642  2E4B               	goto	l1358
   754     0643                     u1120:
   755     0643                     l1356:
   756                           
   757                           ;atividade7.c: 73:                 eeprom_write(0x00, tecla);
   758     0643  0858               	movf	main@tecla,w
   759     0644  00F0               	movwf	eeprom_write@dado
   760     0645  3000               	movlw	0
   761     0646  120A  118A  23EE  120A  118A  	fcall	_eeprom_write
   762     064B                     l1358:
   763                           
   764                           ;atividade7.c: 75:             sequencia[posicao++] = tecla + '0';
   765     064B  1283               	bcf	3,5	;RP0=0, select bank0
   766     064C  1303               	bcf	3,6	;RP1=0, select bank0
   767     064D  085E               	movf	_posicao,w
   768     064E  3E5F               	addlw	(low (_sequencia| 0))& (0+255)
   769     064F  0084               	movwf	4
   770     0650  0858               	movf	main@tecla,w
   771     0651  3E30               	addlw	48
   772     0652  1383               	bcf	3,7	;select IRP bank0
   773     0653  0080               	movwf	0
   774     0654                     l1360:
   775     0654  3001               	movlw	1
   776     0655  07DE               	addwf	_posicao,f
   777     0656                     l1362:
   778                           
   779                           ;atividade7.c: 76:             sequencia[posicao] = '\0';
   780     0656  085E               	movf	_posicao,w
   781     0657  3E5F               	addlw	(low (_sequencia| 0))& (0+255)
   782     0658  0084               	movwf	4
   783     0659  0180               	clrf	0
   784     065A                     l1364:
   785                           
   786                           ;atividade7.c: 78:             enviarSequenciaUART();
   787     065A  120A  118A  2402  120A  118A  	fcall	_enviarSequenciaUART
   788     065F                     l1366:
   789                           
   790                           ;atividade7.c: 80:             set_PWM(tecla);
   791     065F  1283               	bcf	3,5	;RP0=0, select bank0
   792     0660  1303               	bcf	3,6	;RP1=0, select bank0
   793     0661  0858               	movf	main@tecla,w
   794     0662  120A  118A  24CD  120A  118A  	fcall	_set_PWM
   795     0667  2E2C               	goto	l1348
   796     0668  120A  118A  2800   	ljmp	start
   797     066B                     __end_of_main:
   798                           
   799                           	psect	text1
   800     04CD                     __ptext1:	
   801 ;; *************** function _set_PWM *****************
   802 ;; Defined at:
   803 ;;		line 113 in file "atividade7.c"
   804 ;; Parameters:    Size  Location     Type
   805 ;;  velocidade      1    wreg     unsigned char 
   806 ;; Auto vars:     Size  Location     Type
   807 ;;  velocidade      1    8[COMMON] unsigned char 
   808 ;;  duty_cycle      2    9[COMMON] unsigned int 
   809 ;; Return value:  Size  Location     Type
   810 ;;                  1    wreg      void 
   811 ;; Registers used:
   812 ;;		wreg, status,2, status,0, pclath, cstack
   813 ;; Tracked objects:
   814 ;;		On entry : 0/0
   815 ;;		On exit  : 0/0
   816 ;;		Unchanged: 0/0
   817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   818 ;;      Params:         0       0       0       0       0
   819 ;;      Locals:         3       0       0       0       0
   820 ;;      Temps:          2       0       0       0       0
   821 ;;      Totals:         5       0       0       0       0
   822 ;;Total ram usage:        5 bytes
   823 ;; Hardware stack levels used: 1
   824 ;; Hardware stack levels required when called: 1
   825 ;; This function calls:
   826 ;;		___wmul
   827 ;; This function is called by:
   828 ;;		_main
   829 ;; This function uses a non-reentrant model
   830 ;;
   831                           
   832     04CD                     _set_PWM:	
   833                           ;psect for function _set_PWM
   834                           
   835                           
   836                           ;incstack = 0
   837                           ; Regs used in _set_PWM: [wreg+status,2+status,0+pclath+cstack]
   838                           ;set_PWM@velocidade stored from wreg
   839     04CD  00F8               	movwf	set_PWM@velocidade
   840     04CE                     l1280:
   841                           
   842                           ;atividade7.c: 114:     unsigned int duty_cycle = velocidade * 25;
   843     04CE  0878               	movf	set_PWM@velocidade,w
   844     04CF  00F6               	movwf	??_set_PWM
   845     04D0  01F7               	clrf	??_set_PWM+1
   846     04D1  0876               	movf	??_set_PWM,w
   847     04D2  00F0               	movwf	___wmul@multiplier
   848     04D3  0877               	movf	??_set_PWM+1,w
   849     04D4  00F1               	movwf	___wmul@multiplier+1
   850     04D5  3019               	movlw	25
   851     04D6  00F2               	movwf	___wmul@multiplicand
   852     04D7  3000               	movlw	0
   853     04D8  00F3               	movwf	___wmul@multiplicand+1
   854     04D9  120A  118A  2482  120A  118A  	fcall	___wmul
   855     04DE  0871               	movf	?___wmul+1,w
   856     04DF  00FA               	movwf	set_PWM@duty_cycle+1
   857     04E0  0870               	movf	?___wmul,w
   858     04E1  00F9               	movwf	set_PWM@duty_cycle
   859     04E2                     l1282:
   860                           
   861                           ;atividade7.c: 115:     CCPR1L = (unsigned char)(duty_cycle >> 2);
   862     04E2  087A               	movf	set_PWM@duty_cycle+1,w
   863     04E3  00F7               	movwf	??_set_PWM+1
   864     04E4  0879               	movf	set_PWM@duty_cycle,w
   865     04E5  00F6               	movwf	??_set_PWM
   866     04E6  1003               	clrc
   867     04E7  0CF7               	rrf	??_set_PWM+1,f
   868     04E8  0CF6               	rrf	??_set_PWM,f
   869     04E9  1003               	clrc
   870     04EA  0CF7               	rrf	??_set_PWM+1,f
   871     04EB  0CF6               	rrf	??_set_PWM,f
   872     04EC  0876               	movf	??_set_PWM,w
   873     04ED  1283               	bcf	3,5	;RP0=0, select bank0
   874     04EE  1303               	bcf	3,6	;RP1=0, select bank0
   875     04EF  0095               	movwf	21	;volatile
   876     04F0                     l1284:
   877                           
   878                           ;atividade7.c: 116:     CCP1CON = (CCP1CON & 0xCF) | ((duty_cycle & 0x03) << 4);
   879     04F0  0879               	movf	set_PWM@duty_cycle,w
   880     04F1  3903               	andlw	3
   881     04F2  00F6               	movwf	??_set_PWM
   882     04F3  3004               	movlw	4
   883     04F4                     u995:
   884     04F4  1003               	clrc
   885     04F5  0DF6               	rlf	??_set_PWM,f
   886     04F6  3EFF               	addlw	-1
   887     04F7  1D03               	skipz
   888     04F8  2CF4               	goto	u995
   889     04F9  0817               	movf	23,w	;volatile
   890     04FA  39CF               	andlw	207
   891     04FB  0476               	iorwf	??_set_PWM,w
   892     04FC  0097               	movwf	23	;volatile
   893     04FD                     l83:
   894     04FD  0008               	return
   895     04FE                     __end_of_set_PWM:
   896                           
   897                           	psect	text2
   898     0482                     __ptext2:	
   899 ;; *************** function ___wmul *****************
   900 ;; Defined at:
   901 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\Umul16.c"
   902 ;; Parameters:    Size  Location     Type
   903 ;;  multiplier      2    0[COMMON] unsigned int 
   904 ;;  multiplicand    2    2[COMMON] unsigned int 
   905 ;; Auto vars:     Size  Location     Type
   906 ;;  product         2    4[COMMON] unsigned int 
   907 ;; Return value:  Size  Location     Type
   908 ;;                  2    0[COMMON] unsigned int 
   909 ;; Registers used:
   910 ;;		wreg, status,2, status,0
   911 ;; Tracked objects:
   912 ;;		On entry : 0/0
   913 ;;		On exit  : 0/0
   914 ;;		Unchanged: 0/0
   915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   916 ;;      Params:         4       0       0       0       0
   917 ;;      Locals:         2       0       0       0       0
   918 ;;      Temps:          0       0       0       0       0
   919 ;;      Totals:         6       0       0       0       0
   920 ;;Total ram usage:        6 bytes
   921 ;; Hardware stack levels used: 1
   922 ;; This function calls:
   923 ;;		Nothing
   924 ;; This function is called by:
   925 ;;		_set_PWM
   926 ;; This function uses a non-reentrant model
   927 ;;
   928                           
   929     0482                     ___wmul:	
   930                           ;psect for function ___wmul
   931                           
   932     0482                     l1248:	
   933                           ;incstack = 0
   934                           ; Regs used in ___wmul: [wreg+status,2+status,0]
   935                           
   936     0482  01F4               	clrf	___wmul@product
   937     0483  01F5               	clrf	___wmul@product+1
   938     0484                     l1250:
   939     0484  1C70               	btfss	___wmul@multiplier,0
   940     0485  2C87               	goto	u951
   941     0486  2C88               	goto	u950
   942     0487                     u951:
   943     0487  2C8E               	goto	l203
   944     0488                     u950:
   945     0488                     l1252:
   946     0488  0872               	movf	___wmul@multiplicand,w
   947     0489  07F4               	addwf	___wmul@product,f
   948     048A  1803               	skipnc
   949     048B  0AF5               	incf	___wmul@product+1,f
   950     048C  0873               	movf	___wmul@multiplicand+1,w
   951     048D  07F5               	addwf	___wmul@product+1,f
   952     048E                     l203:
   953     048E  3001               	movlw	1
   954     048F                     u965:
   955     048F  1003               	clrc
   956     0490  0DF2               	rlf	___wmul@multiplicand,f
   957     0491  0DF3               	rlf	___wmul@multiplicand+1,f
   958     0492  3EFF               	addlw	-1
   959     0493  1D03               	skipz
   960     0494  2C8F               	goto	u965
   961     0495                     l1254:
   962     0495  3001               	movlw	1
   963     0496                     u975:
   964     0496  1003               	clrc
   965     0497  0CF1               	rrf	___wmul@multiplier+1,f
   966     0498  0CF0               	rrf	___wmul@multiplier,f
   967     0499  3EFF               	addlw	-1
   968     049A  1D03               	skipz
   969     049B  2C96               	goto	u975
   970     049C                     l1256:
   971     049C  0870               	movf	___wmul@multiplier,w
   972     049D  0471               	iorwf	___wmul@multiplier+1,w
   973     049E  1D03               	btfss	3,2
   974     049F  2CA1               	goto	u981
   975     04A0  2CA2               	goto	u980
   976     04A1                     u981:
   977     04A1  2C84               	goto	l1250
   978     04A2                     u980:
   979     04A2                     l1258:
   980     04A2  0875               	movf	___wmul@product+1,w
   981     04A3  00F1               	movwf	?___wmul+1
   982     04A4  0874               	movf	___wmul@product,w
   983     04A5  00F0               	movwf	?___wmul
   984     04A6                     l205:
   985     04A6  0008               	return
   986     04A7                     __end_of___wmul:
   987                           
   988                           	psect	text3
   989     04FE                     __ptext3:	
   990 ;; *************** function _ler_teclado *****************
   991 ;; Defined at:
   992 ;;		line 152 in file "atividade7.c"
   993 ;; Parameters:    Size  Location     Type
   994 ;;		None
   995 ;; Auto vars:     Size  Location     Type
   996 ;;  tecla           1    0[COMMON] unsigned char 
   997 ;; Return value:  Size  Location     Type
   998 ;;                  1    wreg      unsigned char 
   999 ;; Registers used:
  1000 ;;		wreg, status,2
  1001 ;; Tracked objects:
  1002 ;;		On entry : 0/0
  1003 ;;		On exit  : 0/0
  1004 ;;		Unchanged: 0/0
  1005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1006 ;;      Params:         0       0       0       0       0
  1007 ;;      Locals:         1       0       0       0       0
  1008 ;;      Temps:          0       0       0       0       0
  1009 ;;      Totals:         1       0       0       0       0
  1010 ;;Total ram usage:        1 bytes
  1011 ;; Hardware stack levels used: 1
  1012 ;; This function calls:
  1013 ;;		Nothing
  1014 ;; This function is called by:
  1015 ;;		_main
  1016 ;; This function uses a non-reentrant model
  1017 ;;
  1018                           
  1019     04FE                     _ler_teclado:	
  1020                           ;psect for function _ler_teclado
  1021                           
  1022     04FE                     l1288:	
  1023                           ;incstack = 0
  1024                           ; Regs used in _ler_teclado: [wreg+status,2]
  1025                           
  1026                           
  1027                           ;atividade7.c: 153:     unsigned char tecla = 0xFF;
  1028     04FE  30FF               	movlw	255
  1029     04FF  00F0               	movwf	ler_teclado@tecla
  1030                           
  1031                           ;atividade7.c: 155:     PORTDbits.RD0 = 0; PORTDbits.RD1 = 1; PORTDbits.RD2 = 1; PORTDbi
      +                          ts.RD3 = 1;
  1032     0500  1283               	bcf	3,5	;RP0=0, select bank0
  1033     0501  1303               	bcf	3,6	;RP1=0, select bank0
  1034     0502  1008               	bcf	8,0	;volatile
  1035     0503  1488               	bsf	8,1	;volatile
  1036     0504  1508               	bsf	8,2	;volatile
  1037     0505  1588               	bsf	8,3	;volatile
  1038                           
  1039                           ;atividade7.c: 156:     if (!PORTBbits.RB0) tecla = 0;
  1040     0506  1806               	btfsc	6,0	;volatile
  1041     0507  2D09               	goto	u1001
  1042     0508  2D0A               	goto	u1000
  1043     0509                     u1001:
  1044     0509  2D0B               	goto	l1292
  1045     050A                     u1000:
  1046     050A                     l1290:
  1047     050A  01F0               	clrf	ler_teclado@tecla
  1048     050B                     l1292:
  1049                           
  1050                           ;atividade7.c: 157:     if (!PORTBbits.RB1) tecla = 1;
  1051     050B  1886               	btfsc	6,1	;volatile
  1052     050C  2D0E               	goto	u1011
  1053     050D  2D0F               	goto	u1010
  1054     050E                     u1011:
  1055     050E  2D11               	goto	l108
  1056     050F                     u1010:
  1057     050F                     l1294:
  1058     050F  3001               	movlw	1
  1059     0510  00F0               	movwf	ler_teclado@tecla
  1060     0511                     l108:
  1061                           
  1062                           ;atividade7.c: 158:     if (!PORTBbits.RB2) tecla = 2;
  1063     0511  1906               	btfsc	6,2	;volatile
  1064     0512  2D14               	goto	u1021
  1065     0513  2D15               	goto	u1020
  1066     0514                     u1021:
  1067     0514  2D17               	goto	l109
  1068     0515                     u1020:
  1069     0515                     l1296:
  1070     0515  3002               	movlw	2
  1071     0516  00F0               	movwf	ler_teclado@tecla
  1072     0517                     l109:
  1073                           
  1074                           ;atividade7.c: 159:     if (!PORTBbits.RB3) tecla = 3;
  1075     0517  1986               	btfsc	6,3	;volatile
  1076     0518  2D1A               	goto	u1031
  1077     0519  2D1B               	goto	u1030
  1078     051A                     u1031:
  1079     051A  2D1D               	goto	l110
  1080     051B                     u1030:
  1081     051B                     l1298:
  1082     051B  3003               	movlw	3
  1083     051C  00F0               	movwf	ler_teclado@tecla
  1084     051D                     l110:
  1085                           
  1086                           ;atividade7.c: 161:     PORTDbits.RD0 = 1; PORTDbits.RD1 = 0; PORTDbits.RD2 = 1; PORTDbi
      +                          ts.RD3 = 1;
  1087     051D  1408               	bsf	8,0	;volatile
  1088     051E  1088               	bcf	8,1	;volatile
  1089     051F  1508               	bsf	8,2	;volatile
  1090     0520  1588               	bsf	8,3	;volatile
  1091                           
  1092                           ;atividade7.c: 162:     if (!PORTBbits.RB0) tecla = 4;
  1093     0521  1806               	btfsc	6,0	;volatile
  1094     0522  2D24               	goto	u1041
  1095     0523  2D25               	goto	u1040
  1096     0524                     u1041:
  1097     0524  2D27               	goto	l111
  1098     0525                     u1040:
  1099     0525                     l1300:
  1100     0525  3004               	movlw	4
  1101     0526  00F0               	movwf	ler_teclado@tecla
  1102     0527                     l111:
  1103                           
  1104                           ;atividade7.c: 163:     if (!PORTBbits.RB1) tecla = 5;
  1105     0527  1886               	btfsc	6,1	;volatile
  1106     0528  2D2A               	goto	u1051
  1107     0529  2D2B               	goto	u1050
  1108     052A                     u1051:
  1109     052A  2D2D               	goto	l112
  1110     052B                     u1050:
  1111     052B                     l1302:
  1112     052B  3005               	movlw	5
  1113     052C  00F0               	movwf	ler_teclado@tecla
  1114     052D                     l112:
  1115                           
  1116                           ;atividade7.c: 164:     if (!PORTBbits.RB2) tecla = 6;
  1117     052D  1906               	btfsc	6,2	;volatile
  1118     052E  2D30               	goto	u1061
  1119     052F  2D31               	goto	u1060
  1120     0530                     u1061:
  1121     0530  2D33               	goto	l113
  1122     0531                     u1060:
  1123     0531                     l1304:
  1124     0531  3006               	movlw	6
  1125     0532  00F0               	movwf	ler_teclado@tecla
  1126     0533                     l113:
  1127                           
  1128                           ;atividade7.c: 165:     if (!PORTBbits.RB3) tecla = 7;
  1129     0533  1986               	btfsc	6,3	;volatile
  1130     0534  2D36               	goto	u1071
  1131     0535  2D37               	goto	u1070
  1132     0536                     u1071:
  1133     0536  2D39               	goto	l114
  1134     0537                     u1070:
  1135     0537                     l1306:
  1136     0537  3007               	movlw	7
  1137     0538  00F0               	movwf	ler_teclado@tecla
  1138     0539                     l114:
  1139                           
  1140                           ;atividade7.c: 167:     PORTDbits.RD0 = 1; PORTDbits.RD1 = 1; PORTDbits.RD2 = 0; PORTDbi
      +                          ts.RD3 = 1;
  1141     0539  1408               	bsf	8,0	;volatile
  1142     053A  1488               	bsf	8,1	;volatile
  1143     053B  1108               	bcf	8,2	;volatile
  1144     053C  1588               	bsf	8,3	;volatile
  1145                           
  1146                           ;atividade7.c: 168:     if (!PORTBbits.RB0) tecla = 8;
  1147     053D  1806               	btfsc	6,0	;volatile
  1148     053E  2D40               	goto	u1081
  1149     053F  2D41               	goto	u1080
  1150     0540                     u1081:
  1151     0540  2D43               	goto	l115
  1152     0541                     u1080:
  1153     0541                     l1308:
  1154     0541  3008               	movlw	8
  1155     0542  00F0               	movwf	ler_teclado@tecla
  1156     0543                     l115:
  1157                           
  1158                           ;atividade7.c: 169:     if (!PORTBbits.RB1) tecla = 9;
  1159     0543  1886               	btfsc	6,1	;volatile
  1160     0544  2D46               	goto	u1091
  1161     0545  2D47               	goto	u1090
  1162     0546                     u1091:
  1163     0546  2D49               	goto	l1312
  1164     0547                     u1090:
  1165     0547                     l1310:
  1166     0547  3009               	movlw	9
  1167     0548  00F0               	movwf	ler_teclado@tecla
  1168     0549                     l1312:
  1169                           
  1170                           ;atividade7.c: 171:     return tecla;
  1171     0549  0870               	movf	ler_teclado@tecla,w
  1172     054A                     l117:
  1173     054A  0008               	return
  1174     054B                     __end_of_ler_teclado:
  1175                           
  1176                           	psect	text4
  1177     041E                     __ptext4:	
  1178 ;; *************** function _enviarVelocidadeAtualUART *****************
  1179 ;; Defined at:
  1180 ;;		line 146 in file "atividade7.c"
  1181 ;; Parameters:    Size  Location     Type
  1182 ;;		None
  1183 ;; Auto vars:     Size  Location     Type
  1184 ;;  buffer         20   36[BANK0 ] unsigned char [20]
  1185 ;; Return value:  Size  Location     Type
  1186 ;;                  1    wreg      void 
  1187 ;; Registers used:
  1188 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1189 ;; Tracked objects:
  1190 ;;		On entry : 0/0
  1191 ;;		On exit  : 0/0
  1192 ;;		Unchanged: 0/0
  1193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1194 ;;      Params:         0       0       0       0       0
  1195 ;;      Locals:         0      20       0       0       0
  1196 ;;      Temps:          0       2       0       0       0
  1197 ;;      Totals:         0      22       0       0       0
  1198 ;;Total ram usage:       22 bytes
  1199 ;; Hardware stack levels used: 1
  1200 ;; Hardware stack levels required when called: 5
  1201 ;; This function calls:
  1202 ;;		_enviarString
  1203 ;;		_sprintf
  1204 ;; This function is called by:
  1205 ;;		_main
  1206 ;; This function uses a non-reentrant model
  1207 ;;
  1208                           
  1209     041E                     _enviarVelocidadeAtualUART:	
  1210                           ;psect for function _enviarVelocidadeAtualUART
  1211                           
  1212     041E                     l1286:	
  1213                           ;incstack = 0
  1214                           ; Regs used in _enviarVelocidadeAtualUART: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+
      +                          cstack]
  1215                           
  1216                           
  1217                           ;atividade7.c: 147:     char buffer[20];;atividade7.c: 148:     sprintf(buffer, "Velocid
      +                          ade atual: %d\r\n", velocidade_atual);
  1218     041E  3044               	movlw	(low (enviarVelocidadeAtualUART@buffer| 0))& (0+255)
  1219     041F  1283               	bcf	3,5	;RP0=0, select bank0
  1220     0420  1303               	bcf	3,6	;RP1=0, select bank0
  1221     0421  00B1               	movwf	sprintf@s
  1222     0422  3019               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1223     0423  00B2               	movwf	sprintf@fmt
  1224     0424  0869               	movf	_velocidade_atual,w
  1225     0425  00C2               	movwf	??_enviarVelocidadeAtualUART
  1226     0426  01C3               	clrf	??_enviarVelocidadeAtualUART+1
  1227     0427  0842               	movf	??_enviarVelocidadeAtualUART,w
  1228     0428  00B3               	movwf	?_sprintf+2
  1229     0429  0843               	movf	??_enviarVelocidadeAtualUART+1,w
  1230     042A  00B4               	movwf	?_sprintf+3
  1231     042B  120A  118A  243A  120A  118A  	fcall	_sprintf
  1232                           
  1233                           ;atividade7.c: 149:     enviarString(buffer);
  1234     0430  3044               	movlw	(low (enviarVelocidadeAtualUART@buffer| 0))& (0+255)
  1235     0431  00F1               	movwf	enviarString@s
  1236     0432  3000               	movlw	0
  1237     0433  00F2               	movwf	enviarString@s+1
  1238     0434  120A  118A  24A7  120A  118A  	fcall	_enviarString
  1239     0439                     l104:
  1240     0439  0008               	return
  1241     043A                     __end_of_enviarVelocidadeAtualUART:
  1242                           
  1243                           	psect	text5
  1244     043A                     __ptext5:	
  1245 ;; *************** function _sprintf *****************
  1246 ;; Defined at:
  1247 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_sprintf.c"
  1248 ;; Parameters:    Size  Location     Type
  1249 ;;  s               1   17[BANK0 ] PTR unsigned char 
  1250 ;;		 -> enviarVelocidadeAtualUART@buffer(20), 
  1251 ;;  fmt             1   18[BANK0 ] PTR const unsigned char 
  1252 ;;		 -> STR_3(23), 
  1253 ;; Auto vars:     Size  Location     Type
  1254 ;;  f              11   23[BANK0 ] struct _IO_FILE
  1255 ;;  ret             2    0        int 
  1256 ;;  ap              1   22[BANK0 ] PTR void [1]
  1257 ;;		 -> ?_sprintf(2), 
  1258 ;; Return value:  Size  Location     Type
  1259 ;;                  2   17[BANK0 ] int 
  1260 ;; Registers used:
  1261 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1262 ;; Tracked objects:
  1263 ;;		On entry : 0/0
  1264 ;;		On exit  : 0/0
  1265 ;;		Unchanged: 0/0
  1266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1267 ;;      Params:         0       4       0       0       0
  1268 ;;      Locals:         0      12       0       0       0
  1269 ;;      Temps:          0       1       0       0       0
  1270 ;;      Totals:         0      17       0       0       0
  1271 ;;Total ram usage:       17 bytes
  1272 ;; Hardware stack levels used: 1
  1273 ;; Hardware stack levels required when called: 4
  1274 ;; This function calls:
  1275 ;;		_vfprintf
  1276 ;; This function is called by:
  1277 ;;		_enviarVelocidadeAtualUART
  1278 ;; This function uses a non-reentrant model
  1279 ;;
  1280                           
  1281     043A                     _sprintf:	
  1282                           ;psect for function _sprintf
  1283                           
  1284     043A                     l1234:	
  1285                           ;incstack = 0
  1286                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1287                           
  1288     043A  3033               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  1289     043B  1283               	bcf	3,5	;RP0=0, select bank0
  1290     043C  1303               	bcf	3,6	;RP1=0, select bank0
  1291     043D  00B6               	movwf	sprintf@ap
  1292     043E                     l1236:
  1293     043E  0831               	movf	sprintf@s,w
  1294     043F  00B7               	movwf	sprintf@f
  1295     0440  3000               	movlw	0
  1296     0441  00B8               	movwf	sprintf@f+1
  1297     0442                     l1238:
  1298     0442  01B9               	clrf	sprintf@f+2
  1299     0443  01BA               	clrf	sprintf@f+3
  1300     0444                     l1240:
  1301     0444  01C0               	clrf	sprintf@f+9
  1302     0445  01C1               	clrf	sprintf@f+10
  1303     0446                     l1242:
  1304     0446  3037               	movlw	low sprintf@f
  1305     0447  00AD               	movwf	vfprintf@fp
  1306     0448  3000               	movlw	high sprintf@f
  1307     0449  00AE               	movwf	vfprintf@fp+1
  1308     044A  0832               	movf	sprintf@fmt,w
  1309     044B  00AF               	movwf	vfprintf@fmt
  1310     044C  3036               	movlw	(low (sprintf@ap| 0))& (0+255)
  1311     044D  00B0               	movwf	vfprintf@ap
  1312     044E  120A  118A  245D  120A  118A  	fcall	_vfprintf
  1313     0453                     l1244:
  1314     0453  1283               	bcf	3,5	;RP0=0, select bank0
  1315     0454  1303               	bcf	3,6	;RP1=0, select bank0
  1316     0455  0839               	movf	sprintf@f+2,w
  1317     0456  0731               	addwf	sprintf@s,w
  1318     0457  00B5               	movwf	??_sprintf
  1319     0458  0835               	movf	??_sprintf,w
  1320     0459  0084               	movwf	4
  1321     045A  1383               	bcf	3,7	;select IRP bank0
  1322     045B  0180               	clrf	0
  1323     045C                     l666:
  1324     045C  0008               	return
  1325     045D                     __end_of_sprintf:
  1326                           
  1327                           	psect	text6
  1328     045D                     __ptext6:	
  1329 ;; *************** function _vfprintf *****************
  1330 ;; Defined at:
  1331 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  1332 ;; Parameters:    Size  Location     Type
  1333 ;;  fp              2   13[BANK0 ] PTR struct _IO_FILE
  1334 ;;		 -> sprintf@f(11), 
  1335 ;;  fmt             1   15[BANK0 ] PTR const unsigned char 
  1336 ;;		 -> STR_3(23), 
  1337 ;;  ap              1   16[BANK0 ] PTR PTR void 
  1338 ;;		 -> sprintf@ap(1), 
  1339 ;; Auto vars:     Size  Location     Type
  1340 ;;  cfmt            1   13[COMMON] PTR unsigned char 
  1341 ;;		 -> STR_3(23), 
  1342 ;; Return value:  Size  Location     Type
  1343 ;;                  2   13[BANK0 ] int 
  1344 ;; Registers used:
  1345 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1346 ;; Tracked objects:
  1347 ;;		On entry : 0/0
  1348 ;;		On exit  : 0/0
  1349 ;;		Unchanged: 0/0
  1350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1351 ;;      Params:         0       4       0       0       0
  1352 ;;      Locals:         1       0       0       0       0
  1353 ;;      Temps:          0       0       0       0       0
  1354 ;;      Totals:         1       4       0       0       0
  1355 ;;Total ram usage:        5 bytes
  1356 ;; Hardware stack levels used: 1
  1357 ;; Hardware stack levels required when called: 3
  1358 ;; This function calls:
  1359 ;;		_vfpfcnvrt
  1360 ;; This function is called by:
  1361 ;;		_sprintf
  1362 ;; This function uses a non-reentrant model
  1363 ;;
  1364                           
  1365     045D                     _vfprintf:	
  1366                           ;psect for function _vfprintf
  1367                           
  1368     045D                     l1216:	
  1369                           ;incstack = 0
  1370                           ; Regs used in _vfprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1371                           
  1372                           
  1373                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1374     045D  1283               	bcf	3,5	;RP0=0, select bank0
  1375     045E  1303               	bcf	3,6	;RP1=0, select bank0
  1376     045F  082F               	movf	vfprintf@fmt,w
  1377     0460  00FD               	movwf	vfprintf@cfmt
  1378                           
  1379                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1380     0461  2C71               	goto	l1220
  1381     0462                     l1218:
  1382                           
  1383                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1384     0462  1283               	bcf	3,5	;RP0=0, select bank0
  1385     0463  1303               	bcf	3,6	;RP1=0, select bank0
  1386     0464  082D               	movf	vfprintf@fp,w
  1387     0465  00A0               	movwf	vfpfcnvrt@fp
  1388     0466  082E               	movf	vfprintf@fp+1,w
  1389     0467  00A1               	movwf	vfpfcnvrt@fp+1
  1390     0468  307D               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  1391     0469  00A2               	movwf	vfpfcnvrt@fmt
  1392     046A  0830               	movf	vfprintf@ap,w
  1393     046B  00A3               	movwf	vfpfcnvrt@ap
  1394     046C  120A  118A  2705  120A  118A  	fcall	_vfpfcnvrt
  1395     0471                     l1220:
  1396                           
  1397                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1398     0471  087D               	movf	vfprintf@cfmt,w
  1399     0472  0084               	movwf	4
  1400     0473  120A  118A  200D  120A  118A  	fcall	stringdir
  1401     0478  3A00               	xorlw	0
  1402     0479  1D03               	skipz
  1403     047A  2C7C               	goto	u931
  1404     047B  2C7D               	goto	u930
  1405     047C                     u931:
  1406     047C  2C62               	goto	l1218
  1407     047D                     u930:
  1408     047D                     l1222:
  1409                           
  1410                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1411     047D  1283               	bcf	3,5	;RP0=0, select bank0
  1412     047E  1303               	bcf	3,6	;RP1=0, select bank0
  1413     047F  01AD               	clrf	?_vfprintf
  1414     0480  01AE               	clrf	?_vfprintf+1
  1415     0481                     l710:
  1416     0481  0008               	return
  1417     0482                     __end_of_vfprintf:
  1418                           
  1419                           	psect	text7
  1420     0705                     __ptext7:	
  1421 ;; *************** function _vfpfcnvrt *****************
  1422 ;; Defined at:
  1423 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  1424 ;; Parameters:    Size  Location     Type
  1425 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  1426 ;;		 -> sprintf@f(11), 
  1427 ;;  fmt             1    2[BANK0 ] PTR PTR unsigned char 
  1428 ;;		 -> vfprintf@cfmt(1), 
  1429 ;;  ap              1    3[BANK0 ] PTR PTR void 
  1430 ;;		 -> sprintf@ap(1), 
  1431 ;; Auto vars:     Size  Location     Type
  1432 ;;  convarg         4    8[BANK0 ] struct .
  1433 ;;  c               1   12[BANK0 ] unsigned char 
  1434 ;;  cp              1    7[BANK0 ] PTR unsigned char 
  1435 ;;		 -> STR_3(23), 
  1436 ;;  done            1    6[BANK0 ] _Bool 
  1437 ;; Return value:  Size  Location     Type
  1438 ;;                  1    wreg      void 
  1439 ;; Registers used:
  1440 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1441 ;; Tracked objects:
  1442 ;;		On entry : 0/0
  1443 ;;		On exit  : 0/0
  1444 ;;		Unchanged: 0/0
  1445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1446 ;;      Params:         0       4       0       0       0
  1447 ;;      Locals:         0       7       0       0       0
  1448 ;;      Temps:          0       2       0       0       0
  1449 ;;      Totals:         0      13       0       0       0
  1450 ;;Total ram usage:       13 bytes
  1451 ;; Hardware stack levels used: 1
  1452 ;; Hardware stack levels required when called: 2
  1453 ;; This function calls:
  1454 ;;		___awdiv
  1455 ;;		___awmod
  1456 ;;		_abs
  1457 ;;		_fputc
  1458 ;; This function is called by:
  1459 ;;		_vfprintf
  1460 ;; This function uses a non-reentrant model
  1461 ;;
  1462                           
  1463     0705                     _vfpfcnvrt:	
  1464                           ;psect for function _vfpfcnvrt
  1465                           
  1466     0705                     l1160:	
  1467                           ;incstack = 0
  1468                           ; Regs used in _vfpfcnvrt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1469                           
  1470                           
  1471                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  1472     0705  1283               	bcf	3,5	;RP0=0, select bank0
  1473     0706  1303               	bcf	3,6	;RP1=0, select bank0
  1474     0707  0822               	movf	vfpfcnvrt@fmt,w
  1475     0708  0084               	movwf	4
  1476     0709  0800               	movf	0,w
  1477     070A  0084               	movwf	4
  1478     070B  120A  118A  200D  120A  118A  	fcall	stringdir
  1479     0710  3A25               	xorlw	37
  1480     0711  1D03               	skipz
  1481     0712  2F14               	goto	u821
  1482     0713  2F15               	goto	u820
  1483     0714                     u821:
  1484     0714  2FD1               	goto	l1206
  1485     0715                     u820:
  1486     0715                     l1162:
  1487                           
  1488                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1489     0715  0822               	movf	vfpfcnvrt@fmt,w
  1490     0716  0084               	movwf	4
  1491     0717  3001               	movlw	1
  1492     0718  0780               	addwf	0,f
  1493     0719                     l1164:
  1494                           
  1495                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1496     0719  01D9               	clrf	_width
  1497     071A  01DA               	clrf	_width+1
  1498     071B  3000               	movlw	0
  1499     071C  00DD               	movwf	_flags
  1500     071D                     l1166:
  1501                           
  1502                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1503     071D  30FF               	movlw	255
  1504     071E  00DB               	movwf	_prec
  1505     071F  30FF               	movlw	255
  1506     0720  00DC               	movwf	_prec+1
  1507     0721                     l1168:
  1508                           
  1509                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  1510     0721  0822               	movf	vfpfcnvrt@fmt,w
  1511     0722  0084               	movwf	4
  1512     0723  0800               	movf	0,w
  1513     0724  00A7               	movwf	vfpfcnvrt@cp
  1514     0725                     l1170:
  1515                           
  1516                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1517     0725  0827               	movf	vfpfcnvrt@cp,w
  1518     0726  0084               	movwf	4
  1519     0727  120A  118A  200D  120A  118A  	fcall	stringdir
  1520     072C  3A64               	xorlw	100
  1521     072D  1903               	skipnz
  1522     072E  2F30               	goto	u831
  1523     072F  2F31               	goto	u830
  1524     0730                     u831:
  1525     0730  2F3D               	goto	l1174
  1526     0731                     u830:
  1527     0731                     l1172:
  1528     0731  0827               	movf	vfpfcnvrt@cp,w
  1529     0732  0084               	movwf	4
  1530     0733  120A  118A  200D  120A  118A  	fcall	stringdir
  1531     0738  3A69               	xorlw	105
  1532     0739  1D03               	skipz
  1533     073A  2F3C               	goto	u841
  1534     073B  2F3D               	goto	u840
  1535     073C                     u841:
  1536     073C  2FCA               	goto	l1202
  1537     073D                     u840:
  1538     073D                     l1174:
  1539                           
  1540                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1541     073D  0823               	movf	vfpfcnvrt@ap,w
  1542     073E  0084               	movwf	4
  1543     073F  1383               	bcf	3,7	;select IRP bank0
  1544     0740  0800               	movf	0,w
  1545     0741  00FF               	movwf	btemp+1
  1546     0742  3002               	movlw	2
  1547     0743  0780               	addwf	0,f
  1548     0744  087F               	movf	btemp+1,w
  1549     0745  0084               	movwf	4
  1550     0746  0800               	movf	0,w
  1551     0747  00A8               	movwf	vfpfcnvrt@convarg
  1552     0748  0A84               	incf	4,f
  1553     0749  0800               	movf	0,w
  1554     074A  00A9               	movwf	vfpfcnvrt@convarg+1
  1555     074B                     l1176:
  1556                           
  1557                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  1558     074B  0822               	movf	vfpfcnvrt@fmt,w
  1559     074C  0084               	movwf	4
  1560     074D  0827               	movf	vfpfcnvrt@cp,w
  1561     074E  3E01               	addlw	1
  1562     074F  0080               	movwf	0
  1563     0750                     l1178:
  1564                           
  1565                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  1566     0750  3020               	movlw	32
  1567     0751  00AC               	movwf	vfpfcnvrt@c
  1568     0752                     l1180:
  1569                           
  1570                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  1571     0752  1BA9               	btfsc	vfpfcnvrt@convarg+1,7
  1572     0753  2F55               	goto	u851
  1573     0754  2F57               	goto	u850
  1574     0755                     u851:
  1575     0755  3001               	movlw	1
  1576     0756  2F58               	goto	u860
  1577     0757                     u850:
  1578     0757  3000               	movlw	0
  1579     0758                     u860:
  1580     0758  00A6               	movwf	vfpfcnvrt@done
  1581     0759                     l1182:
  1582                           
  1583                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  1584     0759  3001               	movlw	1
  1585     075A  02AC               	subwf	vfpfcnvrt@c,f
  1586     075B  082C               	movf	vfpfcnvrt@c,w
  1587     075C  3EA0               	addlw	(low (_dbuf| 0))& (0+255)
  1588     075D  0084               	movwf	4
  1589     075E  300A               	movlw	10
  1590     075F  00F0               	movwf	___awmod@divisor
  1591     0760  3000               	movlw	0
  1592     0761  00F1               	movwf	___awmod@divisor+1
  1593     0762  0829               	movf	vfpfcnvrt@convarg+1,w
  1594     0763  00F3               	movwf	___awmod@dividend+1
  1595     0764  0828               	movf	vfpfcnvrt@convarg,w
  1596     0765  00F2               	movwf	___awmod@dividend
  1597     0766  120A  118A  254B  120A  118A  	fcall	___awmod
  1598     076B  0871               	movf	?___awmod+1,w
  1599     076C  00F7               	movwf	abs@a+1
  1600     076D  0870               	movf	?___awmod,w
  1601     076E  00F6               	movwf	abs@a
  1602     076F  120A  118A  23DD  120A  118A  	fcall	_abs
  1603     0774  0876               	movf	?_abs,w
  1604     0775  3E30               	addlw	48
  1605     0776  1383               	bcf	3,7	;select IRP bank1
  1606     0777  0080               	movwf	0
  1607     0778                     l1184:
  1608                           
  1609                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  1610     0778  300A               	movlw	10
  1611     0779  00F0               	movwf	___awdiv@divisor
  1612     077A  3000               	movlw	0
  1613     077B  00F1               	movwf	___awdiv@divisor+1
  1614     077C  1283               	bcf	3,5	;RP0=0, select bank0
  1615     077D  1303               	bcf	3,6	;RP1=0, select bank0
  1616     077E  0829               	movf	vfpfcnvrt@convarg+1,w
  1617     077F  00F3               	movwf	___awdiv@dividend+1
  1618     0780  0828               	movf	vfpfcnvrt@convarg,w
  1619     0781  00F2               	movwf	___awdiv@dividend
  1620     0782  120A  118A  25A2  120A  118A  	fcall	___awdiv
  1621     0787  0871               	movf	?___awdiv+1,w
  1622     0788  1283               	bcf	3,5	;RP0=0, select bank0
  1623     0789  1303               	bcf	3,6	;RP1=0, select bank0
  1624     078A  00A9               	movwf	vfpfcnvrt@convarg+1
  1625     078B  0870               	movf	?___awdiv,w
  1626     078C  00A8               	movwf	vfpfcnvrt@convarg
  1627     078D                     l1186:
  1628                           
  1629                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  1630     078D  0828               	movf	vfpfcnvrt@convarg,w
  1631     078E  0429               	iorwf	vfpfcnvrt@convarg+1,w
  1632     078F  1903               	btfsc	3,2
  1633     0790  2F92               	goto	u871
  1634     0791  2F93               	goto	u870
  1635     0792                     u871:
  1636     0792  2F98               	goto	l1190
  1637     0793                     u870:
  1638     0793                     l1188:
  1639     0793  082C               	movf	vfpfcnvrt@c,w
  1640     0794  1D03               	btfss	3,2
  1641     0795  2F97               	goto	u881
  1642     0796  2F98               	goto	u880
  1643     0797                     u881:
  1644     0797  2F59               	goto	l1182
  1645     0798                     u880:
  1646     0798                     l1190:
  1647                           
  1648                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  1649     0798  082C               	movf	vfpfcnvrt@c,w
  1650     0799  1903               	btfsc	3,2
  1651     079A  2F9C               	goto	u891
  1652     079B  2F9D               	goto	u890
  1653     079C                     u891:
  1654     079C  2FC3               	goto	l1200
  1655     079D                     u890:
  1656     079D                     l1192:
  1657     079D  0826               	movf	vfpfcnvrt@done,w
  1658     079E  1903               	btfsc	3,2
  1659     079F  2FA1               	goto	u901
  1660     07A0  2FA2               	goto	u900
  1661     07A1                     u901:
  1662     07A1  2FC3               	goto	l1200
  1663     07A2                     u900:
  1664     07A2                     l1194:
  1665                           
  1666                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  1667     07A2  3001               	movlw	1
  1668     07A3  02AC               	subwf	vfpfcnvrt@c,f
  1669     07A4  082C               	movf	vfpfcnvrt@c,w
  1670     07A5  3EA0               	addlw	(low (_dbuf| 0))& (0+255)
  1671     07A6  0084               	movwf	4
  1672     07A7  302D               	movlw	45
  1673     07A8  1383               	bcf	3,7	;select IRP bank1
  1674     07A9  0080               	movwf	0
  1675     07AA  2FC3               	goto	l1200
  1676     07AB                     l1196:
  1677                           
  1678                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  1679     07AB  082C               	movf	vfpfcnvrt@c,w
  1680     07AC  3EA0               	addlw	(low (_dbuf| 0))& (0+255)
  1681     07AD  0084               	movwf	4
  1682     07AE  1383               	bcf	3,7	;select IRP bank1
  1683     07AF  0800               	movf	0,w
  1684     07B0  00A4               	movwf	??_vfpfcnvrt
  1685     07B1  01A5               	clrf	??_vfpfcnvrt+1
  1686     07B2  0824               	movf	??_vfpfcnvrt,w
  1687     07B3  00F0               	movwf	fputc@c
  1688     07B4  0825               	movf	??_vfpfcnvrt+1,w
  1689     07B5  00F1               	movwf	fputc@c+1
  1690     07B6  0820               	movf	vfpfcnvrt@fp,w
  1691     07B7  00F2               	movwf	fputc@fp
  1692     07B8  0821               	movf	vfpfcnvrt@fp+1,w
  1693     07B9  00F3               	movwf	fputc@fp+1
  1694     07BA  120A  118A  266B  120A  118A  	fcall	_fputc
  1695     07BF                     l1198:
  1696     07BF  3001               	movlw	1
  1697     07C0  1283               	bcf	3,5	;RP0=0, select bank0
  1698     07C1  1303               	bcf	3,6	;RP1=0, select bank0
  1699     07C2  07AC               	addwf	vfpfcnvrt@c,f
  1700     07C3                     l1200:
  1701                           
  1702                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  1703     07C3  3020               	movlw	32
  1704     07C4  062C               	xorwf	vfpfcnvrt@c,w
  1705     07C5  1D03               	btfss	3,2
  1706     07C6  2FC8               	goto	u911
  1707     07C7  2FC9               	goto	u910
  1708     07C8                     u911:
  1709     07C8  2FAB               	goto	l1196
  1710     07C9                     u910:
  1711     07C9  2FEA               	goto	l704
  1712     07CA                     l1202:
  1713                           
  1714                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1715     07CA  1283               	bcf	3,5	;RP0=0, select bank0
  1716     07CB  1303               	bcf	3,6	;RP1=0, select bank0
  1717     07CC  0822               	movf	vfpfcnvrt@fmt,w
  1718     07CD  0084               	movwf	4
  1719     07CE  3001               	movlw	1
  1720     07CF  0780               	addwf	0,f
  1721     07D0  2FEA               	goto	l704
  1722     07D1                     l1206:
  1723                           
  1724                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1725     07D1  0822               	movf	vfpfcnvrt@fmt,w
  1726     07D2  0084               	movwf	4
  1727     07D3  0800               	movf	0,w
  1728     07D4  0084               	movwf	4
  1729     07D5  120A  118A  200D  120A  118A  	fcall	stringdir
  1730     07DA  00A4               	movwf	??_vfpfcnvrt
  1731     07DB  01A5               	clrf	??_vfpfcnvrt+1
  1732     07DC  0824               	movf	??_vfpfcnvrt,w
  1733     07DD  00F0               	movwf	fputc@c
  1734     07DE  0825               	movf	??_vfpfcnvrt+1,w
  1735     07DF  00F1               	movwf	fputc@c+1
  1736     07E0  0820               	movf	vfpfcnvrt@fp,w
  1737     07E1  00F2               	movwf	fputc@fp
  1738     07E2  0821               	movf	vfpfcnvrt@fp+1,w
  1739     07E3  00F3               	movwf	fputc@fp+1
  1740     07E4  120A  118A  266B  120A  118A  	fcall	_fputc
  1741     07E9  2FCA               	goto	l1202
  1742     07EA                     l704:
  1743     07EA  0008               	return
  1744     07EB                     __end_of_vfpfcnvrt:
  1745                           
  1746                           	psect	text8
  1747     066B                     __ptext8:	
  1748 ;; *************** function _fputc *****************
  1749 ;; Defined at:
  1750 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_fputc.c"
  1751 ;; Parameters:    Size  Location     Type
  1752 ;;  c               2    0[COMMON] int 
  1753 ;;  fp              2    2[COMMON] PTR struct _IO_FILE
  1754 ;;		 -> sprintf@f(11), 
  1755 ;; Auto vars:     Size  Location     Type
  1756 ;;		None
  1757 ;; Return value:  Size  Location     Type
  1758 ;;                  2    0[COMMON] int 
  1759 ;; Registers used:
  1760 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1761 ;; Tracked objects:
  1762 ;;		On entry : 0/0
  1763 ;;		On exit  : 0/0
  1764 ;;		Unchanged: 0/0
  1765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1766 ;;      Params:         4       0       0       0       0
  1767 ;;      Locals:         0       0       0       0       0
  1768 ;;      Temps:          9       0       0       0       0
  1769 ;;      Totals:        13       0       0       0       0
  1770 ;;Total ram usage:       13 bytes
  1771 ;; Hardware stack levels used: 1
  1772 ;; Hardware stack levels required when called: 1
  1773 ;; This function calls:
  1774 ;;		_putch
  1775 ;; This function is called by:
  1776 ;;		_vfpfcnvrt
  1777 ;; This function uses a non-reentrant model
  1778 ;;
  1779                           
  1780     066B                     _fputc:	
  1781                           ;psect for function _fputc
  1782                           
  1783     066B                     l1138:	
  1784                           ;incstack = 0
  1785                           ; Regs used in _fputc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1786                           
  1787     066B  0872               	movf	fputc@fp,w
  1788     066C  0473               	iorwf	fputc@fp+1,w
  1789     066D  1903               	btfsc	3,2
  1790     066E  2E70               	goto	u761
  1791     066F  2E71               	goto	u760
  1792     0670                     u761:
  1793     0670  2E77               	goto	l1142
  1794     0671                     u760:
  1795     0671                     l1140:
  1796     0671  0872               	movf	fputc@fp,w
  1797     0672  0473               	iorwf	fputc@fp+1,w
  1798     0673  1D03               	btfss	3,2
  1799     0674  2E76               	goto	u771
  1800     0675  2E77               	goto	u770
  1801     0676                     u771:
  1802     0676  2E7E               	goto	l1144
  1803     0677                     u770:
  1804     0677                     l1142:
  1805     0677  0870               	movf	fputc@c,w
  1806     0678  120A  118A  239E  120A  118A  	fcall	_putch
  1807     067D  2F04               	goto	l729
  1808     067E                     l1144:
  1809     067E  0872               	movf	fputc@fp,w
  1810     067F  3E09               	addlw	9
  1811     0680  00F4               	movwf	??_fputc
  1812     0681  0873               	movf	fputc@fp+1,w
  1813     0682  1803               	skipnc
  1814     0683  3E01               	addlw	1
  1815     0684  3E00               	addlw	0
  1816     0685  00F5               	movwf	??_fputc+1
  1817     0686  0874               	movf	??_fputc,w
  1818     0687  0084               	movwf	4
  1819     0688  1783               	bsf	3,7
  1820     0689  1C75               	btfss	??_fputc+1,0
  1821     068A  1383               	bcf	3,7
  1822     068B  0800               	movf	0,w
  1823     068C  00F6               	movwf	??_fputc+2
  1824     068D  0A84               	incf	4,f
  1825     068E  0800               	movf	0,w
  1826     068F  00F7               	movwf	??_fputc+3
  1827     0690  0876               	movf	??_fputc+2,w
  1828     0691  0477               	iorwf	??_fputc+3,w
  1829     0692  1903               	btfsc	3,2
  1830     0693  2E95               	goto	u781
  1831     0694  2E96               	goto	u780
  1832     0695                     u781:
  1833     0695  2EC8               	goto	l1148
  1834     0696                     u780:
  1835     0696                     l1146:
  1836     0696  0872               	movf	fputc@fp,w
  1837     0697  3E09               	addlw	9
  1838     0698  00F4               	movwf	??_fputc
  1839     0699  0873               	movf	fputc@fp+1,w
  1840     069A  1803               	skipnc
  1841     069B  3E01               	addlw	1
  1842     069C  3E00               	addlw	0
  1843     069D  00F5               	movwf	??_fputc+1
  1844     069E  0874               	movf	??_fputc,w
  1845     069F  0084               	movwf	4
  1846     06A0  1783               	bsf	3,7
  1847     06A1  1C75               	btfss	??_fputc+1,0
  1848     06A2  1383               	bcf	3,7
  1849     06A3  0800               	movf	0,w
  1850     06A4  00F6               	movwf	??_fputc+2
  1851     06A5  0A84               	incf	4,f
  1852     06A6  0800               	movf	0,w
  1853     06A7  00F7               	movwf	??_fputc+3
  1854     06A8  0872               	movf	fputc@fp,w
  1855     06A9  3E02               	addlw	2
  1856     06AA  00F8               	movwf	??_fputc+4
  1857     06AB  0873               	movf	fputc@fp+1,w
  1858     06AC  1803               	skipnc
  1859     06AD  3E01               	addlw	1
  1860     06AE  3E00               	addlw	0
  1861     06AF  00F9               	movwf	??_fputc+5
  1862     06B0  0878               	movf	??_fputc+4,w
  1863     06B1  0084               	movwf	4
  1864     06B2  1783               	bsf	3,7
  1865     06B3  1C79               	btfss	??_fputc+5,0
  1866     06B4  1383               	bcf	3,7
  1867     06B5  0800               	movf	0,w
  1868     06B6  00FA               	movwf	??_fputc+6
  1869     06B7  0A84               	incf	4,f
  1870     06B8  0800               	movf	0,w
  1871     06B9  00FB               	movwf	??_fputc+7
  1872     06BA  087B               	movf	??_fputc+7,w
  1873     06BB  3A80               	xorlw	128
  1874     06BC  00FC               	movwf	??_fputc+8
  1875     06BD  0877               	movf	??_fputc+3,w
  1876     06BE  3A80               	xorlw	128
  1877     06BF  027C               	subwf	??_fputc+8,w
  1878     06C0  1D03               	skipz
  1879     06C1  2EC4               	goto	u795
  1880     06C2  0876               	movf	??_fputc+2,w
  1881     06C3  027A               	subwf	??_fputc+6,w
  1882     06C4                     u795:
  1883     06C4  1803               	skipnc
  1884     06C5  2EC7               	goto	u791
  1885     06C6  2EC8               	goto	u790
  1886     06C7                     u791:
  1887     06C7  2F04               	goto	l729
  1888     06C8                     u790:
  1889     06C8                     l1148:
  1890     06C8  0872               	movf	fputc@fp,w
  1891     06C9  0084               	movwf	4
  1892     06CA  1783               	bsf	3,7
  1893     06CB  1C73               	btfss	fputc@fp+1,0
  1894     06CC  1383               	bcf	3,7
  1895     06CD  0800               	movf	0,w
  1896     06CE  00F4               	movwf	??_fputc
  1897     06CF  0A84               	incf	4,f
  1898     06D0  0800               	movf	0,w
  1899     06D1  00F5               	movwf	??_fputc+1
  1900     06D2  0872               	movf	fputc@fp,w
  1901     06D3  3E02               	addlw	2
  1902     06D4  00F6               	movwf	??_fputc+2
  1903     06D5  0873               	movf	fputc@fp+1,w
  1904     06D6  1803               	skipnc
  1905     06D7  3E01               	addlw	1
  1906     06D8  3E00               	addlw	0
  1907     06D9  00F7               	movwf	??_fputc+3
  1908     06DA  0876               	movf	??_fputc+2,w
  1909     06DB  0084               	movwf	4
  1910     06DC  1783               	bsf	3,7
  1911     06DD  1C77               	btfss	??_fputc+3,0
  1912     06DE  1383               	bcf	3,7
  1913     06DF  0800               	movf	0,w
  1914     06E0  0774               	addwf	??_fputc,w
  1915     06E1  00F9               	movwf	??_fputc+5
  1916     06E2  0875               	movf	??_fputc+1,w
  1917     06E3  00F8               	movwf	??_fputc+4
  1918     06E4  1803               	skipnc
  1919     06E5  0AF8               	incf	??_fputc+4,f
  1920     06E6  1F80               	btfss	0,7
  1921     06E7  2EE9               	goto	u800
  1922     06E8  03F8               	decf	??_fputc+4,f
  1923     06E9                     u800:
  1924     06E9  0878               	movf	??_fputc+4,w
  1925     06EA  00FA               	movwf	??_fputc+6
  1926     06EB  0879               	movf	??_fputc+5,w
  1927     06EC  0084               	movwf	4
  1928     06ED  1783               	bsf	3,7
  1929     06EE  1C7A               	btfss	??_fputc+6,0
  1930     06EF  1383               	bcf	3,7
  1931     06F0  0870               	movf	fputc@c,w
  1932     06F1  0080               	movwf	0
  1933     06F2  0872               	movf	fputc@fp,w
  1934     06F3  3E02               	addlw	2
  1935     06F4  00F4               	movwf	??_fputc
  1936     06F5  0873               	movf	fputc@fp+1,w
  1937     06F6  1803               	skipnc
  1938     06F7  3E01               	addlw	1
  1939     06F8  3E00               	addlw	0
  1940     06F9  00F5               	movwf	??_fputc+1
  1941     06FA  0874               	movf	??_fputc,w
  1942     06FB  0084               	movwf	4
  1943     06FC  1783               	bsf	3,7
  1944     06FD  1C75               	btfss	??_fputc+1,0
  1945     06FE  1383               	bcf	3,7
  1946     06FF  3001               	movlw	1
  1947     0700  0780               	addwf	0,f
  1948     0701  0A84               	incf	4,f
  1949     0702  1803               	skipnc
  1950     0703  0A80               	incf	0,f
  1951     0704                     l729:
  1952     0704  0008               	return
  1953     0705                     __end_of_fputc:
  1954                           
  1955                           	psect	text9
  1956     039E                     __ptext9:	
  1957 ;; *************** function _putch *****************
  1958 ;; Defined at:
  1959 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\putch.c"
  1960 ;; Parameters:    Size  Location     Type
  1961 ;;  c               1    wreg     unsigned char 
  1962 ;; Auto vars:     Size  Location     Type
  1963 ;;  c               1    0[COMMON] unsigned char 
  1964 ;; Return value:  Size  Location     Type
  1965 ;;                  1    wreg      void 
  1966 ;; Registers used:
  1967 ;;		wreg
  1968 ;; Tracked objects:
  1969 ;;		On entry : 0/0
  1970 ;;		On exit  : 0/0
  1971 ;;		Unchanged: 0/0
  1972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1973 ;;      Params:         0       0       0       0       0
  1974 ;;      Locals:         0       0       0       0       0
  1975 ;;      Temps:          0       0       0       0       0
  1976 ;;      Totals:         0       0       0       0       0
  1977 ;;Total ram usage:        0 bytes
  1978 ;; Hardware stack levels used: 1
  1979 ;; This function calls:
  1980 ;;		Nothing
  1981 ;; This function is called by:
  1982 ;;		_fputc
  1983 ;; This function uses a non-reentrant model
  1984 ;;
  1985                           
  1986     039E                     _putch:	
  1987                           ;psect for function _putch
  1988                           
  1989     039E                     l740:	
  1990                           ;incstack = 0
  1991                           ; Regs used in _putch: [wreg]
  1992                           
  1993     039E  0008               	return
  1994     039F                     __end_of_putch:
  1995                           
  1996                           	psect	text10
  1997     03DD                     __ptext10:	
  1998 ;; *************** function _abs *****************
  1999 ;; Defined at:
  2000 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\abs.c"
  2001 ;; Parameters:    Size  Location     Type
  2002 ;;  a               2    6[COMMON] int 
  2003 ;; Auto vars:     Size  Location     Type
  2004 ;;		None
  2005 ;; Return value:  Size  Location     Type
  2006 ;;                  2    6[COMMON] int 
  2007 ;; Registers used:
  2008 ;;		wreg, status,2, status,0
  2009 ;; Tracked objects:
  2010 ;;		On entry : 0/0
  2011 ;;		On exit  : 0/0
  2012 ;;		Unchanged: 0/0
  2013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2014 ;;      Params:         2       0       0       0       0
  2015 ;;      Locals:         0       0       0       0       0
  2016 ;;      Temps:          2       0       0       0       0
  2017 ;;      Totals:         4       0       0       0       0
  2018 ;;Total ram usage:        4 bytes
  2019 ;; Hardware stack levels used: 1
  2020 ;; This function calls:
  2021 ;;		Nothing
  2022 ;; This function is called by:
  2023 ;;		_vfpfcnvrt
  2024 ;; This function uses a non-reentrant model
  2025 ;;
  2026                           
  2027     03DD                     _abs:	
  2028                           ;psect for function _abs
  2029                           
  2030     03DD                     l1152:	
  2031                           ;incstack = 0
  2032                           ; Regs used in _abs: [wreg+status,2+status,0]
  2033                           
  2034     03DD  1BF7               	btfsc	abs@a+1,7
  2035     03DE  2BE0               	goto	u811
  2036     03DF  2BE1               	goto	u810
  2037     03E0                     u811:
  2038     03E0  2BE2               	goto	l1156
  2039     03E1                     u810:
  2040     03E1                     l1154:
  2041     03E1  2BED               	goto	l717
  2042     03E2                     l1156:
  2043     03E2  0976               	comf	abs@a,w
  2044     03E3  00F8               	movwf	??_abs
  2045     03E4  0977               	comf	abs@a+1,w
  2046     03E5  00F9               	movwf	??_abs+1
  2047     03E6  0AF8               	incf	??_abs,f
  2048     03E7  1903               	skipnz
  2049     03E8  0AF9               	incf	??_abs+1,f
  2050     03E9  0878               	movf	??_abs,w
  2051     03EA  00F6               	movwf	?_abs
  2052     03EB  0879               	movf	??_abs+1,w
  2053     03EC  00F7               	movwf	?_abs+1
  2054     03ED                     l717:
  2055     03ED  0008               	return
  2056     03EE                     __end_of_abs:
  2057                           
  2058                           	psect	text11
  2059     054B                     __ptext11:	
  2060 ;; *************** function ___awmod *****************
  2061 ;; Defined at:
  2062 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awmod.c"
  2063 ;; Parameters:    Size  Location     Type
  2064 ;;  divisor         2    0[COMMON] int 
  2065 ;;  dividend        2    2[COMMON] int 
  2066 ;; Auto vars:     Size  Location     Type
  2067 ;;  sign            1    5[COMMON] unsigned char 
  2068 ;;  counter         1    4[COMMON] unsigned char 
  2069 ;; Return value:  Size  Location     Type
  2070 ;;                  2    0[COMMON] int 
  2071 ;; Registers used:
  2072 ;;		wreg, status,2, status,0
  2073 ;; Tracked objects:
  2074 ;;		On entry : 0/0
  2075 ;;		On exit  : 0/0
  2076 ;;		Unchanged: 0/0
  2077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2078 ;;      Params:         4       0       0       0       0
  2079 ;;      Locals:         2       0       0       0       0
  2080 ;;      Temps:          0       0       0       0       0
  2081 ;;      Totals:         6       0       0       0       0
  2082 ;;Total ram usage:        6 bytes
  2083 ;; Hardware stack levels used: 1
  2084 ;; This function calls:
  2085 ;;		Nothing
  2086 ;; This function is called by:
  2087 ;;		_vfpfcnvrt
  2088 ;; This function uses a non-reentrant model
  2089 ;;
  2090                           
  2091     054B                     ___awmod:	
  2092                           ;psect for function ___awmod
  2093                           
  2094     054B                     l1100:	
  2095                           ;incstack = 0
  2096                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2097                           
  2098     054B  01F5               	clrf	___awmod@sign
  2099     054C                     l1102:
  2100     054C  1FF3               	btfss	___awmod@dividend+1,7
  2101     054D  2D4F               	goto	u671
  2102     054E  2D50               	goto	u670
  2103     054F                     u671:
  2104     054F  2D57               	goto	l1108
  2105     0550                     u670:
  2106     0550                     l1104:
  2107     0550  09F2               	comf	___awmod@dividend,f
  2108     0551  09F3               	comf	___awmod@dividend+1,f
  2109     0552  0AF2               	incf	___awmod@dividend,f
  2110     0553  1903               	skipnz
  2111     0554  0AF3               	incf	___awmod@dividend+1,f
  2112     0555                     l1106:
  2113     0555  3001               	movlw	1
  2114     0556  00F5               	movwf	___awmod@sign
  2115     0557                     l1108:
  2116     0557  1FF1               	btfss	___awmod@divisor+1,7
  2117     0558  2D5A               	goto	u681
  2118     0559  2D5B               	goto	u680
  2119     055A                     u681:
  2120     055A  2D60               	goto	l1112
  2121     055B                     u680:
  2122     055B                     l1110:
  2123     055B  09F0               	comf	___awmod@divisor,f
  2124     055C  09F1               	comf	___awmod@divisor+1,f
  2125     055D  0AF0               	incf	___awmod@divisor,f
  2126     055E  1903               	skipnz
  2127     055F  0AF1               	incf	___awmod@divisor+1,f
  2128     0560                     l1112:
  2129     0560  0870               	movf	___awmod@divisor,w
  2130     0561  0471               	iorwf	___awmod@divisor+1,w
  2131     0562  1903               	btfsc	3,2
  2132     0563  2D65               	goto	u691
  2133     0564  2D66               	goto	u690
  2134     0565                     u691:
  2135     0565  2D93               	goto	l1130
  2136     0566                     u690:
  2137     0566                     l1114:
  2138     0566  3001               	movlw	1
  2139     0567  00F4               	movwf	___awmod@counter
  2140     0568  2D72               	goto	l1120
  2141     0569                     l1116:
  2142     0569  3001               	movlw	1
  2143     056A                     u705:
  2144     056A  1003               	clrc
  2145     056B  0DF0               	rlf	___awmod@divisor,f
  2146     056C  0DF1               	rlf	___awmod@divisor+1,f
  2147     056D  3EFF               	addlw	-1
  2148     056E  1D03               	skipz
  2149     056F  2D6A               	goto	u705
  2150     0570                     l1118:
  2151     0570  3001               	movlw	1
  2152     0571  07F4               	addwf	___awmod@counter,f
  2153     0572                     l1120:
  2154     0572  1FF1               	btfss	___awmod@divisor+1,7
  2155     0573  2D75               	goto	u711
  2156     0574  2D76               	goto	u710
  2157     0575                     u711:
  2158     0575  2D69               	goto	l1116
  2159     0576                     u710:
  2160     0576                     l1122:
  2161     0576  0871               	movf	___awmod@divisor+1,w
  2162     0577  0273               	subwf	___awmod@dividend+1,w
  2163     0578  1D03               	skipz
  2164     0579  2D7C               	goto	u725
  2165     057A  0870               	movf	___awmod@divisor,w
  2166     057B  0272               	subwf	___awmod@dividend,w
  2167     057C                     u725:
  2168     057C  1C03               	skipc
  2169     057D  2D7F               	goto	u721
  2170     057E  2D80               	goto	u720
  2171     057F                     u721:
  2172     057F  2D86               	goto	l1126
  2173     0580                     u720:
  2174     0580                     l1124:
  2175     0580  0870               	movf	___awmod@divisor,w
  2176     0581  02F2               	subwf	___awmod@dividend,f
  2177     0582  0871               	movf	___awmod@divisor+1,w
  2178     0583  1C03               	skipc
  2179     0584  03F3               	decf	___awmod@dividend+1,f
  2180     0585  02F3               	subwf	___awmod@dividend+1,f
  2181     0586                     l1126:
  2182     0586  3001               	movlw	1
  2183     0587                     u735:
  2184     0587  1003               	clrc
  2185     0588  0CF1               	rrf	___awmod@divisor+1,f
  2186     0589  0CF0               	rrf	___awmod@divisor,f
  2187     058A  3EFF               	addlw	-1
  2188     058B  1D03               	skipz
  2189     058C  2D87               	goto	u735
  2190     058D                     l1128:
  2191     058D  3001               	movlw	1
  2192     058E  02F4               	subwf	___awmod@counter,f
  2193     058F  1D03               	btfss	3,2
  2194     0590  2D92               	goto	u741
  2195     0591  2D93               	goto	u740
  2196     0592                     u741:
  2197     0592  2D76               	goto	l1122
  2198     0593                     u740:
  2199     0593                     l1130:
  2200     0593  0875               	movf	___awmod@sign,w
  2201     0594  1903               	btfsc	3,2
  2202     0595  2D97               	goto	u751
  2203     0596  2D98               	goto	u750
  2204     0597                     u751:
  2205     0597  2D9D               	goto	l1134
  2206     0598                     u750:
  2207     0598                     l1132:
  2208     0598  09F2               	comf	___awmod@dividend,f
  2209     0599  09F3               	comf	___awmod@dividend+1,f
  2210     059A  0AF2               	incf	___awmod@dividend,f
  2211     059B  1903               	skipnz
  2212     059C  0AF3               	incf	___awmod@dividend+1,f
  2213     059D                     l1134:
  2214     059D  0873               	movf	___awmod@dividend+1,w
  2215     059E  00F1               	movwf	?___awmod+1
  2216     059F  0872               	movf	___awmod@dividend,w
  2217     05A0  00F0               	movwf	?___awmod
  2218     05A1                     l369:
  2219     05A1  0008               	return
  2220     05A2                     __end_of___awmod:
  2221                           
  2222                           	psect	text12
  2223     05A2                     __ptext12:	
  2224 ;; *************** function ___awdiv *****************
  2225 ;; Defined at:
  2226 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awdiv.c"
  2227 ;; Parameters:    Size  Location     Type
  2228 ;;  divisor         2    0[COMMON] int 
  2229 ;;  dividend        2    2[COMMON] int 
  2230 ;; Auto vars:     Size  Location     Type
  2231 ;;  quotient        2    6[COMMON] int 
  2232 ;;  sign            1    5[COMMON] unsigned char 
  2233 ;;  counter         1    4[COMMON] unsigned char 
  2234 ;; Return value:  Size  Location     Type
  2235 ;;                  2    0[COMMON] int 
  2236 ;; Registers used:
  2237 ;;		wreg, status,2, status,0
  2238 ;; Tracked objects:
  2239 ;;		On entry : 0/0
  2240 ;;		On exit  : 0/0
  2241 ;;		Unchanged: 0/0
  2242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2243 ;;      Params:         4       0       0       0       0
  2244 ;;      Locals:         4       0       0       0       0
  2245 ;;      Temps:          0       0       0       0       0
  2246 ;;      Totals:         8       0       0       0       0
  2247 ;;Total ram usage:        8 bytes
  2248 ;; Hardware stack levels used: 1
  2249 ;; This function calls:
  2250 ;;		Nothing
  2251 ;; This function is called by:
  2252 ;;		_vfpfcnvrt
  2253 ;; This function uses a non-reentrant model
  2254 ;;
  2255                           
  2256     05A2                     ___awdiv:	
  2257                           ;psect for function ___awdiv
  2258                           
  2259     05A2                     l1056:	
  2260                           ;incstack = 0
  2261                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2262                           
  2263     05A2  01F5               	clrf	___awdiv@sign
  2264     05A3                     l1058:
  2265     05A3  1FF1               	btfss	___awdiv@divisor+1,7
  2266     05A4  2DA6               	goto	u571
  2267     05A5  2DA7               	goto	u570
  2268     05A6                     u571:
  2269     05A6  2DAE               	goto	l1064
  2270     05A7                     u570:
  2271     05A7                     l1060:
  2272     05A7  09F0               	comf	___awdiv@divisor,f
  2273     05A8  09F1               	comf	___awdiv@divisor+1,f
  2274     05A9  0AF0               	incf	___awdiv@divisor,f
  2275     05AA  1903               	skipnz
  2276     05AB  0AF1               	incf	___awdiv@divisor+1,f
  2277     05AC                     l1062:
  2278     05AC  3001               	movlw	1
  2279     05AD  00F5               	movwf	___awdiv@sign
  2280     05AE                     l1064:
  2281     05AE  1FF3               	btfss	___awdiv@dividend+1,7
  2282     05AF  2DB1               	goto	u581
  2283     05B0  2DB2               	goto	u580
  2284     05B1                     u581:
  2285     05B1  2DB9               	goto	l1070
  2286     05B2                     u580:
  2287     05B2                     l1066:
  2288     05B2  09F2               	comf	___awdiv@dividend,f
  2289     05B3  09F3               	comf	___awdiv@dividend+1,f
  2290     05B4  0AF2               	incf	___awdiv@dividend,f
  2291     05B5  1903               	skipnz
  2292     05B6  0AF3               	incf	___awdiv@dividend+1,f
  2293     05B7                     l1068:
  2294     05B7  3001               	movlw	1
  2295     05B8  06F5               	xorwf	___awdiv@sign,f
  2296     05B9                     l1070:
  2297     05B9  01F6               	clrf	___awdiv@quotient
  2298     05BA  01F7               	clrf	___awdiv@quotient+1
  2299     05BB                     l1072:
  2300     05BB  0870               	movf	___awdiv@divisor,w
  2301     05BC  0471               	iorwf	___awdiv@divisor+1,w
  2302     05BD  1903               	btfsc	3,2
  2303     05BE  2DC0               	goto	u591
  2304     05BF  2DC1               	goto	u590
  2305     05C0                     u591:
  2306     05C0  2DF6               	goto	l1092
  2307     05C1                     u590:
  2308     05C1                     l1074:
  2309     05C1  3001               	movlw	1
  2310     05C2  00F4               	movwf	___awdiv@counter
  2311     05C3  2DCD               	goto	l1080
  2312     05C4                     l1076:
  2313     05C4  3001               	movlw	1
  2314     05C5                     u605:
  2315     05C5  1003               	clrc
  2316     05C6  0DF0               	rlf	___awdiv@divisor,f
  2317     05C7  0DF1               	rlf	___awdiv@divisor+1,f
  2318     05C8  3EFF               	addlw	-1
  2319     05C9  1D03               	skipz
  2320     05CA  2DC5               	goto	u605
  2321     05CB                     l1078:
  2322     05CB  3001               	movlw	1
  2323     05CC  07F4               	addwf	___awdiv@counter,f
  2324     05CD                     l1080:
  2325     05CD  1FF1               	btfss	___awdiv@divisor+1,7
  2326     05CE  2DD0               	goto	u611
  2327     05CF  2DD1               	goto	u610
  2328     05D0                     u611:
  2329     05D0  2DC4               	goto	l1076
  2330     05D1                     u610:
  2331     05D1                     l1082:
  2332     05D1  3001               	movlw	1
  2333     05D2                     u625:
  2334     05D2  1003               	clrc
  2335     05D3  0DF6               	rlf	___awdiv@quotient,f
  2336     05D4  0DF7               	rlf	___awdiv@quotient+1,f
  2337     05D5  3EFF               	addlw	-1
  2338     05D6  1D03               	skipz
  2339     05D7  2DD2               	goto	u625
  2340     05D8  0871               	movf	___awdiv@divisor+1,w
  2341     05D9  0273               	subwf	___awdiv@dividend+1,w
  2342     05DA  1D03               	skipz
  2343     05DB  2DDE               	goto	u635
  2344     05DC  0870               	movf	___awdiv@divisor,w
  2345     05DD  0272               	subwf	___awdiv@dividend,w
  2346     05DE                     u635:
  2347     05DE  1C03               	skipc
  2348     05DF  2DE1               	goto	u631
  2349     05E0  2DE2               	goto	u630
  2350     05E1                     u631:
  2351     05E1  2DE9               	goto	l1088
  2352     05E2                     u630:
  2353     05E2                     l1084:
  2354     05E2  0870               	movf	___awdiv@divisor,w
  2355     05E3  02F2               	subwf	___awdiv@dividend,f
  2356     05E4  0871               	movf	___awdiv@divisor+1,w
  2357     05E5  1C03               	skipc
  2358     05E6  03F3               	decf	___awdiv@dividend+1,f
  2359     05E7  02F3               	subwf	___awdiv@dividend+1,f
  2360     05E8                     l1086:
  2361     05E8  1476               	bsf	___awdiv@quotient,0
  2362     05E9                     l1088:
  2363     05E9  3001               	movlw	1
  2364     05EA                     u645:
  2365     05EA  1003               	clrc
  2366     05EB  0CF1               	rrf	___awdiv@divisor+1,f
  2367     05EC  0CF0               	rrf	___awdiv@divisor,f
  2368     05ED  3EFF               	addlw	-1
  2369     05EE  1D03               	skipz
  2370     05EF  2DEA               	goto	u645
  2371     05F0                     l1090:
  2372     05F0  3001               	movlw	1
  2373     05F1  02F4               	subwf	___awdiv@counter,f
  2374     05F2  1D03               	btfss	3,2
  2375     05F3  2DF5               	goto	u651
  2376     05F4  2DF6               	goto	u650
  2377     05F5                     u651:
  2378     05F5  2DD1               	goto	l1082
  2379     05F6                     u650:
  2380     05F6                     l1092:
  2381     05F6  0875               	movf	___awdiv@sign,w
  2382     05F7  1903               	btfsc	3,2
  2383     05F8  2DFA               	goto	u661
  2384     05F9  2DFB               	goto	u660
  2385     05FA                     u661:
  2386     05FA  2E00               	goto	l1096
  2387     05FB                     u660:
  2388     05FB                     l1094:
  2389     05FB  09F6               	comf	___awdiv@quotient,f
  2390     05FC  09F7               	comf	___awdiv@quotient+1,f
  2391     05FD  0AF6               	incf	___awdiv@quotient,f
  2392     05FE  1903               	skipnz
  2393     05FF  0AF7               	incf	___awdiv@quotient+1,f
  2394     0600                     l1096:
  2395     0600  0877               	movf	___awdiv@quotient+1,w
  2396     0601  00F1               	movwf	?___awdiv+1
  2397     0602  0876               	movf	___awdiv@quotient,w
  2398     0603  00F0               	movwf	?___awdiv
  2399     0604                     l356:
  2400     0604  0008               	return
  2401     0605                     __end_of___awdiv:
  2402                           
  2403                           	psect	text13
  2404     0402                     __ptext13:	
  2405 ;; *************** function _enviarSequenciaUART *****************
  2406 ;; Defined at:
  2407 ;;		line 140 in file "atividade7.c"
  2408 ;; Parameters:    Size  Location     Type
  2409 ;;		None
  2410 ;; Auto vars:     Size  Location     Type
  2411 ;;		None
  2412 ;; Return value:  Size  Location     Type
  2413 ;;                  1    wreg      void 
  2414 ;; Registers used:
  2415 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2416 ;; Tracked objects:
  2417 ;;		On entry : 0/0
  2418 ;;		On exit  : 0/0
  2419 ;;		Unchanged: 0/0
  2420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2421 ;;      Params:         0       0       0       0       0
  2422 ;;      Locals:         0       0       0       0       0
  2423 ;;      Temps:          0       0       0       0       0
  2424 ;;      Totals:         0       0       0       0       0
  2425 ;;Total ram usage:        0 bytes
  2426 ;; Hardware stack levels used: 1
  2427 ;; Hardware stack levels required when called: 2
  2428 ;; This function calls:
  2429 ;;		_enviarString
  2430 ;; This function is called by:
  2431 ;;		_main
  2432 ;; This function uses a non-reentrant model
  2433 ;;
  2434                           
  2435     0402                     _enviarSequenciaUART:	
  2436                           ;psect for function _enviarSequenciaUART
  2437                           
  2438     0402                     l1334:	
  2439                           ;incstack = 0
  2440                           ; Regs used in _enviarSequenciaUART: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
  2441                           
  2442                           
  2443                           ;atividade7.c: 141:     enviarString("Velocidades digitadas: ");
  2444     0402  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2445     0403  00F1               	movwf	enviarString@s
  2446     0404  3080               	movlw	128
  2447     0405  00F2               	movwf	enviarString@s+1
  2448     0406  120A  118A  24A7  120A  118A  	fcall	_enviarString
  2449                           
  2450                           ;atividade7.c: 142:     enviarString(sequencia);
  2451     040B  305F               	movlw	(low (_sequencia| 0))& (0+255)
  2452     040C  00F1               	movwf	enviarString@s
  2453     040D  3000               	movlw	0
  2454     040E  00F2               	movwf	enviarString@s+1
  2455     040F  120A  118A  24A7  120A  118A  	fcall	_enviarString
  2456                           
  2457                           ;atividade7.c: 143:     enviarString("\r\n");
  2458     0414  302D               	movlw	(low (((STR_3+20)-__stringbase)| (0+32768)))& (0+255)
  2459     0415  00F1               	movwf	enviarString@s
  2460     0416  3080               	movlw	128
  2461     0417  00F2               	movwf	enviarString@s+1
  2462     0418  120A  118A  24A7  120A  118A  	fcall	_enviarString
  2463     041D                     l101:
  2464     041D  0008               	return
  2465     041E                     __end_of_enviarSequenciaUART:
  2466                           
  2467                           	psect	text14
  2468     04A7                     __ptext14:	
  2469 ;; *************** function _enviarString *****************
  2470 ;; Defined at:
  2471 ;;		line 136 in file "atividade7.c"
  2472 ;; Parameters:    Size  Location     Type
  2473 ;;  s               2    1[COMMON] PTR const unsigned char 
  2474 ;;		 -> enviarVelocidadeAtualUART@buffer(20), STR_2(3), STR_1(24), sequencia(10), 
  2475 ;; Auto vars:     Size  Location     Type
  2476 ;;		None
  2477 ;; Return value:  Size  Location     Type
  2478 ;;                  1    wreg      void 
  2479 ;; Registers used:
  2480 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2481 ;; Tracked objects:
  2482 ;;		On entry : 0/0
  2483 ;;		On exit  : 0/0
  2484 ;;		Unchanged: 0/0
  2485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2486 ;;      Params:         2       0       0       0       0
  2487 ;;      Locals:         0       0       0       0       0
  2488 ;;      Temps:          0       0       0       0       0
  2489 ;;      Totals:         2       0       0       0       0
  2490 ;;Total ram usage:        2 bytes
  2491 ;; Hardware stack levels used: 1
  2492 ;; Hardware stack levels required when called: 1
  2493 ;; This function calls:
  2494 ;;		_enviarChar
  2495 ;; This function is called by:
  2496 ;;		_enviarSequenciaUART
  2497 ;;		_enviarVelocidadeAtualUART
  2498 ;; This function uses a non-reentrant model
  2499 ;;
  2500                           
  2501     04A7                     _enviarString:	
  2502                           ;psect for function _enviarString
  2503                           
  2504     04A7                     l1226:	
  2505                           ;incstack = 0
  2506                           ; Regs used in _enviarString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2507                           
  2508                           
  2509                           ;atividade7.c: 137:     while (*s) enviarChar(*s++);
  2510     04A7  2CBC               	goto	l1232
  2511     04A8                     l1228:
  2512     04A8  0872               	movf	enviarString@s+1,w
  2513     04A9  00FF               	movwf	btemp+1
  2514     04AA  0871               	movf	enviarString@s,w
  2515     04AB  0084               	movwf	4
  2516     04AC  120A  118A  2003  120A  118A  	fcall	stringtab
  2517     04B1  120A  118A  23B3  120A  118A  	fcall	_enviarChar
  2518     04B6                     l1230:
  2519     04B6  3001               	movlw	1
  2520     04B7  07F1               	addwf	enviarString@s,f
  2521     04B8  1803               	skipnc
  2522     04B9  0AF2               	incf	enviarString@s+1,f
  2523     04BA  3000               	movlw	0
  2524     04BB  07F2               	addwf	enviarString@s+1,f
  2525     04BC                     l1232:
  2526     04BC  0872               	movf	enviarString@s+1,w
  2527     04BD  1283               	bcf	3,5	;RP0=0, select bank0
  2528     04BE  1303               	bcf	3,6	;RP1=0, select bank0
  2529     04BF  00FF               	movwf	btemp+1
  2530     04C0  0871               	movf	enviarString@s,w
  2531     04C1  0084               	movwf	4
  2532     04C2  120A  118A  2003  120A  118A  	fcall	stringtab
  2533     04C7  3A00               	xorlw	0
  2534     04C8  1D03               	skipz
  2535     04C9  2CCB               	goto	u941
  2536     04CA  2CCC               	goto	u940
  2537     04CB                     u941:
  2538     04CB  2CA8               	goto	l1228
  2539     04CC                     u940:
  2540     04CC                     l98:
  2541     04CC  0008               	return
  2542     04CD                     __end_of_enviarString:
  2543                           
  2544                           	psect	text15
  2545     03B3                     __ptext15:	
  2546 ;; *************** function _enviarChar *****************
  2547 ;; Defined at:
  2548 ;;		line 131 in file "atividade7.c"
  2549 ;; Parameters:    Size  Location     Type
  2550 ;;  c               1    wreg     unsigned char 
  2551 ;; Auto vars:     Size  Location     Type
  2552 ;;  c               1    0[COMMON] unsigned char 
  2553 ;; Return value:  Size  Location     Type
  2554 ;;                  1    wreg      void 
  2555 ;; Registers used:
  2556 ;;		wreg
  2557 ;; Tracked objects:
  2558 ;;		On entry : 0/0
  2559 ;;		On exit  : 0/0
  2560 ;;		Unchanged: 0/0
  2561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2562 ;;      Params:         0       0       0       0       0
  2563 ;;      Locals:         1       0       0       0       0
  2564 ;;      Temps:          0       0       0       0       0
  2565 ;;      Totals:         1       0       0       0       0
  2566 ;;Total ram usage:        1 bytes
  2567 ;; Hardware stack levels used: 1
  2568 ;; This function calls:
  2569 ;;		Nothing
  2570 ;; This function is called by:
  2571 ;;		_enviarString
  2572 ;; This function uses a non-reentrant model
  2573 ;;
  2574                           
  2575     03B3                     _enviarChar:	
  2576                           ;psect for function _enviarChar
  2577                           
  2578                           
  2579                           ;incstack = 0
  2580                           ; Regs used in _enviarChar: [wreg]
  2581                           ;enviarChar@c stored from wreg
  2582     03B3  00F0               	movwf	enviarChar@c
  2583     03B4                     l1212:
  2584     03B4                     l89:	
  2585                           ;atividade7.c: 132:     while (!TXSTAbits.TRMT);
  2586                           
  2587     03B4  1683               	bsf	3,5	;RP0=1, select bank1
  2588     03B5  1303               	bcf	3,6	;RP1=0, select bank1
  2589     03B6  1C98               	btfss	24,1	;volatile
  2590     03B7  2BB9               	goto	u921
  2591     03B8  2BBA               	goto	u920
  2592     03B9                     u921:
  2593     03B9  2BB4               	goto	l89
  2594     03BA                     u920:
  2595     03BA                     l1214:
  2596                           
  2597                           ;atividade7.c: 133:     TXREG = c;
  2598     03BA  0870               	movf	enviarChar@c,w
  2599     03BB  1283               	bcf	3,5	;RP0=0, select bank0
  2600     03BC  1303               	bcf	3,6	;RP1=0, select bank0
  2601     03BD  0099               	movwf	25	;volatile
  2602     03BE                     l92:
  2603     03BE  0008               	return
  2604     03BF                     __end_of_enviarChar:
  2605                           
  2606                           	psect	text16
  2607     03EE                     __ptext16:	
  2608 ;; *************** function _eeprom_write *****************
  2609 ;; Defined at:
  2610 ;;		line 86 in file "atividade7.c"
  2611 ;; Parameters:    Size  Location     Type
  2612 ;;  endereco        1    wreg     unsigned char 
  2613 ;;  dado            1    0[COMMON] unsigned char 
  2614 ;; Auto vars:     Size  Location     Type
  2615 ;;  endereco        1    1[COMMON] unsigned char 
  2616 ;; Return value:  Size  Location     Type
  2617 ;;                  1    wreg      void 
  2618 ;; Registers used:
  2619 ;;		wreg
  2620 ;; Tracked objects:
  2621 ;;		On entry : 0/0
  2622 ;;		On exit  : 0/0
  2623 ;;		Unchanged: 0/0
  2624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2625 ;;      Params:         1       0       0       0       0
  2626 ;;      Locals:         1       0       0       0       0
  2627 ;;      Temps:          0       0       0       0       0
  2628 ;;      Totals:         2       0       0       0       0
  2629 ;;Total ram usage:        2 bytes
  2630 ;; Hardware stack levels used: 1
  2631 ;; This function calls:
  2632 ;;		Nothing
  2633 ;; This function is called by:
  2634 ;;		_main
  2635 ;; This function uses a non-reentrant model
  2636 ;;
  2637                           
  2638     03EE                     _eeprom_write:	
  2639                           ;psect for function _eeprom_write
  2640                           
  2641                           
  2642                           ;incstack = 0
  2643                           ; Regs used in _eeprom_write: [wreg]
  2644                           ;eeprom_write@endereco stored from wreg
  2645     03EE  00F1               	movwf	eeprom_write@endereco
  2646     03EF                     l1316:
  2647                           
  2648                           ;atividade7.c: 87:     EEADR = endereco;
  2649     03EF  0871               	movf	eeprom_write@endereco,w
  2650     03F0  1283               	bcf	3,5	;RP0=0, select bank2
  2651     03F1  1703               	bsf	3,6	;RP1=1, select bank2
  2652     03F2  008D               	movwf	13	;volatile
  2653                           
  2654                           ;atividade7.c: 88:     EEDATA = dado;
  2655     03F3  0870               	movf	eeprom_write@dado,w
  2656     03F4  008C               	movwf	12	;volatile
  2657     03F5                     l1318:
  2658                           
  2659                           ;atividade7.c: 89:     EECON1bits.EEPGD = 0;
  2660     03F5  1683               	bsf	3,5	;RP0=1, select bank3
  2661     03F6  1703               	bsf	3,6	;RP1=1, select bank3
  2662     03F7  138C               	bcf	12,7	;volsfr
  2663     03F8                     l1320:
  2664                           
  2665                           ;atividade7.c: 90:     EECON1bits.WREN = 1;
  2666     03F8  150C               	bsf	12,2	;volsfr
  2667     03F9                     l1322:
  2668                           
  2669                           ;atividade7.c: 91:     INTCONbits.GIE = 0;
  2670     03F9  138B               	bcf	11,7	;volatile
  2671     03FA                     l1324:
  2672                           
  2673                           ;atividade7.c: 92:     EECON2 = 0x55;
  2674     03FA  3055               	movlw	85
  2675     03FB  008D               	movwf	13	;volsfr
  2676     03FC                     l1326:
  2677                           
  2678                           ;atividade7.c: 93:     EECON2 = 0xAA;
  2679     03FC  30AA               	movlw	170
  2680     03FD  008D               	movwf	13	;volsfr
  2681     03FE                     l1328:
  2682                           
  2683                           ;atividade7.c: 94:     EECON1bits.WR = 1;
  2684     03FE  148C               	bsf	12,1	;volsfr
  2685     03FF                     l1330:
  2686                           
  2687                           ;atividade7.c: 95:     INTCONbits.GIE = 1;
  2688     03FF  178B               	bsf	11,7	;volatile
  2689     0400                     l1332:
  2690                           
  2691                           ;atividade7.c: 96:     EECON1bits.WREN = 0;
  2692     0400  110C               	bcf	12,2	;volsfr
  2693     0401                     l74:
  2694     0401  0008               	return
  2695     0402                     __end_of_eeprom_write:
  2696                           
  2697                           	psect	text17
  2698     03BF                     __ptext17:	
  2699 ;; *************** function _eeprom_read *****************
  2700 ;; Defined at:
  2701 ;;		line 99 in file "atividade7.c"
  2702 ;; Parameters:    Size  Location     Type
  2703 ;;  endereco        1    wreg     unsigned char 
  2704 ;; Auto vars:     Size  Location     Type
  2705 ;;  endereco        1    0[COMMON] unsigned char 
  2706 ;; Return value:  Size  Location     Type
  2707 ;;                  1    wreg      unsigned char 
  2708 ;; Registers used:
  2709 ;;		wreg
  2710 ;; Tracked objects:
  2711 ;;		On entry : 0/0
  2712 ;;		On exit  : 0/0
  2713 ;;		Unchanged: 0/0
  2714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2715 ;;      Params:         0       0       0       0       0
  2716 ;;      Locals:         1       0       0       0       0
  2717 ;;      Temps:          0       0       0       0       0
  2718 ;;      Totals:         1       0       0       0       0
  2719 ;;Total ram usage:        1 bytes
  2720 ;; Hardware stack levels used: 1
  2721 ;; This function calls:
  2722 ;;		Nothing
  2723 ;; This function is called by:
  2724 ;;		_main
  2725 ;; This function uses a non-reentrant model
  2726 ;;
  2727                           
  2728     03BF                     _eeprom_read:	
  2729                           ;psect for function _eeprom_read
  2730                           
  2731                           
  2732                           ;incstack = 0
  2733                           ; Regs used in _eeprom_read: [wreg]
  2734                           ;eeprom_read@endereco stored from wreg
  2735     03BF  00F0               	movwf	eeprom_read@endereco
  2736     03C0                     l1272:
  2737                           
  2738                           ;atividade7.c: 100:     EEADR = endereco;
  2739     03C0  0870               	movf	eeprom_read@endereco,w
  2740     03C1  1283               	bcf	3,5	;RP0=0, select bank2
  2741     03C2  1703               	bsf	3,6	;RP1=1, select bank2
  2742     03C3  008D               	movwf	13	;volatile
  2743     03C4                     l1274:
  2744                           
  2745                           ;atividade7.c: 101:     EECON1bits.EEPGD = 0;
  2746     03C4  1683               	bsf	3,5	;RP0=1, select bank3
  2747     03C5  1703               	bsf	3,6	;RP1=1, select bank3
  2748     03C6  138C               	bcf	12,7	;volsfr
  2749     03C7                     l1276:
  2750                           
  2751                           ;atividade7.c: 102:     EECON1bits.RD = 1;
  2752     03C7  140C               	bsf	12,0	;volsfr
  2753                           
  2754                           ;atividade7.c: 103:     return EEDATA;
  2755     03C8  1283               	bcf	3,5	;RP0=0, select bank2
  2756     03C9  1703               	bsf	3,6	;RP1=1, select bank2
  2757     03CA  080C               	movf	12,w	;volatile
  2758     03CB                     l77:
  2759     03CB  0008               	return
  2760     03CC                     __end_of_eeprom_read:
  2761                           
  2762                           	psect	text18
  2763     03CC                     __ptext18:	
  2764 ;; *************** function _config_UART *****************
  2765 ;; Defined at:
  2766 ;;		line 119 in file "atividade7.c"
  2767 ;; Parameters:    Size  Location     Type
  2768 ;;		None
  2769 ;; Auto vars:     Size  Location     Type
  2770 ;;		None
  2771 ;; Return value:  Size  Location     Type
  2772 ;;                  1    wreg      void 
  2773 ;; Registers used:
  2774 ;;		None
  2775 ;; Tracked objects:
  2776 ;;		On entry : 0/0
  2777 ;;		On exit  : 0/0
  2778 ;;		Unchanged: 0/0
  2779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2780 ;;      Params:         0       0       0       0       0
  2781 ;;      Locals:         0       0       0       0       0
  2782 ;;      Temps:          0       0       0       0       0
  2783 ;;      Totals:         0       0       0       0       0
  2784 ;;Total ram usage:        0 bytes
  2785 ;; Hardware stack levels used: 1
  2786 ;; This function calls:
  2787 ;;		Nothing
  2788 ;; This function is called by:
  2789 ;;		_main
  2790 ;; This function uses a non-reentrant model
  2791 ;;
  2792                           
  2793     03CC                     _config_UART:	
  2794                           ;psect for function _config_UART
  2795                           
  2796     03CC                     l1270:	
  2797                           ;incstack = 0
  2798                           ; Regs used in _config_UART: []
  2799                           
  2800                           
  2801                           ;atividade7.c: 120:     TRISCbits.TRISC6 = 1;
  2802     03CC  1683               	bsf	3,5	;RP0=1, select bank1
  2803     03CD  1303               	bcf	3,6	;RP1=0, select bank1
  2804     03CE  1707               	bsf	7,6	;volatile
  2805                           
  2806                           ;atividade7.c: 121:     TRISCbits.TRISC7 = 1;
  2807     03CF  1787               	bsf	7,7	;volatile
  2808                           
  2809                           ;atividade7.c: 122:     SPBRG = 129;
  2810     03D0  3081               	movlw	129
  2811     03D1  0099               	movwf	25	;volatile
  2812                           
  2813                           ;atividade7.c: 123:     TXSTAbits.BRGH = 1;
  2814     03D2  1518               	bsf	24,2	;volatile
  2815                           
  2816                           ;atividade7.c: 124:     TXSTAbits.SYNC = 0;
  2817     03D3  1218               	bcf	24,4	;volatile
  2818                           
  2819                           ;atividade7.c: 125:     RCSTAbits.SPEN = 1;
  2820     03D4  1283               	bcf	3,5	;RP0=0, select bank0
  2821     03D5  1303               	bcf	3,6	;RP1=0, select bank0
  2822     03D6  1798               	bsf	24,7	;volatile
  2823                           
  2824                           ;atividade7.c: 126:     RCSTAbits.RX9 = 0;
  2825     03D7  1318               	bcf	24,6	;volatile
  2826                           
  2827                           ;atividade7.c: 127:     RCSTAbits.CREN = 0;
  2828     03D8  1218               	bcf	24,4	;volatile
  2829                           
  2830                           ;atividade7.c: 128:     TXSTAbits.TXEN = 1;
  2831     03D9  1683               	bsf	3,5	;RP0=1, select bank1
  2832     03DA  1303               	bcf	3,6	;RP1=0, select bank1
  2833     03DB  1698               	bsf	24,5	;volatile
  2834     03DC                     l86:
  2835     03DC  0008               	return
  2836     03DD                     __end_of_config_UART:
  2837                           
  2838                           	psect	text19
  2839     03A7                     __ptext19:	
  2840 ;; *************** function _config_PWM *****************
  2841 ;; Defined at:
  2842 ;;		line 106 in file "atividade7.c"
  2843 ;; Parameters:    Size  Location     Type
  2844 ;;		None
  2845 ;; Auto vars:     Size  Location     Type
  2846 ;;		None
  2847 ;; Return value:  Size  Location     Type
  2848 ;;                  1    wreg      void 
  2849 ;; Registers used:
  2850 ;;		status,2
  2851 ;; Tracked objects:
  2852 ;;		On entry : 0/0
  2853 ;;		On exit  : 0/0
  2854 ;;		Unchanged: 0/0
  2855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2856 ;;      Params:         0       0       0       0       0
  2857 ;;      Locals:         0       0       0       0       0
  2858 ;;      Temps:          0       0       0       0       0
  2859 ;;      Totals:         0       0       0       0       0
  2860 ;;Total ram usage:        0 bytes
  2861 ;; Hardware stack levels used: 1
  2862 ;; This function calls:
  2863 ;;		Nothing
  2864 ;; This function is called by:
  2865 ;;		_main
  2866 ;; This function uses a non-reentrant model
  2867 ;;
  2868                           
  2869     03A7                     _config_PWM:	
  2870                           ;psect for function _config_PWM
  2871                           
  2872     03A7                     l1262:	
  2873                           ;incstack = 0
  2874                           ; Regs used in _config_PWM: [status,2]
  2875                           
  2876                           
  2877                           ;atividade7.c: 107:     PR2 = 255;
  2878     03A7  30FF               	movlw	255
  2879     03A8  1683               	bsf	3,5	;RP0=1, select bank1
  2880     03A9  1303               	bcf	3,6	;RP1=0, select bank1
  2881     03AA  0092               	movwf	18	;volatile
  2882     03AB                     l1264:
  2883                           
  2884                           ;atividade7.c: 108:     CCPR1L = 0;
  2885     03AB  1283               	bcf	3,5	;RP0=0, select bank0
  2886     03AC  1303               	bcf	3,6	;RP1=0, select bank0
  2887     03AD  0195               	clrf	21	;volatile
  2888     03AE                     l1266:
  2889                           
  2890                           ;atividade7.c: 109:     CCP1CON = 0b00001100;
  2891     03AE  300C               	movlw	12
  2892     03AF  0097               	movwf	23	;volatile
  2893     03B0                     l1268:
  2894                           
  2895                           ;atividade7.c: 110:     T2CON = 0b00000100;
  2896     03B0  3004               	movlw	4
  2897     03B1  0092               	movwf	18	;volatile
  2898     03B2                     l80:
  2899     03B2  0008               	return
  2900     03B3                     __end_of_config_PWM:
  2901     0002                     ___latbits      equ	2
  2902     007E                     btemp           set	126	;btemp
  2903     007E                     wtemp0          set	126
  2904                           
  2905                           	psect	config
  2906                           
  2907                           ;Config register CONFIG @ 0x2007
  2908                           ;	Oscillator Selection bits
  2909                           ;	FOSC = HS, HS oscillator
  2910                           ;	Watchdog Timer Enable bit
  2911                           ;	WDTE = OFF, WDT disabled
  2912                           ;	Power-up Timer Enable bit
  2913                           ;	PWRTE = OFF, PWRT disabled
  2914                           ;	FLASH Program Memory Code Protection bits
  2915                           ;	CP = OFF, Code protection off
  2916                           ;	Brown-out Reset Enable bit
  2917                           ;	BOREN = OFF, BOR disabled
  2918                           ;	Low Voltage In-Circuit Serial Programming Enable bit
  2919                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  2920                           ;	Data EE Memory Code Protection
  2921                           ;	CPD = OFF, Code Protection off
  2922                           ;	FLASH Program Memory Write Enable
  2923                           ;	WRT = OFF, Unprotected program memory may not be written to by EECON control
  2924                           ;	In-Circuit Debugger Mode bit
  2925                           ;	DEBUG = 0x1, unprogrammed default
  2926     2007                     	org	8199
  2927     2007  3D3A               	dw	15674

Data Sizes:
    Strings     47
    Constant    0
    Data        0
    BSS         48
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     57      74
    BANK1            80      0      32
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    enviarString@s	PTR const unsigned char  size(2) Largest target is 24
		 -> enviarVelocidadeAtualUART@buffer(BANK0[20]), sequencia(BANK0[10]), STR_1(CODE[24]), STR_2(CODE[3]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> enviarVelocidadeAtualUART@buffer(BANK0[20]), 

    f$.$source	PTR const unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> enviarVelocidadeAtualUART@buffer(BANK0[20]), 

    fputc@fp$.$source	PTR const unsigned char  size(1) Largest target is 0

    S761$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> enviarVelocidadeAtualUART@buffer(BANK0[20]), 

    S761$source	PTR const unsigned char  size(1) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 23
		 -> STR_3(CODE[23]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 20
		 -> enviarVelocidadeAtualUART@buffer(BANK0[20]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 23
		 -> STR_3(CODE[23]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMMON[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 23
		 -> STR_3(CODE[23]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 23
		 -> STR_3(CODE[23]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 


Critical Paths under _main in COMMON

    _set_PWM->___wmul
    _sprintf->_vfprintf
    _vfpfcnvrt->_fputc
    _abs->___awmod
    _enviarSequenciaUART->_enviarString
    _enviarString->_enviarChar

Critical Paths under _main in BANK0

    _main->_enviarVelocidadeAtualUART
    _enviarVelocidadeAtualUART->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    2337
                                             56 BANK0      1     1      0
                         _config_PWM
                        _config_UART
                        _eeprom_read
                       _eeprom_write
                _enviarSequenciaUART
          _enviarVelocidadeAtualUART
                        _ler_teclado
                            _set_PWM
 ---------------------------------------------------------------------------------
 (1) _set_PWM                                              5     5      0     168
                                              6 COMMON     5     5      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4      94
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _ler_teclado                                          1     1      0      33
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _enviarVelocidadeAtualUART                           22    22      0    1888
                                             34 BANK0     22    22      0
                       _enviarString
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             19    15      4    1760
                                             17 BANK0     17    13      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             5     1      4    1559
                                             13 COMMON     1     1      0
                                             13 BANK0      4     0      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           13     9      4    1434
                                              0 BANK0     13     9      4
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                               13     9      4     230
                                              0 COMMON    13     9      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2      67
                                              6 COMMON     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     298
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     302
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _enviarSequenciaUART                                  0     0      0      78
                       _enviarString
 ---------------------------------------------------------------------------------
 (2) _enviarString                                         2     0      2      78
                                              1 COMMON     2     0      2
                         _enviarChar
 ---------------------------------------------------------------------------------
 (3) _enviarChar                                           1     1      0      29
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _eeprom_write                                         2     1      1      52
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (1) _eeprom_read                                          1     1      0      29
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _config_UART                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_PWM                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _config_PWM
   _config_UART
   _eeprom_read
   _eeprom_write
   _enviarSequenciaUART
     _enviarString
       _enviarChar
   _enviarVelocidadeAtualUART
     _enviarString
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch
   _ler_teclado
   _set_PWM
     ___wmul

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14     14      14    100.0%
BANK0               80     57      74     92.5%
BANK1               80      0      32     40.0%
BANK3               96      0       0      0.0%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     120      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Fri Feb 14 11:17:57 2025

                                pc 0002                                 l80 03B2  
                               l74 0401                                 l83 04FD  
                               l92 03BE                                 l77 03CB  
                               l86 03DC                                 l89 03B4  
                               l98 04CC                       ___awdiv@sign 0075  
                               fsr 0004                ___wmul@multiplicand 0072  
                              l101 041D                                l110 051D  
                              l111 0527                                l104 0439  
                              l112 052D                                l113 0533  
                              l114 0539                                l115 0543  
                              l203 048E                                l108 0511  
                              l117 054A                                l109 0517  
                              l205 04A6                                l356 0604  
                              l710 0481                                l704 07EA  
                              l369 05A1                                l740 039E  
                              l717 03ED                                l729 0704  
                              l666 045C                                _PR2 0092  
                              u610 05D1                                u611 05D0  
                              u605 05C5                                u630 05E2  
                              u710 0576                                u631 05E1  
                              u711 0575                                u720 0580  
                              u800 06E9                                u625 05D2  
                              u721 057F                                u705 056A  
                              u650 05F6                                u570 05A7  
                              u810 03E1                                u651 05F5  
                              u635 05DE                                u571 05A6  
                              u811 03E0                                u660 05FB  
                              u580 05B2                                u740 0593  
                              u900 07A2                                u820 0715  
                              u661 05FA                                u645 05EA  
                              u581 05B1                                u741 0592  
                              u725 057C                                u901 07A1  
                              u821 0714                                u590 05C1  
                              u750 0598                                u670 0550  
                              u910 07C9                                u830 0731  
                              u591 05C0                                u751 0597  
                              u735 0587                                u671 054F  
                              u911 07C8                                u831 0730  
                              u920 03BA                                u680 055B  
                              u760 0671                                u840 073D  
                              u921 03B9                                u681 055A  
                              u761 0670                                u841 073C  
                              u690 0566                                u770 0677  
                              u850 0757                                u930 047D  
                              u691 0565                                u771 0676  
                              u851 0755                                u931 047C  
                              u940 04CC                                u780 0696  
                              u860 0758                                u941 04CB  
                              u781 0695                                u790 06C8  
                              u870 0793                                u950 0488  
                              u791 06C7                                u871 0792  
                              u951 0487                                u880 0798  
                              u881 0797                                u890 079D  
                              u795 06C4                                u891 079C  
                              u980 04A2                                u981 04A1  
                              u965 048F                                u975 0496  
                              u995 04F4        __end_of_enviarSequenciaUART 041E  
                              _abs 03DD                                fsr0 0004  
                              indf 0000                       ___awmod@sign 0075  
                             l1100 054B                               l1110 055B  
                             l1102 054C                               l1120 0572  
                             l1112 0560                               l1104 0550  
                             l1200 07C3                               l1122 0576  
                             l1114 0566                               l1130 0593  
                             l1106 0555                               l1202 07CA  
                             ?_abs 0076                               l1212 03B4  
                             l1060 05A7                               l1132 0598  
                             l1124 0580                               l1116 0569  
                             l1108 0557                               l1140 0671  
                             l1220 0471                               l1300 0525  
                             l1214 03BA                               l1230 04B6  
                             l1070 05B9                               l1062 05AC  
                             l1134 059D                               l1126 0586  
                             l1118 0570                               l1142 0677  
                             l1206 07D1                               l1222 047D  
                             l1310 0547                               l1302 052B  
                             l1320 03F8                               l1232 04BC  
                             l1080 05CD                               l1072 05BB  
                             l1064 05AE                               l1056 05A2  
                             l1128 058D                               l1152 03DD  
                             l1144 067E                               l1160 0705  
                             l1216 045D                               l1240 0444  
                             l1312 0549                               l1304 0531  
                             l1330 03FF                               l1322 03F9  
                             l1226 04A7                               l1090 05F0  
                             l1082 05D1                               l1074 05C1  
                             l1066 05B2                               l1058 05A3  
                             l1154 03E1                               l1146 0696  
                             l1138 066B                               l1170 0725  
                             l1162 0715                               l1218 0462  
                             l1242 0446                               l1234 043A  
                             l1306 0537                               l1250 0484  
                             l1332 0400                               l1324 03FA  
                             l1316 03EF                               l1228 04A8  
                             l1084 05E2                               l1076 05C4  
                             l1092 05F6                               l1068 05B7  
                             l1156 03E2                               l1148 06C8  
                             l1180 0752                               l1172 0731  
                             l1164 0719                               l1244 0453  
                             l1236 043E                               l1308 0541  
                             l1252 0488                               l1340 0616  
                             l1262 03A7                               l1270 03CC  
                             l1326 03FC                               l1318 03F5  
                             l1334 0402                               l1094 05FB  
                             l1086 05E8                               l1078 05CB  
                             l1190 0798                               l1182 0759  
                             l1174 073D                               l1166 071D  
                             l1238 0442                               l1254 0495  
                             l1350 0631                               l1342 061F  
                             l1264 03AB                               l1272 03C0  
                             l1328 03FE                               l1096 0600  
                             l1088 05E9                               l1192 079D  
                             l1184 0778                               l1176 074B  
                             l1168 0721                               l1256 049C  
                             l1248 0482                               l1280 04CE  
                             l1360 0654                               l1352 0639  
                             l1344 0625                               l1336 0605  
                             l1266 03AE                               l1274 03C4  
                             l1194 07A2                               l1186 078D  
                             l1178 0750                               l1290 050A  
                             l1258 04A2                               l1282 04E2  
                             l1362 0656                               l1354 063E  
                             l1346 0626                               l1338 060C  
                             l1268 03B0                               l1276 03C7  
                             l1196 07AB                               l1188 0793  
                             l1292 050B                               l1284 04F0  
                             l1364 065A                               l1356 0643  
                             l1348 062C                               l1198 07BF  
                             l1286 041E                               l1294 050F  
                             l1366 065F                               l1358 064B  
                             l1296 0515                               l1288 04FE  
                             l1298 051B                               STR_1 0013  
                             STR_2 003F                               STR_3 002B  
                             u1000 050A                               u1001 0509  
                             u1010 050F                               u1011 050E  
                             u1020 0515                               u1100 0625  
                             u1021 0514                               u1101 0624  
                             u1030 051B                               u1110 063E  
                             u1031 051A                               u1111 063D  
                             u1040 0525                               u1120 0643  
                             u1041 0524                               u1121 0642  
                             u1050 052B                               u1051 052A  
                             u1060 0531                               u1061 0530  
                             u1070 0537                               u1071 0536  
                             u1080 0541                               u1081 0540  
                             u1090 0547                               u1091 0546  
                   ??_eeprom_write 0071                               abs@a 0076  
                             _dbuf 00A0                               _main 0605  
                             _prec 005B                               btemp 007E  
                             start 0000    enviarVelocidadeAtualUART@buffer 0044  
              eeprom_read@endereco 0070                              ??_abs 0078  
                     ?_ler_teclado 0070                              ?_main 0070  
                  __end_of___awdiv 0605                              _EEADR 010D  
                  __end_of___awmod 05A2                    ___awdiv@divisor 0070  
                            _T2CON 0012                    ___awdiv@counter 0074  
                     vfpfcnvrt@fmt 0022                              _SPBRG 0099  
                            _TRISB 0086                              _TRISD 0088  
                            _TXREG 0019                              _flags 005D  
                            _fputc 066B                              _width 0059  
                            _putch 039E                    __end_of_set_PWM 04FE  
                            pclath 000A                      ?_enviarString 0071  
                            status 0003                              wtemp0 007E  
                  __end_of_sprintf 045D                    __initialization 07EB  
                     __end_of_main 066B                        enviarChar@c 0070  
__end_of_enviarVelocidadeAtualUART 043A                   _velocidade_atual 0069  
                 ler_teclado@tecla 0070                             ??_main 007E  
                           ?_fputc 0070                             _EEDATA 010C  
                           _CCPR1L 0015                             _EECON2 018D  
                 ___awdiv@dividend 0072                             ?_putch 0070  
                   ??_enviarString 0073                      vfpfcnvrt@done 0026  
                     vfprintf@cfmt 007D                             ___wmul 0482  
                        ??___awdiv 0074                          ??___awmod 0074  
                 ___awdiv@quotient 0076                    ___awmod@divisor 0070  
             __end_of_eeprom_write 0402                    ___awmod@counter 0074  
                           fputc@c 0070                          ??_set_PWM 0076  
                           putch@c 0070                   __end_of_vfprintf 0482  
                        ??_sprintf 0035            __end_of__initialization 07FC  
                   __pcstackCOMMON 0070                      __end_of_fputc 0705  
                    __end_of_putch 039F                            ??_fputc 0074  
                          ??_putch 0070                         __pbssBANK0 0059  
                       __pbssBANK1 00A0                         __pmaintext 0605  
                          ?___wmul 0070                            _CCP1CON 0017  
             __end_of_enviarString 04CD                         _config_PWM 03A7  
             eeprom_write@endereco 0071                         __stringtab 0003  
                       _enviarChar 03B3                  set_PWM@duty_cycle 0079  
                          ___awdiv 05A2                            ___awmod 054B  
                        ?_vfprintf 002D                            __ptext1 04CD  
                          __ptext2 0482                            __ptext3 04FE  
                          __ptext4 041E                            __ptext5 043A  
                          __ptext6 045D                            __ptext7 0705  
                          __ptext8 066B                            __ptext9 039E  
                 ___awmod@dividend 0072                            _set_PWM 04CD  
                          _posicao 005E                            _sprintf 043A  
                          clrloop0 03A0               end_of_initialization 07FC  
                          fputc@fp 0072                  set_PWM@velocidade 0078  
                     _eeprom_write 03EE                  __end_of_vfpfcnvrt 07EB  
                        _RCSTAbits 0018                   vfpfcnvrt@convarg 0028  
                       ??_vfprintf 007D         ?_enviarVelocidadeAtualUART 0070  
                        _PORTBbits 0006                          _PORTDbits 0008  
                      ?_config_PWM 0070                          _TRISCbits 0087  
                    ??_eeprom_read 0070                      ??_config_UART 0070  
                        _TXSTAbits 0098                        ?_enviarChar 0070  
                      vfpfcnvrt@ap 0023                        vfpfcnvrt@cp 0027  
                      vfpfcnvrt@fp 0020                     __end_of___wmul 04A7  
              start_initialization 07EB                        __end_of_abs 03EE  
                     _enviarString 04A7                        vfprintf@fmt 002F  
                         ??___wmul 0074                __end_of_eeprom_read 03CC  
              __end_of_config_UART 03DD                      ??_ler_teclado 0070  
              _enviarSequenciaUART 0402                      enviarString@s 0071  
                        ___latbits 0002                      __pcstackBANK0 0020  
             ?_enviarSequenciaUART 0070                   eeprom_write@dado 0070  
                        __pnvBANK0 0069                           ?___awdiv 0070  
                         ?___awmod 0070                          __pstrings 0003  
              __end_of_ler_teclado 054B                           ?_set_PWM 0070  
            ??_enviarSequenciaUART 0073                           ?_sprintf 0031  
                   ___wmul@product 0074                          clear_ram0 039F  
                      _eeprom_read 03BF                        _config_UART 03CC  
                        _sequencia 005F                          _vfpfcnvrt 0705  
      ??_enviarVelocidadeAtualUART 0042                        __stringbase 0012  
                ___wmul@multiplier 0070                       ??_config_PWM 0070  
                        main@tecla 0058                         vfpfcnvrt@c 002C  
                       _EECON1bits 018C                       ??_enviarChar 0070  
                       vfprintf@ap 0030                         vfprintf@fp 002D  
               __end_of_config_PWM 03B3                        _ler_teclado 04FE  
                       ?_vfpfcnvrt 0020                 __end_of__stringtab 0013  
                       sprintf@fmt 0032                 __end_of_enviarChar 03BF  
                         __ptext10 03DD                           __ptext11 054B  
                         __ptext12 05A2                           __ptext13 0402  
                         __ptext14 04A7                           __ptext15 03B3  
                         __ptext16 03EE                           __ptext17 03BF  
                         __ptext18 03CC                           __ptext19 03A7  
        _enviarVelocidadeAtualUART 041E                           _vfprintf 045D  
                       _INTCONbits 000B                          sprintf@ap 0036  
                        stringcode 000D                        ??_vfpfcnvrt 0024  
                         sprintf@f 0037                           sprintf@s 0031  
                         stringdir 000D                           stringtab 0003  
                    ?_eeprom_write 0070                       ?_eeprom_read 0070  
                     ?_config_UART 0070  
