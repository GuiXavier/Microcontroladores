

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Wed Jan 29 22:14:05 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F877
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     9                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2,group=1
    16                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2,group=1
    17                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20     0000                     
    21                           ; Generated 12/10/2023 GMT
    22                           ; 
    23                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F877 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55     0004                     fsr             equ	4
    56     0004                     fsr0            equ	4
    57     0000                     indf            equ	0
    58     0000                     indf0           equ	0
    59     0002                     pc              equ	2
    60     0002                     pcl             equ	2
    61     000A                     pclath          equ	10
    62     0003                     status          equ	3
    63     0000                     INDF            equ	0	;# 
    64     0001                     TMR0            equ	1	;# 
    65     0002                     PCL             equ	2	;# 
    66     0003                     STATUS          equ	3	;# 
    67     0004                     FSR             equ	4	;# 
    68     0005                     PORTA           equ	5	;# 
    69     0006                     PORTB           equ	6	;# 
    70     0007                     PORTC           equ	7	;# 
    71     0008                     PORTD           equ	8	;# 
    72     0009                     PORTE           equ	9	;# 
    73     000A                     PCLATH          equ	10	;# 
    74     000B                     INTCON          equ	11	;# 
    75     000C                     PIR1            equ	12	;# 
    76     000D                     PIR2            equ	13	;# 
    77     000E                     TMR1            equ	14	;# 
    78     000E                     TMR1L           equ	14	;# 
    79     000F                     TMR1H           equ	15	;# 
    80     0010                     T1CON           equ	16	;# 
    81     0011                     TMR2            equ	17	;# 
    82     0012                     T2CON           equ	18	;# 
    83     0013                     SSPBUF          equ	19	;# 
    84     0014                     SSPCON          equ	20	;# 
    85     0015                     CCPR1           equ	21	;# 
    86     0015                     CCPR1L          equ	21	;# 
    87     0016                     CCPR1H          equ	22	;# 
    88     0017                     CCP1CON         equ	23	;# 
    89     0018                     RCSTA           equ	24	;# 
    90     0019                     TXREG           equ	25	;# 
    91     001A                     RCREG           equ	26	;# 
    92     001B                     CCPR2           equ	27	;# 
    93     001B                     CCPR2L          equ	27	;# 
    94     001C                     CCPR2H          equ	28	;# 
    95     001D                     CCP2CON         equ	29	;# 
    96     001E                     ADRESH          equ	30	;# 
    97     001F                     ADCON0          equ	31	;# 
    98     0081                     OPTION_REG      equ	129	;# 
    99     0085                     TRISA           equ	133	;# 
   100     0086                     TRISB           equ	134	;# 
   101     0087                     TRISC           equ	135	;# 
   102     0088                     TRISD           equ	136	;# 
   103     0089                     TRISE           equ	137	;# 
   104     008C                     PIE1            equ	140	;# 
   105     008D                     PIE2            equ	141	;# 
   106     008E                     PCON            equ	142	;# 
   107     0091                     SSPCON2         equ	145	;# 
   108     0092                     PR2             equ	146	;# 
   109     0093                     SSPADD          equ	147	;# 
   110     0094                     SSPSTAT         equ	148	;# 
   111     0098                     TXSTA           equ	152	;# 
   112     0099                     SPBRG           equ	153	;# 
   113     009E                     ADRESL          equ	158	;# 
   114     009F                     ADCON1          equ	159	;# 
   115     010C                     EEDATA          equ	268	;# 
   116     010D                     EEADR           equ	269	;# 
   117     010E                     EEDATH          equ	270	;# 
   118     010F                     EEADRH          equ	271	;# 
   119     018C                     EECON1          equ	396	;# 
   120     018D                     EECON2          equ	397	;# 
   121     0000                     INDF            equ	0	;# 
   122     0001                     TMR0            equ	1	;# 
   123     0002                     PCL             equ	2	;# 
   124     0003                     STATUS          equ	3	;# 
   125     0004                     FSR             equ	4	;# 
   126     0005                     PORTA           equ	5	;# 
   127     0006                     PORTB           equ	6	;# 
   128     0007                     PORTC           equ	7	;# 
   129     0008                     PORTD           equ	8	;# 
   130     0009                     PORTE           equ	9	;# 
   131     000A                     PCLATH          equ	10	;# 
   132     000B                     INTCON          equ	11	;# 
   133     000C                     PIR1            equ	12	;# 
   134     000D                     PIR2            equ	13	;# 
   135     000E                     TMR1            equ	14	;# 
   136     000E                     TMR1L           equ	14	;# 
   137     000F                     TMR1H           equ	15	;# 
   138     0010                     T1CON           equ	16	;# 
   139     0011                     TMR2            equ	17	;# 
   140     0012                     T2CON           equ	18	;# 
   141     0013                     SSPBUF          equ	19	;# 
   142     0014                     SSPCON          equ	20	;# 
   143     0015                     CCPR1           equ	21	;# 
   144     0015                     CCPR1L          equ	21	;# 
   145     0016                     CCPR1H          equ	22	;# 
   146     0017                     CCP1CON         equ	23	;# 
   147     0018                     RCSTA           equ	24	;# 
   148     0019                     TXREG           equ	25	;# 
   149     001A                     RCREG           equ	26	;# 
   150     001B                     CCPR2           equ	27	;# 
   151     001B                     CCPR2L          equ	27	;# 
   152     001C                     CCPR2H          equ	28	;# 
   153     001D                     CCP2CON         equ	29	;# 
   154     001E                     ADRESH          equ	30	;# 
   155     001F                     ADCON0          equ	31	;# 
   156     0081                     OPTION_REG      equ	129	;# 
   157     0085                     TRISA           equ	133	;# 
   158     0086                     TRISB           equ	134	;# 
   159     0087                     TRISC           equ	135	;# 
   160     0088                     TRISD           equ	136	;# 
   161     0089                     TRISE           equ	137	;# 
   162     008C                     PIE1            equ	140	;# 
   163     008D                     PIE2            equ	141	;# 
   164     008E                     PCON            equ	142	;# 
   165     0091                     SSPCON2         equ	145	;# 
   166     0092                     PR2             equ	146	;# 
   167     0093                     SSPADD          equ	147	;# 
   168     0094                     SSPSTAT         equ	148	;# 
   169     0098                     TXSTA           equ	152	;# 
   170     0099                     SPBRG           equ	153	;# 
   171     009E                     ADRESL          equ	158	;# 
   172     009F                     ADCON1          equ	159	;# 
   173     010C                     EEDATA          equ	268	;# 
   174     010D                     EEADR           equ	269	;# 
   175     010E                     EEDATH          equ	270	;# 
   176     010F                     EEADRH          equ	271	;# 
   177     018C                     EECON1          equ	396	;# 
   178     018D                     EECON2          equ	397	;# 
   179     0006                     _PORTBbits      set	6
   180     0009                     _PORTEbits      set	9
   181     0008                     _PORTD          set	8
   182     0086                     _TRISB          set	134
   183     0089                     _TRISE          set	137
   184     0088                     _TRISD          set	136
   185                           
   186                           	psect	strings
   187     0003                     __pstrings:
   188     0003                     stringtab:
   189     0003                     __stringtab:
   190                           
   191                           ;	String table - string pointers are 1 byte each
   192     0003  1BFF               	btfsc	btemp+1,7
   193     0004  280D               	ljmp	stringcode
   194     0005  1383               	bcf	3,7
   195     0006  187F               	btfsc	btemp+1,0
   196     0007  1783               	bsf	3,7
   197     0008  0800               	movf	0,w
   198     0009  0A84               	incf	4,f
   199     000A  1903               	skipnz
   200     000B  0AFF               	incf	btemp+1,f
   201     000C  0008               	return
   202     000D                     stringcode:
   203     000D                     stringdir:
   204     000D  3000               	movlw	high stringdir
   205     000E  008A               	movwf	10
   206     000F  0804               	movf	4,w
   207     0010  0A84               	incf	4,f
   208     0011  0782               	addwf	2,f
   209     0012                     __stringbase:
   210     0012  3400               	retlw	0
   211     0013                     __end_of__stringtab:
   212     0013                     STR_1:
   213     0013  3443               	retlw	67	;'C'
   214     0014  346F               	retlw	111	;'o'
   215     0015  346E               	retlw	110	;'n'
   216     0016  3474               	retlw	116	;'t'
   217     0017  3461               	retlw	97	;'a'
   218     0018  3464               	retlw	100	;'d'
   219     0019  346F               	retlw	111	;'o'
   220     001A  3472               	retlw	114	;'r'
   221     001B  343A               	retlw	58	;':'
   222     001C  3400               	retlw	0
   223                           
   224                           	psect	cinit
   225     07F3                     start_initialization:	
   226                           ; #config settings
   227                           
   228     07F3                     __initialization:
   229                           
   230                           ; Clear objects allocated to BANK0
   231     07F3  1283               	bcf	3,5	;RP0=0, select bank0
   232     07F4  1303               	bcf	3,6	;RP1=0, select bank0
   233     07F5  01A0               	clrf	__pbssBANK0& (0+127)
   234     07F6  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   235     07F7  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   236     07F8  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   237     07F9  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   238     07FA  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   239     07FB  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   240     07FC                     end_of_initialization:	
   241                           ;End of C runtime variable initialization code
   242                           
   243     07FC                     __end_of__initialization:
   244     07FC  0183               	clrf	3
   245     07FD  120A  118A  2F30   	ljmp	_main	;jump to C main() function
   246                           
   247                           	psect	bssBANK0
   248     0020                     __pbssBANK0:
   249     0020                     _contador:
   250     0020                     	ds	2
   251     0022                     _buffer:
   252     0022                     	ds	5
   253                           
   254                           	psect	cstackCOMMON
   255     0070                     __pcstackCOMMON:
   256     0070                     ?_lcd_command:
   257     0070                     ?_lcd_data:	
   258                           ; 1 bytes @ 0x0
   259                           
   260     0070                     ?_lcd_initialise:	
   261                           ; 1 bytes @ 0x0
   262                           
   263     0070                     ?_exibir_contador_LCD:	
   264                           ; 1 bytes @ 0x0
   265                           
   266     0070                     ?_debounce:	
   267                           ; 1 bytes @ 0x0
   268                           
   269     0070                     ?_main:	
   270                           ; 1 bytes @ 0x0
   271                           
   272     0070                     ?___lwdiv:	
   273                           ; 1 bytes @ 0x0
   274                           
   275     0070                     ___lwdiv@divisor:	
   276                           ; 2 bytes @ 0x0
   277                           
   278     0070                     ??_lcd_command:	
   279                           ; 2 bytes @ 0x0
   280                           
   281     0070                     ??_lcd_data:	
   282                           ; 1 bytes @ 0x0
   283                           
   284     0070                     ??_debounce:	
   285                           ; 1 bytes @ 0x0
   286                           
   287                           
   288                           ; 1 bytes @ 0x0
   289     0070                     	ds	2
   290     0072                     lcd_command@cmd:
   291     0072                     lcd_data@data:	
   292                           ; 1 bytes @ 0x2
   293                           
   294     0072                     ___lwdiv@dividend:	
   295                           ; 1 bytes @ 0x2
   296                           
   297                           
   298                           ; 2 bytes @ 0x2
   299     0072                     	ds	1
   300     0073                     ?_lcd_string:
   301     0073                     debounce@botao:	
   302                           ; 1 bytes @ 0x3
   303                           
   304     0073                     lcd_string@str:	
   305                           ; 1 bytes @ 0x3
   306                           
   307     0073                     ??_lcd_initialise:	
   308                           ; 2 bytes @ 0x3
   309                           
   310                           
   311                           ; 1 bytes @ 0x3
   312     0073                     	ds	1
   313     0074                     ___lwdiv@quotient:
   314     0074                     ??___lwdiv:	
   315                           ; 2 bytes @ 0x4
   316                           
   317                           
   318                           ; 1 bytes @ 0x4
   319     0074                     	ds	1
   320     0075                     ??_lcd_string:
   321                           
   322                           ; 1 bytes @ 0x5
   323     0075                     	ds	1
   324     0076                     ___lwdiv@counter:
   325                           
   326                           ; 1 bytes @ 0x6
   327     0076                     	ds	1
   328     0077                     ?___lwmod:
   329     0077                     ___lwmod@divisor:	
   330                           ; 2 bytes @ 0x7
   331                           
   332                           
   333                           ; 2 bytes @ 0x7
   334     0077                     	ds	2
   335     0079                     ___lwmod@dividend:
   336                           
   337                           ; 2 bytes @ 0x9
   338     0079                     	ds	2
   339     007B                     ___lwmod@counter:
   340     007B                     ??___lwmod:	
   341                           ; 1 bytes @ 0xB
   342                           
   343                           
   344                           ; 1 bytes @ 0xB
   345     007B                     	ds	1
   346     007C                     ?_formata_contador:
   347     007C                     formata_contador@contador:	
   348                           ; 1 bytes @ 0xC
   349                           
   350                           
   351                           ; 2 bytes @ 0xC
   352     007C                     	ds	2
   353     007E                     ??_formata_contador:
   354     007E                     ??_exibir_contador_LCD:	
   355                           ; 1 bytes @ 0xE
   356                           
   357     007E                     ??_main:	
   358                           ; 1 bytes @ 0xE
   359                           
   360                           
   361                           	psect	maintext
   362     0730                     __pmaintext:	
   363                           ; 1 bytes @ 0xE
   364 ;;
   365 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   366 ;;
   367 ;; *************** function _main *****************
   368 ;; Defined at:
   369 ;;		line 81 in file "atividade9b.c"
   370 ;; Parameters:    Size  Location     Type
   371 ;;		None
   372 ;; Auto vars:     Size  Location     Type
   373 ;;		None
   374 ;; Return value:  Size  Location     Type
   375 ;;                  1    wreg      void 
   376 ;; Registers used:
   377 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   378 ;; Tracked objects:
   379 ;;		On entry : B00/0
   380 ;;		On exit  : 0/0
   381 ;;		Unchanged: 0/0
   382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   383 ;;      Params:         0       0       0       0       0
   384 ;;      Locals:         0       0       0       0       0
   385 ;;      Temps:          0       0       0       0       0
   386 ;;      Totals:         0       0       0       0       0
   387 ;;Total ram usage:        0 bytes
   388 ;; Hardware stack levels required when called: 3
   389 ;; This function calls:
   390 ;;		_debounce
   391 ;;		_exibir_contador_LCD
   392 ;;		_lcd_initialise
   393 ;; This function is called by:
   394 ;;		Startup code after reset
   395 ;; This function uses a non-reentrant model
   396 ;;
   397                           
   398     0730                     _main:	
   399                           ;psect for function _main
   400                           
   401     0730                     l832:	
   402                           ;incstack = 0
   403                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   404                           
   405                           
   406                           ;atividade9b.c: 83:     TRISD = 0x00;
   407     0730  1683               	bsf	3,5	;RP0=1, select bank1
   408     0731  1303               	bcf	3,6	;RP1=0, select bank1
   409     0732  0188               	clrf	8	;volatile
   410                           
   411                           ;atividade9b.c: 84:     TRISE = 0x00;
   412     0733  0189               	clrf	9	;volatile
   413     0734                     l834:
   414                           
   415                           ;atividade9b.c: 85:     TRISB = 0xFF;
   416     0734  30FF               	movlw	255
   417     0735  0086               	movwf	6	;volatile
   418     0736                     l836:
   419                           
   420                           ;atividade9b.c: 87:     lcd_initialise();
   421     0736  120A  118A  2644  120A  118A  	fcall	_lcd_initialise
   422     073B                     l838:
   423                           
   424                           ;atividade9b.c: 88:     exibir_contador_LCD();
   425     073B  120A  118A  268C  120A  118A  	fcall	_exibir_contador_LCD
   426     0740                     l840:
   427                           
   428                           ;atividade9b.c: 92:         if (debounce(PORTBbits.RB0)) {
   429     0740  1283               	bcf	3,5	;RP0=0, select bank0
   430     0741  1303               	bcf	3,6	;RP1=0, select bank0
   431     0742  0806               	movf	6,w	;volatile
   432     0743  3901               	andlw	1
   433     0744  120A  118A  2628  120A  118A  	fcall	_debounce
   434     0749  3A00               	xorlw	0
   435     074A  1903               	skipnz
   436     074B  2F4D               	goto	u371
   437     074C  2F4E               	goto	u370
   438     074D                     u371:
   439     074D  2F61               	goto	l846
   440     074E                     u370:
   441     074E                     l842:
   442                           
   443                           ;atividade9b.c: 93:             contador++;
   444     074E  3001               	movlw	1
   445     074F  1283               	bcf	3,5	;RP0=0, select bank0
   446     0750  1303               	bcf	3,6	;RP1=0, select bank0
   447     0751  07A0               	addwf	_contador,f
   448     0752  1803               	skipnc
   449     0753  0AA1               	incf	_contador+1,f
   450     0754  3000               	movlw	0
   451     0755  07A1               	addwf	_contador+1,f
   452     0756                     l844:
   453                           
   454                           ;atividade9b.c: 94:             exibir_contador_LCD();
   455     0756  120A  118A  268C  120A  118A  	fcall	_exibir_contador_LCD
   456     075B                     l51:	
   457                           ;atividade9b.c: 95:             while (PORTBbits.RB0);
   458                           
   459     075B  1283               	bcf	3,5	;RP0=0, select bank0
   460     075C  1303               	bcf	3,6	;RP1=0, select bank0
   461     075D  1806               	btfsc	6,0	;volatile
   462     075E  2F60               	goto	u381
   463     075F  2F61               	goto	u380
   464     0760                     u381:
   465     0760  2F5B               	goto	l51
   466     0761                     u380:
   467     0761                     l846:
   468                           
   469                           ;atividade9b.c: 99:         if (debounce(PORTBbits.RB1)) {
   470     0761  1283               	bcf	3,5	;RP0=0, select bank0
   471     0762  1303               	bcf	3,6	;RP1=0, select bank0
   472     0763  0C06               	rrf	6,w	;volatile
   473     0764  3901               	andlw	1
   474     0765  120A  118A  2628  120A  118A  	fcall	_debounce
   475     076A  3A00               	xorlw	0
   476     076B  1903               	skipnz
   477     076C  2F6E               	goto	u391
   478     076D  2F6F               	goto	u390
   479     076E                     u391:
   480     076E  2F40               	goto	l840
   481     076F                     u390:
   482     076F                     l848:
   483                           
   484                           ;atividade9b.c: 100:             contador = 0;
   485     076F  1283               	bcf	3,5	;RP0=0, select bank0
   486     0770  1303               	bcf	3,6	;RP1=0, select bank0
   487     0771  01A0               	clrf	_contador
   488     0772  01A1               	clrf	_contador+1
   489     0773                     l850:
   490                           
   491                           ;atividade9b.c: 101:             exibir_contador_LCD();
   492     0773  120A  118A  268C  120A  118A  	fcall	_exibir_contador_LCD
   493     0778                     l55:	
   494                           ;atividade9b.c: 102:             while (PORTBbits.RB1);
   495                           
   496     0778  1283               	bcf	3,5	;RP0=0, select bank0
   497     0779  1303               	bcf	3,6	;RP1=0, select bank0
   498     077A  1886               	btfsc	6,1	;volatile
   499     077B  2F7D               	goto	u401
   500     077C  2F7E               	goto	u400
   501     077D                     u401:
   502     077D  2F78               	goto	l55
   503     077E                     u400:
   504     077E  2F40               	goto	l840
   505     077F  120A  118A  2800   	ljmp	start
   506     0782                     __end_of_main:
   507                           
   508                           	psect	text1
   509     0644                     __ptext1:	
   510 ;; *************** function _lcd_initialise *****************
   511 ;; Defined at:
   512 ;;		line 38 in file "atividade9b.c"
   513 ;; Parameters:    Size  Location     Type
   514 ;;		None
   515 ;; Auto vars:     Size  Location     Type
   516 ;;		None
   517 ;; Return value:  Size  Location     Type
   518 ;;                  1    wreg      void 
   519 ;; Registers used:
   520 ;;		wreg, status,2, status,0, pclath, cstack
   521 ;; Tracked objects:
   522 ;;		On entry : 0/0
   523 ;;		On exit  : 0/0
   524 ;;		Unchanged: 0/0
   525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   526 ;;      Params:         0       0       0       0       0
   527 ;;      Locals:         0       0       0       0       0
   528 ;;      Temps:          2       0       0       0       0
   529 ;;      Totals:         2       0       0       0       0
   530 ;;Total ram usage:        2 bytes
   531 ;; Hardware stack levels used: 1
   532 ;; Hardware stack levels required when called: 1
   533 ;; This function calls:
   534 ;;		_lcd_command
   535 ;; This function is called by:
   536 ;;		_main
   537 ;; This function uses a non-reentrant model
   538 ;;
   539                           
   540     0644                     _lcd_initialise:	
   541                           ;psect for function _lcd_initialise
   542                           
   543     0644                     l804:	
   544                           ;incstack = 0
   545                           ; Regs used in _lcd_initialise: [wreg+status,2+status,0+pclath+cstack]
   546                           
   547                           
   548                           ;atividade9b.c: 39:     lcd_command(0x38);
   549     0644  3038               	movlw	56
   550     0645  120A  118A  2600  120A  118A  	fcall	_lcd_command
   551                           
   552                           ;atividade9b.c: 40:     lcd_command(0x0C);
   553     064A  300C               	movlw	12
   554     064B  120A  118A  2600  120A  118A  	fcall	_lcd_command
   555                           
   556                           ;atividade9b.c: 41:     lcd_command(0x06);
   557     0650  3006               	movlw	6
   558     0651  120A  118A  2600  120A  118A  	fcall	_lcd_command
   559                           
   560                           ;atividade9b.c: 42:     lcd_command(0x01);
   561     0656  3001               	movlw	1
   562     0657  120A  118A  2600  120A  118A  	fcall	_lcd_command
   563     065C                     l806:
   564                           
   565                           ;atividade9b.c: 43:     _delay((unsigned long)((2)*(20000000/4000.0)));
   566     065C  300D               	movlw	13
   567     065D  00F4               	movwf	??_lcd_initialise+1
   568     065E  30FB               	movlw	251
   569     065F  00F3               	movwf	??_lcd_initialise
   570     0660                     u417:
   571     0660  0BF3               	decfsz	??_lcd_initialise,f
   572     0661  2E60               	goto	u417
   573     0662  0BF4               	decfsz	??_lcd_initialise+1,f
   574     0663  2E60               	goto	u417
   575     0664  2E65               	nop2
   576     0665                     l27:
   577     0665  0008               	return
   578     0666                     __end_of_lcd_initialise:
   579                           
   580                           	psect	text2
   581     068C                     __ptext2:	
   582 ;; *************** function _exibir_contador_LCD *****************
   583 ;; Defined at:
   584 ;;		line 62 in file "atividade9b.c"
   585 ;; Parameters:    Size  Location     Type
   586 ;;		None
   587 ;; Auto vars:     Size  Location     Type
   588 ;;		None
   589 ;; Return value:  Size  Location     Type
   590 ;;                  1    wreg      void 
   591 ;; Registers used:
   592 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   593 ;; Tracked objects:
   594 ;;		On entry : 0/0
   595 ;;		On exit  : 0/0
   596 ;;		Unchanged: 0/0
   597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   598 ;;      Params:         0       0       0       0       0
   599 ;;      Locals:         0       0       0       0       0
   600 ;;      Temps:          0       0       0       0       0
   601 ;;      Totals:         0       0       0       0       0
   602 ;;Total ram usage:        0 bytes
   603 ;; Hardware stack levels used: 1
   604 ;; Hardware stack levels required when called: 2
   605 ;; This function calls:
   606 ;;		_formata_contador
   607 ;;		_lcd_command
   608 ;;		_lcd_string
   609 ;; This function is called by:
   610 ;;		_main
   611 ;; This function uses a non-reentrant model
   612 ;;
   613                           
   614     068C                     _exibir_contador_LCD:	
   615                           ;psect for function _exibir_contador_LCD
   616                           
   617     068C                     l808:	
   618                           ;incstack = 0
   619                           ; Regs used in _exibir_contador_LCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack
      +                          ]
   620                           
   621                           
   622                           ;atividade9b.c: 63:     lcd_command(0x80);
   623     068C  3080               	movlw	128
   624     068D  120A  118A  2600  120A  118A  	fcall	_lcd_command
   625     0692                     l810:
   626                           
   627                           ;atividade9b.c: 64:     lcd_string("Contador:");
   628     0692  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   629     0693  00F3               	movwf	lcd_string@str
   630     0694  3080               	movlw	128
   631     0695  00F4               	movwf	lcd_string@str+1
   632     0696  120A  118A  2666  120A  118A  	fcall	_lcd_string
   633     069B                     l812:
   634                           
   635                           ;atividade9b.c: 65:     lcd_command(0xC0);
   636     069B  30C0               	movlw	192
   637     069C  120A  118A  2600  120A  118A  	fcall	_lcd_command
   638     06A1                     l814:
   639                           
   640                           ;atividade9b.c: 66:     formata_contador(contador);
   641     06A1  1283               	bcf	3,5	;RP0=0, select bank0
   642     06A2  1303               	bcf	3,6	;RP1=0, select bank0
   643     06A3  0821               	movf	_contador+1,w
   644     06A4  00FD               	movwf	formata_contador@contador+1
   645     06A5  0820               	movf	_contador,w
   646     06A6  00FC               	movwf	formata_contador@contador
   647     06A7  120A  118A  2782  120A  118A  	fcall	_formata_contador
   648     06AC                     l816:
   649                           
   650                           ;atividade9b.c: 67:     lcd_string(buffer);
   651     06AC  3022               	movlw	(low (_buffer| 0))& (0+255)
   652     06AD  00F3               	movwf	lcd_string@str
   653     06AE  3000               	movlw	0
   654     06AF  00F4               	movwf	lcd_string@str+1
   655     06B0  120A  118A  2666  120A  118A  	fcall	_lcd_string
   656     06B5                     l39:
   657     06B5  0008               	return
   658     06B6                     __end_of_exibir_contador_LCD:
   659                           
   660                           	psect	text3
   661     0666                     __ptext3:	
   662 ;; *************** function _lcd_string *****************
   663 ;; Defined at:
   664 ;;		line 46 in file "atividade9b.c"
   665 ;; Parameters:    Size  Location     Type
   666 ;;  str             2    3[COMMON] PTR const unsigned char 
   667 ;;		 -> STR_1(10), buffer(5), 
   668 ;; Auto vars:     Size  Location     Type
   669 ;;		None
   670 ;; Return value:  Size  Location     Type
   671 ;;                  1    wreg      void 
   672 ;; Registers used:
   673 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   674 ;; Tracked objects:
   675 ;;		On entry : 0/0
   676 ;;		On exit  : 0/0
   677 ;;		Unchanged: 0/0
   678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   679 ;;      Params:         2       0       0       0       0
   680 ;;      Locals:         0       0       0       0       0
   681 ;;      Temps:          0       0       0       0       0
   682 ;;      Totals:         2       0       0       0       0
   683 ;;Total ram usage:        2 bytes
   684 ;; Hardware stack levels used: 1
   685 ;; Hardware stack levels required when called: 1
   686 ;; This function calls:
   687 ;;		_lcd_data
   688 ;; This function is called by:
   689 ;;		_exibir_contador_LCD
   690 ;; This function uses a non-reentrant model
   691 ;;
   692                           
   693     0666                     _lcd_string:	
   694                           ;psect for function _lcd_string
   695                           
   696     0666                     l792:	
   697                           ;incstack = 0
   698                           ; Regs used in _lcd_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   699                           
   700                           
   701                           ;atividade9b.c: 47:     while (*str) {
   702     0666  2E7B               	goto	l798
   703     0667                     l794:
   704                           
   705                           ;atividade9b.c: 48:         lcd_data(*str++);
   706     0667  0874               	movf	lcd_string@str+1,w
   707     0668  00FF               	movwf	btemp+1
   708     0669  0873               	movf	lcd_string@str,w
   709     066A  0084               	movwf	4
   710     066B  120A  118A  2003  120A  118A  	fcall	stringtab
   711     0670  120A  118A  2614  120A  118A  	fcall	_lcd_data
   712     0675                     l796:
   713     0675  3001               	movlw	1
   714     0676  07F3               	addwf	lcd_string@str,f
   715     0677  1803               	skipnc
   716     0678  0AF4               	incf	lcd_string@str+1,f
   717     0679  3000               	movlw	0
   718     067A  07F4               	addwf	lcd_string@str+1,f
   719     067B                     l798:
   720                           
   721                           ;atividade9b.c: 47:     while (*str) {
   722     067B  0874               	movf	lcd_string@str+1,w
   723     067C  1283               	bcf	3,5	;RP0=0, select bank0
   724     067D  1303               	bcf	3,6	;RP1=0, select bank0
   725     067E  00FF               	movwf	btemp+1
   726     067F  0873               	movf	lcd_string@str,w
   727     0680  0084               	movwf	4
   728     0681  120A  118A  2003  120A  118A  	fcall	stringtab
   729     0686  3A00               	xorlw	0
   730     0687  1D03               	skipz
   731     0688  2E8A               	goto	u341
   732     0689  2E8B               	goto	u340
   733     068A                     u341:
   734     068A  2E67               	goto	l794
   735     068B                     u340:
   736     068B                     l33:
   737     068B  0008               	return
   738     068C                     __end_of_lcd_string:
   739                           
   740                           	psect	text4
   741     0614                     __ptext4:	
   742 ;; *************** function _lcd_data *****************
   743 ;; Defined at:
   744 ;;		line 30 in file "atividade9b.c"
   745 ;; Parameters:    Size  Location     Type
   746 ;;  data            1    wreg     unsigned char 
   747 ;; Auto vars:     Size  Location     Type
   748 ;;  data            1    2[COMMON] unsigned char 
   749 ;; Return value:  Size  Location     Type
   750 ;;                  1    wreg      void 
   751 ;; Registers used:
   752 ;;		wreg
   753 ;; Tracked objects:
   754 ;;		On entry : 0/0
   755 ;;		On exit  : 0/0
   756 ;;		Unchanged: 0/0
   757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   758 ;;      Params:         0       0       0       0       0
   759 ;;      Locals:         1       0       0       0       0
   760 ;;      Temps:          2       0       0       0       0
   761 ;;      Totals:         3       0       0       0       0
   762 ;;Total ram usage:        3 bytes
   763 ;; Hardware stack levels used: 1
   764 ;; This function calls:
   765 ;;		Nothing
   766 ;; This function is called by:
   767 ;;		_lcd_string
   768 ;; This function uses a non-reentrant model
   769 ;;
   770                           
   771     0614                     _lcd_data:	
   772                           ;psect for function _lcd_data
   773                           
   774                           
   775                           ;incstack = 0
   776                           ; Regs used in _lcd_data: [wreg]
   777                           ;lcd_data@data stored from wreg
   778     0614  00F2               	movwf	lcd_data@data
   779     0615                     l728:
   780                           
   781                           ;atividade9b.c: 31:     PORTD = data;
   782     0615  0872               	movf	lcd_data@data,w
   783     0616  1283               	bcf	3,5	;RP0=0, select bank0
   784     0617  1303               	bcf	3,6	;RP1=0, select bank0
   785     0618  0088               	movwf	8	;volatile
   786     0619                     l730:
   787                           
   788                           ;atividade9b.c: 32:     PORTEbits.RE0 = 1;
   789     0619  1409               	bsf	9,0	;volatile
   790     061A                     l732:
   791                           
   792                           ;atividade9b.c: 33:     PORTEbits.RE1 = 1;
   793     061A  1489               	bsf	9,1	;volatile
   794                           
   795                           ;atividade9b.c: 34:     _delay((unsigned long)((2)*(20000000/4000.0)));
   796     061B  300D               	movlw	13
   797     061C  00F1               	movwf	??_lcd_data+1
   798     061D  30FB               	movlw	251
   799     061E  00F0               	movwf	??_lcd_data
   800     061F                     u427:
   801     061F  0BF0               	decfsz	??_lcd_data,f
   802     0620  2E1F               	goto	u427
   803     0621  0BF1               	decfsz	??_lcd_data+1,f
   804     0622  2E1F               	goto	u427
   805     0623  2E24               	nop2
   806     0624                     l734:
   807                           
   808                           ;atividade9b.c: 35:     PORTEbits.RE1 = 0;
   809     0624  1283               	bcf	3,5	;RP0=0, select bank0
   810     0625  1303               	bcf	3,6	;RP1=0, select bank0
   811     0626  1089               	bcf	9,1	;volatile
   812     0627                     l24:
   813     0627  0008               	return
   814     0628                     __end_of_lcd_data:
   815                           
   816                           	psect	text5
   817     0600                     __ptext5:	
   818 ;; *************** function _lcd_command *****************
   819 ;; Defined at:
   820 ;;		line 22 in file "atividade9b.c"
   821 ;; Parameters:    Size  Location     Type
   822 ;;  cmd             1    wreg     unsigned char 
   823 ;; Auto vars:     Size  Location     Type
   824 ;;  cmd             1    2[COMMON] unsigned char 
   825 ;; Return value:  Size  Location     Type
   826 ;;                  1    wreg      void 
   827 ;; Registers used:
   828 ;;		wreg
   829 ;; Tracked objects:
   830 ;;		On entry : 0/0
   831 ;;		On exit  : 0/0
   832 ;;		Unchanged: 0/0
   833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   834 ;;      Params:         0       0       0       0       0
   835 ;;      Locals:         1       0       0       0       0
   836 ;;      Temps:          2       0       0       0       0
   837 ;;      Totals:         3       0       0       0       0
   838 ;;Total ram usage:        3 bytes
   839 ;; Hardware stack levels used: 1
   840 ;; This function calls:
   841 ;;		Nothing
   842 ;; This function is called by:
   843 ;;		_lcd_initialise
   844 ;;		_exibir_contador_LCD
   845 ;; This function uses a non-reentrant model
   846 ;;
   847                           
   848     0600                     _lcd_command:	
   849                           ;psect for function _lcd_command
   850                           
   851                           
   852                           ;incstack = 0
   853                           ; Regs used in _lcd_command: [wreg]
   854                           ;lcd_command@cmd stored from wreg
   855     0600  00F2               	movwf	lcd_command@cmd
   856     0601                     l784:
   857                           
   858                           ;atividade9b.c: 23:     PORTD = cmd;
   859     0601  0872               	movf	lcd_command@cmd,w
   860     0602  1283               	bcf	3,5	;RP0=0, select bank0
   861     0603  1303               	bcf	3,6	;RP1=0, select bank0
   862     0604  0088               	movwf	8	;volatile
   863     0605                     l786:
   864                           
   865                           ;atividade9b.c: 24:     PORTEbits.RE0 = 0;
   866     0605  1009               	bcf	9,0	;volatile
   867     0606                     l788:
   868                           
   869                           ;atividade9b.c: 25:     PORTEbits.RE1 = 1;
   870     0606  1489               	bsf	9,1	;volatile
   871                           
   872                           ;atividade9b.c: 26:     _delay((unsigned long)((2)*(20000000/4000.0)));
   873     0607  300D               	movlw	13
   874     0608  00F1               	movwf	??_lcd_command+1
   875     0609  30FB               	movlw	251
   876     060A  00F0               	movwf	??_lcd_command
   877     060B                     u437:
   878     060B  0BF0               	decfsz	??_lcd_command,f
   879     060C  2E0B               	goto	u437
   880     060D  0BF1               	decfsz	??_lcd_command+1,f
   881     060E  2E0B               	goto	u437
   882     060F  2E10               	nop2
   883     0610                     l790:
   884                           
   885                           ;atividade9b.c: 27:     PORTEbits.RE1 = 0;
   886     0610  1283               	bcf	3,5	;RP0=0, select bank0
   887     0611  1303               	bcf	3,6	;RP1=0, select bank0
   888     0612  1089               	bcf	9,1	;volatile
   889     0613                     l21:
   890     0613  0008               	return
   891     0614                     __end_of_lcd_command:
   892                           
   893                           	psect	text6
   894     0782                     __ptext6:	
   895 ;; *************** function _formata_contador *****************
   896 ;; Defined at:
   897 ;;		line 53 in file "atividade9b.c"
   898 ;; Parameters:    Size  Location     Type
   899 ;;  contador        2   12[COMMON] unsigned int 
   900 ;; Auto vars:     Size  Location     Type
   901 ;;		None
   902 ;; Return value:  Size  Location     Type
   903 ;;                  1    wreg      void 
   904 ;; Registers used:
   905 ;;		wreg, status,2, status,0, pclath, cstack
   906 ;; Tracked objects:
   907 ;;		On entry : 0/0
   908 ;;		On exit  : 0/0
   909 ;;		Unchanged: 0/0
   910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   911 ;;      Params:         2       0       0       0       0
   912 ;;      Locals:         0       0       0       0       0
   913 ;;      Temps:          0       0       0       0       0
   914 ;;      Totals:         2       0       0       0       0
   915 ;;Total ram usage:        2 bytes
   916 ;; Hardware stack levels used: 1
   917 ;; Hardware stack levels required when called: 1
   918 ;; This function calls:
   919 ;;		___lwdiv
   920 ;;		___lwmod
   921 ;; This function is called by:
   922 ;;		_exibir_contador_LCD
   923 ;; This function uses a non-reentrant model
   924 ;;
   925                           
   926     0782                     _formata_contador:	
   927                           ;psect for function _formata_contador
   928                           
   929     0782                     l800:	
   930                           ;incstack = 0
   931                           ; Regs used in _formata_contador: [wreg+status,2+status,0+pclath+cstack]
   932                           
   933                           
   934                           ;atividade9b.c: 54:     buffer[0] = (contador / 1000) % 10 + '0';
   935     0782  300A               	movlw	10
   936     0783  00F7               	movwf	___lwmod@divisor
   937     0784  3000               	movlw	0
   938     0785  00F8               	movwf	___lwmod@divisor+1
   939     0786  30E8               	movlw	232
   940     0787  00F0               	movwf	___lwdiv@divisor
   941     0788  3003               	movlw	3
   942     0789  00F1               	movwf	___lwdiv@divisor+1
   943     078A  087D               	movf	formata_contador@contador+1,w
   944     078B  00F3               	movwf	___lwdiv@dividend+1
   945     078C  087C               	movf	formata_contador@contador,w
   946     078D  00F2               	movwf	___lwdiv@dividend
   947     078E  120A  118A  26EE  120A  118A  	fcall	___lwdiv
   948     0793  0871               	movf	?___lwdiv+1,w
   949     0794  00FA               	movwf	___lwmod@dividend+1
   950     0795  0870               	movf	?___lwdiv,w
   951     0796  00F9               	movwf	___lwmod@dividend
   952     0797  120A  118A  26B6  120A  118A  	fcall	___lwmod
   953     079C  0877               	movf	?___lwmod,w
   954     079D  3E30               	addlw	48
   955     079E  1283               	bcf	3,5	;RP0=0, select bank0
   956     079F  1303               	bcf	3,6	;RP1=0, select bank0
   957     07A0  00A2               	movwf	_buffer
   958                           
   959                           ;atividade9b.c: 55:     buffer[1] = (contador / 100) % 10 + '0';
   960     07A1  300A               	movlw	10
   961     07A2  00F7               	movwf	___lwmod@divisor
   962     07A3  3000               	movlw	0
   963     07A4  00F8               	movwf	___lwmod@divisor+1
   964     07A5  3064               	movlw	100
   965     07A6  00F0               	movwf	___lwdiv@divisor
   966     07A7  3000               	movlw	0
   967     07A8  00F1               	movwf	___lwdiv@divisor+1
   968     07A9  087D               	movf	formata_contador@contador+1,w
   969     07AA  00F3               	movwf	___lwdiv@dividend+1
   970     07AB  087C               	movf	formata_contador@contador,w
   971     07AC  00F2               	movwf	___lwdiv@dividend
   972     07AD  120A  118A  26EE  120A  118A  	fcall	___lwdiv
   973     07B2  0871               	movf	?___lwdiv+1,w
   974     07B3  00FA               	movwf	___lwmod@dividend+1
   975     07B4  0870               	movf	?___lwdiv,w
   976     07B5  00F9               	movwf	___lwmod@dividend
   977     07B6  120A  118A  26B6  120A  118A  	fcall	___lwmod
   978     07BB  0877               	movf	?___lwmod,w
   979     07BC  3E30               	addlw	48
   980     07BD  1283               	bcf	3,5	;RP0=0, select bank0
   981     07BE  1303               	bcf	3,6	;RP1=0, select bank0
   982     07BF  00A3               	movwf	_buffer+1
   983                           
   984                           ;atividade9b.c: 56:     buffer[2] = (contador / 10) % 10 + '0';
   985     07C0  300A               	movlw	10
   986     07C1  00F7               	movwf	___lwmod@divisor
   987     07C2  3000               	movlw	0
   988     07C3  00F8               	movwf	___lwmod@divisor+1
   989     07C4  300A               	movlw	10
   990     07C5  00F0               	movwf	___lwdiv@divisor
   991     07C6  3000               	movlw	0
   992     07C7  00F1               	movwf	___lwdiv@divisor+1
   993     07C8  087D               	movf	formata_contador@contador+1,w
   994     07C9  00F3               	movwf	___lwdiv@dividend+1
   995     07CA  087C               	movf	formata_contador@contador,w
   996     07CB  00F2               	movwf	___lwdiv@dividend
   997     07CC  120A  118A  26EE  120A  118A  	fcall	___lwdiv
   998     07D1  0871               	movf	?___lwdiv+1,w
   999     07D2  00FA               	movwf	___lwmod@dividend+1
  1000     07D3  0870               	movf	?___lwdiv,w
  1001     07D4  00F9               	movwf	___lwmod@dividend
  1002     07D5  120A  118A  26B6  120A  118A  	fcall	___lwmod
  1003     07DA  0877               	movf	?___lwmod,w
  1004     07DB  3E30               	addlw	48
  1005     07DC  1283               	bcf	3,5	;RP0=0, select bank0
  1006     07DD  1303               	bcf	3,6	;RP1=0, select bank0
  1007     07DE  00A4               	movwf	_buffer+2
  1008                           
  1009                           ;atividade9b.c: 57:     buffer[3] = contador % 10 + '0';
  1010     07DF  300A               	movlw	10
  1011     07E0  00F7               	movwf	___lwmod@divisor
  1012     07E1  3000               	movlw	0
  1013     07E2  00F8               	movwf	___lwmod@divisor+1
  1014     07E3  087D               	movf	formata_contador@contador+1,w
  1015     07E4  00FA               	movwf	___lwmod@dividend+1
  1016     07E5  087C               	movf	formata_contador@contador,w
  1017     07E6  00F9               	movwf	___lwmod@dividend
  1018     07E7  120A  118A  26B6  120A  118A  	fcall	___lwmod
  1019     07EC  0877               	movf	?___lwmod,w
  1020     07ED  3E30               	addlw	48
  1021     07EE  1283               	bcf	3,5	;RP0=0, select bank0
  1022     07EF  1303               	bcf	3,6	;RP1=0, select bank0
  1023     07F0  00A5               	movwf	_buffer+3
  1024     07F1                     l802:
  1025                           
  1026                           ;atividade9b.c: 58:     buffer[4] = '\0';
  1027     07F1  01A6               	clrf	_buffer+4
  1028     07F2                     l36:
  1029     07F2  0008               	return
  1030     07F3                     __end_of_formata_contador:
  1031                           
  1032                           	psect	text7
  1033     06B6                     __ptext7:	
  1034 ;; *************** function ___lwmod *****************
  1035 ;; Defined at:
  1036 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\lwmod.c"
  1037 ;; Parameters:    Size  Location     Type
  1038 ;;  divisor         2    7[COMMON] unsigned int 
  1039 ;;  dividend        2    9[COMMON] unsigned int 
  1040 ;; Auto vars:     Size  Location     Type
  1041 ;;  counter         1   11[COMMON] unsigned char 
  1042 ;; Return value:  Size  Location     Type
  1043 ;;                  2    7[COMMON] unsigned int 
  1044 ;; Registers used:
  1045 ;;		wreg, status,2, status,0
  1046 ;; Tracked objects:
  1047 ;;		On entry : 0/0
  1048 ;;		On exit  : 0/0
  1049 ;;		Unchanged: 0/0
  1050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1051 ;;      Params:         4       0       0       0       0
  1052 ;;      Locals:         1       0       0       0       0
  1053 ;;      Temps:          0       0       0       0       0
  1054 ;;      Totals:         5       0       0       0       0
  1055 ;;Total ram usage:        5 bytes
  1056 ;; Hardware stack levels used: 1
  1057 ;; This function calls:
  1058 ;;		Nothing
  1059 ;; This function is called by:
  1060 ;;		_formata_contador
  1061 ;; This function uses a non-reentrant model
  1062 ;;
  1063                           
  1064     06B6                     ___lwmod:	
  1065                           ;psect for function ___lwmod
  1066                           
  1067     06B6                     l762:	
  1068                           ;incstack = 0
  1069                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1070                           
  1071     06B6  0877               	movf	___lwmod@divisor,w
  1072     06B7  0478               	iorwf	___lwmod@divisor+1,w
  1073     06B8  1903               	btfsc	3,2
  1074     06B9  2EBB               	goto	u281
  1075     06BA  2EBC               	goto	u280
  1076     06BB                     u281:
  1077     06BB  2EE9               	goto	l780
  1078     06BC                     u280:
  1079     06BC                     l764:
  1080     06BC  3001               	movlw	1
  1081     06BD  00FB               	movwf	___lwmod@counter
  1082     06BE  2EC8               	goto	l770
  1083     06BF                     l766:
  1084     06BF  3001               	movlw	1
  1085     06C0                     u295:
  1086     06C0  1003               	clrc
  1087     06C1  0DF7               	rlf	___lwmod@divisor,f
  1088     06C2  0DF8               	rlf	___lwmod@divisor+1,f
  1089     06C3  3EFF               	addlw	-1
  1090     06C4  1D03               	skipz
  1091     06C5  2EC0               	goto	u295
  1092     06C6                     l768:
  1093     06C6  3001               	movlw	1
  1094     06C7  07FB               	addwf	___lwmod@counter,f
  1095     06C8                     l770:
  1096     06C8  1FF8               	btfss	___lwmod@divisor+1,7
  1097     06C9  2ECB               	goto	u301
  1098     06CA  2ECC               	goto	u300
  1099     06CB                     u301:
  1100     06CB  2EBF               	goto	l766
  1101     06CC                     u300:
  1102     06CC                     l772:
  1103     06CC  0878               	movf	___lwmod@divisor+1,w
  1104     06CD  027A               	subwf	___lwmod@dividend+1,w
  1105     06CE  1D03               	skipz
  1106     06CF  2ED2               	goto	u315
  1107     06D0  0877               	movf	___lwmod@divisor,w
  1108     06D1  0279               	subwf	___lwmod@dividend,w
  1109     06D2                     u315:
  1110     06D2  1C03               	skipc
  1111     06D3  2ED5               	goto	u311
  1112     06D4  2ED6               	goto	u310
  1113     06D5                     u311:
  1114     06D5  2EDC               	goto	l776
  1115     06D6                     u310:
  1116     06D6                     l774:
  1117     06D6  0877               	movf	___lwmod@divisor,w
  1118     06D7  02F9               	subwf	___lwmod@dividend,f
  1119     06D8  0878               	movf	___lwmod@divisor+1,w
  1120     06D9  1C03               	skipc
  1121     06DA  03FA               	decf	___lwmod@dividend+1,f
  1122     06DB  02FA               	subwf	___lwmod@dividend+1,f
  1123     06DC                     l776:
  1124     06DC  3001               	movlw	1
  1125     06DD                     u325:
  1126     06DD  1003               	clrc
  1127     06DE  0CF8               	rrf	___lwmod@divisor+1,f
  1128     06DF  0CF7               	rrf	___lwmod@divisor,f
  1129     06E0  3EFF               	addlw	-1
  1130     06E1  1D03               	skipz
  1131     06E2  2EDD               	goto	u325
  1132     06E3                     l778:
  1133     06E3  3001               	movlw	1
  1134     06E4  02FB               	subwf	___lwmod@counter,f
  1135     06E5  1D03               	btfss	3,2
  1136     06E6  2EE8               	goto	u331
  1137     06E7  2EE9               	goto	u330
  1138     06E8                     u331:
  1139     06E8  2ECC               	goto	l772
  1140     06E9                     u330:
  1141     06E9                     l780:
  1142     06E9  087A               	movf	___lwmod@dividend+1,w
  1143     06EA  00F8               	movwf	?___lwmod+1
  1144     06EB  0879               	movf	___lwmod@dividend,w
  1145     06EC  00F7               	movwf	?___lwmod
  1146     06ED                     l436:
  1147     06ED  0008               	return
  1148     06EE                     __end_of___lwmod:
  1149                           
  1150                           	psect	text8
  1151     06EE                     __ptext8:	
  1152 ;; *************** function ___lwdiv *****************
  1153 ;; Defined at:
  1154 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\lwdiv.c"
  1155 ;; Parameters:    Size  Location     Type
  1156 ;;  divisor         2    0[COMMON] unsigned int 
  1157 ;;  dividend        2    2[COMMON] unsigned int 
  1158 ;; Auto vars:     Size  Location     Type
  1159 ;;  quotient        2    4[COMMON] unsigned int 
  1160 ;;  counter         1    6[COMMON] unsigned char 
  1161 ;; Return value:  Size  Location     Type
  1162 ;;                  2    0[COMMON] unsigned int 
  1163 ;; Registers used:
  1164 ;;		wreg, status,2, status,0
  1165 ;; Tracked objects:
  1166 ;;		On entry : 0/0
  1167 ;;		On exit  : 0/0
  1168 ;;		Unchanged: 0/0
  1169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1170 ;;      Params:         4       0       0       0       0
  1171 ;;      Locals:         3       0       0       0       0
  1172 ;;      Temps:          0       0       0       0       0
  1173 ;;      Totals:         7       0       0       0       0
  1174 ;;Total ram usage:        7 bytes
  1175 ;; Hardware stack levels used: 1
  1176 ;; This function calls:
  1177 ;;		Nothing
  1178 ;; This function is called by:
  1179 ;;		_formata_contador
  1180 ;; This function uses a non-reentrant model
  1181 ;;
  1182                           
  1183     06EE                     ___lwdiv:	
  1184                           ;psect for function ___lwdiv
  1185                           
  1186     06EE                     l736:	
  1187                           ;incstack = 0
  1188                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1189                           
  1190     06EE  01F4               	clrf	___lwdiv@quotient
  1191     06EF  01F5               	clrf	___lwdiv@quotient+1
  1192     06F0                     l738:
  1193     06F0  0870               	movf	___lwdiv@divisor,w
  1194     06F1  0471               	iorwf	___lwdiv@divisor+1,w
  1195     06F2  1903               	btfsc	3,2
  1196     06F3  2EF5               	goto	u211
  1197     06F4  2EF6               	goto	u210
  1198     06F5                     u211:
  1199     06F5  2F2B               	goto	l758
  1200     06F6                     u210:
  1201     06F6                     l740:
  1202     06F6  3001               	movlw	1
  1203     06F7  00F6               	movwf	___lwdiv@counter
  1204     06F8  2F02               	goto	l746
  1205     06F9                     l742:
  1206     06F9  3001               	movlw	1
  1207     06FA                     u225:
  1208     06FA  1003               	clrc
  1209     06FB  0DF0               	rlf	___lwdiv@divisor,f
  1210     06FC  0DF1               	rlf	___lwdiv@divisor+1,f
  1211     06FD  3EFF               	addlw	-1
  1212     06FE  1D03               	skipz
  1213     06FF  2EFA               	goto	u225
  1214     0700                     l744:
  1215     0700  3001               	movlw	1
  1216     0701  07F6               	addwf	___lwdiv@counter,f
  1217     0702                     l746:
  1218     0702  1FF1               	btfss	___lwdiv@divisor+1,7
  1219     0703  2F05               	goto	u231
  1220     0704  2F06               	goto	u230
  1221     0705                     u231:
  1222     0705  2EF9               	goto	l742
  1223     0706                     u230:
  1224     0706                     l748:
  1225     0706  3001               	movlw	1
  1226     0707                     u245:
  1227     0707  1003               	clrc
  1228     0708  0DF4               	rlf	___lwdiv@quotient,f
  1229     0709  0DF5               	rlf	___lwdiv@quotient+1,f
  1230     070A  3EFF               	addlw	-1
  1231     070B  1D03               	skipz
  1232     070C  2F07               	goto	u245
  1233     070D  0871               	movf	___lwdiv@divisor+1,w
  1234     070E  0273               	subwf	___lwdiv@dividend+1,w
  1235     070F  1D03               	skipz
  1236     0710  2F13               	goto	u255
  1237     0711  0870               	movf	___lwdiv@divisor,w
  1238     0712  0272               	subwf	___lwdiv@dividend,w
  1239     0713                     u255:
  1240     0713  1C03               	skipc
  1241     0714  2F16               	goto	u251
  1242     0715  2F17               	goto	u250
  1243     0716                     u251:
  1244     0716  2F1E               	goto	l754
  1245     0717                     u250:
  1246     0717                     l750:
  1247     0717  0870               	movf	___lwdiv@divisor,w
  1248     0718  02F2               	subwf	___lwdiv@dividend,f
  1249     0719  0871               	movf	___lwdiv@divisor+1,w
  1250     071A  1C03               	skipc
  1251     071B  03F3               	decf	___lwdiv@dividend+1,f
  1252     071C  02F3               	subwf	___lwdiv@dividend+1,f
  1253     071D                     l752:
  1254     071D  1474               	bsf	___lwdiv@quotient,0
  1255     071E                     l754:
  1256     071E  3001               	movlw	1
  1257     071F                     u265:
  1258     071F  1003               	clrc
  1259     0720  0CF1               	rrf	___lwdiv@divisor+1,f
  1260     0721  0CF0               	rrf	___lwdiv@divisor,f
  1261     0722  3EFF               	addlw	-1
  1262     0723  1D03               	skipz
  1263     0724  2F1F               	goto	u265
  1264     0725                     l756:
  1265     0725  3001               	movlw	1
  1266     0726  02F6               	subwf	___lwdiv@counter,f
  1267     0727  1D03               	btfss	3,2
  1268     0728  2F2A               	goto	u271
  1269     0729  2F2B               	goto	u270
  1270     072A                     u271:
  1271     072A  2F06               	goto	l748
  1272     072B                     u270:
  1273     072B                     l758:
  1274     072B  0875               	movf	___lwdiv@quotient+1,w
  1275     072C  00F1               	movwf	?___lwdiv+1
  1276     072D  0874               	movf	___lwdiv@quotient,w
  1277     072E  00F0               	movwf	?___lwdiv
  1278     072F                     l426:
  1279     072F  0008               	return
  1280     0730                     __end_of___lwdiv:
  1281                           
  1282                           	psect	text9
  1283     0628                     __ptext9:	
  1284 ;; *************** function _debounce *****************
  1285 ;; Defined at:
  1286 ;;		line 71 in file "atividade9b.c"
  1287 ;; Parameters:    Size  Location     Type
  1288 ;;  botao           1    wreg     unsigned char 
  1289 ;; Auto vars:     Size  Location     Type
  1290 ;;  botao           1    3[COMMON] unsigned char 
  1291 ;; Return value:  Size  Location     Type
  1292 ;;                  1    wreg      unsigned char 
  1293 ;; Registers used:
  1294 ;;		wreg, status,2, status,0
  1295 ;; Tracked objects:
  1296 ;;		On entry : 0/0
  1297 ;;		On exit  : 0/0
  1298 ;;		Unchanged: 0/0
  1299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1300 ;;      Params:         0       0       0       0       0
  1301 ;;      Locals:         1       0       0       0       0
  1302 ;;      Temps:          3       0       0       0       0
  1303 ;;      Totals:         4       0       0       0       0
  1304 ;;Total ram usage:        4 bytes
  1305 ;; Hardware stack levels used: 1
  1306 ;; This function calls:
  1307 ;;		Nothing
  1308 ;; This function is called by:
  1309 ;;		_main
  1310 ;; This function uses a non-reentrant model
  1311 ;;
  1312                           
  1313     0628                     _debounce:	
  1314                           ;psect for function _debounce
  1315                           
  1316                           
  1317                           ;incstack = 0
  1318                           ; Regs used in _debounce: [wreg+status,2+status,0]
  1319                           ;debounce@botao stored from wreg
  1320     0628  00F3               	movwf	debounce@botao
  1321     0629                     l818:
  1322                           
  1323                           ;atividade9b.c: 72:     if (botao == 1) {
  1324     0629  0373               	decf	debounce@botao,w
  1325     062A  1D03               	btfss	3,2
  1326     062B  2E2D               	goto	u351
  1327     062C  2E2E               	goto	u350
  1328     062D                     u351:
  1329     062D  2E42               	goto	l828
  1330     062E                     u350:
  1331     062E                     l820:
  1332                           
  1333                           ;atividade9b.c: 73:         _delay((unsigned long)((50)*(20000000/4000.0)));
  1334     062E  3002               	movlw	2
  1335     062F  00F2               	movwf	??_debounce+2
  1336     0630  3045               	movlw	69
  1337     0631  00F1               	movwf	??_debounce+1
  1338     0632  30A9               	movlw	169
  1339     0633  00F0               	movwf	??_debounce
  1340     0634                     u447:
  1341     0634  0BF0               	decfsz	??_debounce,f
  1342     0635  2E34               	goto	u447
  1343     0636  0BF1               	decfsz	??_debounce+1,f
  1344     0637  2E34               	goto	u447
  1345     0638  0BF2               	decfsz	??_debounce+2,f
  1346     0639  2E34               	goto	u447
  1347     063A  2E3B               	nop2
  1348     063B                     l822:
  1349                           
  1350                           ;atividade9b.c: 74:         if (botao == 1) {
  1351     063B  0373               	decf	debounce@botao,w
  1352     063C  1D03               	btfss	3,2
  1353     063D  2E3F               	goto	u361
  1354     063E  2E40               	goto	u360
  1355     063F                     u361:
  1356     063F  2E42               	goto	l828
  1357     0640                     u360:
  1358     0640                     l824:
  1359                           
  1360                           ;atividade9b.c: 75:             return 1;
  1361     0640  3001               	movlw	1
  1362     0641  2E43               	goto	l44
  1363     0642                     l828:
  1364                           
  1365                           ;atividade9b.c: 78:     return 0;
  1366     0642  3000               	movlw	0
  1367     0643                     l44:
  1368     0643  0008               	return
  1369     0644                     __end_of_debounce:
  1370     0002                     ___latbits      equ	2
  1371     007E                     btemp           set	126	;btemp
  1372     007E                     wtemp0          set	126
  1373                           
  1374                           	psect	config
  1375                           
  1376                           ;Config register CONFIG @ 0x2007
  1377                           ;	Oscillator Selection bits
  1378                           ;	FOSC = HS, HS oscillator
  1379                           ;	Watchdog Timer Enable bit
  1380                           ;	WDTE = OFF, WDT disabled
  1381                           ;	Power-up Timer Enable bit
  1382                           ;	PWRTE = OFF, PWRT disabled
  1383                           ;	FLASH Program Memory Code Protection bits
  1384                           ;	CP = OFF, Code protection off
  1385                           ;	Brown-out Reset Enable bit
  1386                           ;	BOREN = 0x1, unprogrammed default
  1387                           ;	Low Voltage In-Circuit Serial Programming Enable bit
  1388                           ;	LVP = 0x1, unprogrammed default
  1389                           ;	Data EE Memory Code Protection
  1390                           ;	CPD = 0x1, unprogrammed default
  1391                           ;	FLASH Program Memory Write Enable
  1392                           ;	WRT = 0x1, unprogrammed default
  1393                           ;	In-Circuit Debugger Mode bit
  1394                           ;	DEBUG = 0x1, unprogrammed default
  1395     2007                     	org	8199
  1396     2007  3FFA               	dw	16378

Data Sizes:
    Strings     10
    Constant    0
    Data        0
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      0       7
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_string@str	PTR const unsigned char  size(2) Largest target is 10
		 -> buffer(BANK0[5]), STR_1(CODE[10]), 


Critical Paths under _main in COMMON

    _lcd_initialise->_lcd_command
    _exibir_contador_LCD->_formata_contador
    _lcd_string->_lcd_data
    _formata_contador->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     616
                           _debounce
                _exibir_contador_LCD
                     _lcd_initialise
 ---------------------------------------------------------------------------------
 (1) _lcd_initialise                                       2     2      0      29
                                              3 COMMON     2     2      0
                        _lcd_command
 ---------------------------------------------------------------------------------
 (1) _exibir_contador_LCD                                  0     0      0     529
                   _formata_contador
                        _lcd_command
                         _lcd_string
 ---------------------------------------------------------------------------------
 (2) _lcd_string                                           2     0      2      76
                                              3 COMMON     2     0      2
                           _lcd_data
 ---------------------------------------------------------------------------------
 (3) _lcd_data                                             3     3      0      29
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _lcd_command                                          3     3      0      29
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _formata_contador                                     2     0      2     424
                                             12 COMMON     2     0      2
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     167
                                              7 COMMON     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     168
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) _debounce                                             4     4      0      58
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _debounce
   _exibir_contador_LCD
     _formata_contador
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
     _lcd_command
     _lcd_string
       _lcd_data
   _lcd_initialise
     _lcd_command

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14     14      14    100.0%
BANK0               80      0       7      8.8%
BANK1               80      0       0      0.0%
BANK3               96      0       0      0.0%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      21      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Wed Jan 29 22:14:05 2025

                          pc 0002                 lcd_data@data 0072                           l21 0613  
                         l24 0627                           l33 068B                           l27 0665  
                         l51 075B                           l44 0643                           l36 07F2  
                         l39 06B5                           l55 0778                           fsr 0004  
                        l426 072F                          l436 06ED                          l800 0782  
                        l802 07F1                          l730 0619                          l810 0692  
                        l820 062E                          l740 06F6                          l732 061A  
                        l812 069B                          l804 0644                          l822 063B  
                        l750 0717                          l742 06F9                          l734 0624  
                        l814 06A1                          l806 065C                          l824 0640  
                        l752 071D                          l744 0700                          l736 06EE  
                        l728 0615                          l816 06AC                          l808 068C  
                        l840 0740                          l832 0730                          l818 0629  
                        l754 071E                          l746 0702                          l738 06F0  
                        l770 06C8                          l762 06B6                          l850 0773  
                        l842 074E                          l834 0734                          l828 0642  
                        l756 0725                          l748 0706                          l772 06CC  
                        l764 06BC                          l780 06E9                          l844 0756  
                        l836 0736                          l758 072B                          l774 06D6  
                        l766 06BF                          l790 0610                          l846 0761  
                        l838 073B                          l776 06DC                          l768 06C6  
                        l784 0601                          l792 0666                          l848 076F  
                        l778 06E3                          l786 0605                          l794 0667  
                        l788 0606                          l796 0675                          l798 067B  
                        u210 06F6                          u211 06F5                          u300 06CC  
                        u301 06CB                          u230 0706                          u310 06D6  
                        u231 0705                          u311 06D5                          u400 077E  
                        u225 06FA                          u401 077D                          u250 0717  
                        u330 06E9                          u251 0716                          u331 06E8  
                        u315 06D2                          u340 068B                          u245 0707  
                        u325 06DD                          u341 068A                          u350 062E  
                        u270 072B                          u351 062D                          u271 072A  
                        u255 0713                          u360 0640                          u280 06BC  
                        u361 063F                          u265 071F                          u281 06BB  
                        u417 0660                          u370 074E                          u427 061F  
                        u371 074D                          u380 0761                          u437 060B  
                        u381 0760                          u390 076F                          u447 0634  
                        u295 06C0                          u391 076E                          fsr0 0004  
                        indf 0000                         STR_1 0013                         _main 0730  
                       btemp 007E                         start 0000                        ?_main 0070  
            __end_of___lwdiv 0730              __end_of___lwmod 06EE                        _PORTD 0008  
                      _TRISB 0086                        _TRISD 0088                        _TRISE 0089  
                      pclath 000A                        status 0003                        wtemp0 007E  
            __initialization 07F3                 __end_of_main 0782                       ??_main 007E  
             lcd_command@cmd 0072             __end_of_debounce 0644     __end_of_formata_contador 07F3  
           __end_of_lcd_data 0628                    ??___lwdiv 0074                    ??___lwmod 007B  
                     _buffer 0022             ??_lcd_initialise 0073                lcd_string@str 0073  
    __end_of__initialization 07FC          _exibir_contador_LCD 068C               __pcstackCOMMON 0070  
       ?_exibir_contador_LCD 0070                   __pbssBANK0 0020                   __pmaintext 0730  
      ??_exibir_contador_LCD 007E                    ?_debounce 0070                    ?_lcd_data 0070  
                 _lcd_string 0666                   __stringtab 0003                      ___lwdiv 06EE  
                    ___lwmod 06B6                      __ptext1 0644                      __ptext2 068C  
                    __ptext3 0666                      __ptext4 0614                      __ptext5 0600  
                    __ptext6 0782                      __ptext7 06B6                      __ptext8 06EE  
                    __ptext9 0628                   ??_debounce 0070                debounce@botao 0073  
                 ??_lcd_data 0070         end_of_initialization 07FC            ?_formata_contador 007C  
         ??_formata_contador 007E                    _PORTBbits 0006                    _PORTEbits 0009  
                ?_lcd_string 0073                ??_lcd_command 0070          start_initialization 07F3  
   formata_contador@contador 007C          __end_of_lcd_command 0614                    ___latbits 0002  
           ___lwdiv@dividend 0072                     ?___lwdiv 0070                     ?___lwmod 0077  
__end_of_exibir_contador_LCD 06B6                    __pstrings 0003             ___lwdiv@quotient 0074  
                _lcd_command 0600                  __stringbase 0012                 ??_lcd_string 0075  
         __end_of_lcd_string 068C           __end_of__stringtab 0013                     _debounce 0628  
            ___lwdiv@divisor 0070              ___lwdiv@counter 0076                     _lcd_data 0614  
                   _contador 0020               _lcd_initialise 0644             ___lwmod@dividend 0079  
     __end_of_lcd_initialise 0666                    stringcode 000D              ___lwmod@divisor 0077  
            ___lwmod@counter 007B                     stringdir 000D                     stringtab 0003  
           _formata_contador 0782              ?_lcd_initialise 0070                 ?_lcd_command 0070  
