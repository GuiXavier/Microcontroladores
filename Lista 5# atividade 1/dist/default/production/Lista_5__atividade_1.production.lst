

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Wed Nov 20 02:01:49 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F877
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,space=0,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13     0000                     
    14                           ; Generated 12/10/2023 GMT
    15                           ; 
    16                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48     0004                     fsr             equ	4
    49     0004                     fsr0            equ	4
    50     0000                     indf            equ	0
    51     0000                     indf0           equ	0
    52     0002                     pc              equ	2
    53     0002                     pcl             equ	2
    54     000A                     pclath          equ	10
    55     0003                     status          equ	3
    56     0000                     INDF            equ	0	;# 
    57     0001                     TMR0            equ	1	;# 
    58     0002                     PCL             equ	2	;# 
    59     0003                     STATUS          equ	3	;# 
    60     0004                     FSR             equ	4	;# 
    61     0005                     PORTA           equ	5	;# 
    62     0006                     PORTB           equ	6	;# 
    63     0007                     PORTC           equ	7	;# 
    64     0008                     PORTD           equ	8	;# 
    65     0009                     PORTE           equ	9	;# 
    66     000A                     PCLATH          equ	10	;# 
    67     000B                     INTCON          equ	11	;# 
    68     000C                     PIR1            equ	12	;# 
    69     000D                     PIR2            equ	13	;# 
    70     000E                     TMR1            equ	14	;# 
    71     000E                     TMR1L           equ	14	;# 
    72     000F                     TMR1H           equ	15	;# 
    73     0010                     T1CON           equ	16	;# 
    74     0011                     TMR2            equ	17	;# 
    75     0012                     T2CON           equ	18	;# 
    76     0013                     SSPBUF          equ	19	;# 
    77     0014                     SSPCON          equ	20	;# 
    78     0015                     CCPR1           equ	21	;# 
    79     0015                     CCPR1L          equ	21	;# 
    80     0016                     CCPR1H          equ	22	;# 
    81     0017                     CCP1CON         equ	23	;# 
    82     0018                     RCSTA           equ	24	;# 
    83     0019                     TXREG           equ	25	;# 
    84     001A                     RCREG           equ	26	;# 
    85     001B                     CCPR2           equ	27	;# 
    86     001B                     CCPR2L          equ	27	;# 
    87     001C                     CCPR2H          equ	28	;# 
    88     001D                     CCP2CON         equ	29	;# 
    89     001E                     ADRESH          equ	30	;# 
    90     001F                     ADCON0          equ	31	;# 
    91     0081                     OPTION_REG      equ	129	;# 
    92     0085                     TRISA           equ	133	;# 
    93     0086                     TRISB           equ	134	;# 
    94     0087                     TRISC           equ	135	;# 
    95     0088                     TRISD           equ	136	;# 
    96     0089                     TRISE           equ	137	;# 
    97     008C                     PIE1            equ	140	;# 
    98     008D                     PIE2            equ	141	;# 
    99     008E                     PCON            equ	142	;# 
   100     0091                     SSPCON2         equ	145	;# 
   101     0092                     PR2             equ	146	;# 
   102     0093                     SSPADD          equ	147	;# 
   103     0094                     SSPSTAT         equ	148	;# 
   104     0098                     TXSTA           equ	152	;# 
   105     0099                     SPBRG           equ	153	;# 
   106     009E                     ADRESL          equ	158	;# 
   107     009F                     ADCON1          equ	159	;# 
   108     010C                     EEDATA          equ	268	;# 
   109     010D                     EEADR           equ	269	;# 
   110     010E                     EEDATH          equ	270	;# 
   111     010F                     EEADRH          equ	271	;# 
   112     018C                     EECON1          equ	396	;# 
   113     018D                     EECON2          equ	397	;# 
   114     0000                     INDF            equ	0	;# 
   115     0001                     TMR0            equ	1	;# 
   116     0002                     PCL             equ	2	;# 
   117     0003                     STATUS          equ	3	;# 
   118     0004                     FSR             equ	4	;# 
   119     0005                     PORTA           equ	5	;# 
   120     0006                     PORTB           equ	6	;# 
   121     0007                     PORTC           equ	7	;# 
   122     0008                     PORTD           equ	8	;# 
   123     0009                     PORTE           equ	9	;# 
   124     000A                     PCLATH          equ	10	;# 
   125     000B                     INTCON          equ	11	;# 
   126     000C                     PIR1            equ	12	;# 
   127     000D                     PIR2            equ	13	;# 
   128     000E                     TMR1            equ	14	;# 
   129     000E                     TMR1L           equ	14	;# 
   130     000F                     TMR1H           equ	15	;# 
   131     0010                     T1CON           equ	16	;# 
   132     0011                     TMR2            equ	17	;# 
   133     0012                     T2CON           equ	18	;# 
   134     0013                     SSPBUF          equ	19	;# 
   135     0014                     SSPCON          equ	20	;# 
   136     0015                     CCPR1           equ	21	;# 
   137     0015                     CCPR1L          equ	21	;# 
   138     0016                     CCPR1H          equ	22	;# 
   139     0017                     CCP1CON         equ	23	;# 
   140     0018                     RCSTA           equ	24	;# 
   141     0019                     TXREG           equ	25	;# 
   142     001A                     RCREG           equ	26	;# 
   143     001B                     CCPR2           equ	27	;# 
   144     001B                     CCPR2L          equ	27	;# 
   145     001C                     CCPR2H          equ	28	;# 
   146     001D                     CCP2CON         equ	29	;# 
   147     001E                     ADRESH          equ	30	;# 
   148     001F                     ADCON0          equ	31	;# 
   149     0081                     OPTION_REG      equ	129	;# 
   150     0085                     TRISA           equ	133	;# 
   151     0086                     TRISB           equ	134	;# 
   152     0087                     TRISC           equ	135	;# 
   153     0088                     TRISD           equ	136	;# 
   154     0089                     TRISE           equ	137	;# 
   155     008C                     PIE1            equ	140	;# 
   156     008D                     PIE2            equ	141	;# 
   157     008E                     PCON            equ	142	;# 
   158     0091                     SSPCON2         equ	145	;# 
   159     0092                     PR2             equ	146	;# 
   160     0093                     SSPADD          equ	147	;# 
   161     0094                     SSPSTAT         equ	148	;# 
   162     0098                     TXSTA           equ	152	;# 
   163     0099                     SPBRG           equ	153	;# 
   164     009E                     ADRESL          equ	158	;# 
   165     009F                     ADCON1          equ	159	;# 
   166     010C                     EEDATA          equ	268	;# 
   167     010D                     EEADR           equ	269	;# 
   168     010E                     EEDATH          equ	270	;# 
   169     010F                     EEADRH          equ	271	;# 
   170     018C                     EECON1          equ	396	;# 
   171     018D                     EECON2          equ	397	;# 
   172                           
   173                           	psect	idataBANK0
   174     077D                     __pidataBANK0:
   175                           
   176                           ;initializer for _segment
   177     077D  3403               	retlw	3
   178     077E  349F               	retlw	159
   179     077F  3425               	retlw	37
   180     0780  340D               	retlw	13
   181     0781  3499               	retlw	153
   182     0782  3449               	retlw	73
   183     0783  3441               	retlw	65
   184     0784  341F               	retlw	31
   185     0785  3401               	retlw	1
   186     0786  3419               	retlw	25
   187     0787  3411               	retlw	17
   188     0788  34C1               	retlw	193
   189     0789  3463               	retlw	99
   190     078A  3485               	retlw	133
   191     078B  3461               	retlw	97
   192     078C  3471               	retlw	113
   193     0008                     _PORTD          set	8
   194     0006                     _PORTBbits      set	6
   195     0005                     _PORTAbits      set	5
   196     0085                     _TRISA          set	133
   197     0086                     _TRISB          set	134
   198     0088                     _TRISD          set	136
   199                           
   200                           	psect	cinit
   201     07EB                     start_initialization:	
   202                           ; #config settings
   203                           
   204     07EB                     __initialization:
   205                           
   206                           ; Initialize objects allocated to BANK0
   207     07EB  1383               	bcf	3,7	;select IRP bank0
   208     07EC  3030               	movlw	low (__pdataBANK0+16)
   209     07ED  00FD               	movwf	btemp+-1
   210     07EE  3007               	movlw	high __pidataBANK0
   211     07EF  00FE               	movwf	btemp
   212     07F0  307D               	movlw	low __pidataBANK0
   213     07F1  00FF               	movwf	btemp+1
   214     07F2  3020               	movlw	low __pdataBANK0
   215     07F3  0084               	movwf	4
   216     07F4  120A  118A  2791  120A  118A  	fcall	init_ram0
   217                           
   218                           ; Clear objects allocated to COMMON
   219     07F9  01F0               	clrf	__pbssCOMMON& (0+127)
   220     07FA  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   221     07FB  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   222     07FC                     end_of_initialization:	
   223                           ;End of C runtime variable initialization code
   224                           
   225     07FC                     __end_of__initialization:
   226     07FC  0183               	clrf	3
   227     07FD  120A  118A  2FA0   	ljmp	_main	;jump to C main() function
   228                           
   229                           	psect	bssCOMMON
   230     0070                     __pbssCOMMON:
   231     0070                     _sentido:
   232     0070                     	ds	1
   233     0071                     _contador:
   234     0071                     	ds	1
   235     0072                     _i:
   236     0072                     	ds	1
   237                           
   238                           	psect	dataBANK0
   239     0020                     __pdataBANK0:
   240     0020                     _segment:
   241     0020                     	ds	16
   242                           
   243                           	psect	inittext
   244     078D                     init_fetch0:	
   245                           ;	Called with low address in FSR and high address in W
   246                           
   247     078D  087E               	movf	btemp,w
   248     078E  008A               	movwf	10
   249     078F  087F               	movf	btemp+1,w
   250     0790  0082               	movwf	2
   251     0791                     init_ram0:	
   252                           ;Called with:
   253                           ;	high address of idata address in btemp 
   254                           ;	low address of idata address in btemp+1 
   255                           ;	low address of data in FSR
   256                           ;	high address + 1 of data in btemp-1
   257                           
   258     0791  120A  118A  278D  120A  118A  	fcall	init_fetch0
   259     0796  0080               	movwf	0
   260     0797  0A84               	incf	4,f
   261     0798  0804               	movf	4,w
   262     0799  067D               	xorwf	btemp+-1,w
   263     079A  1903               	btfsc	3,2
   264     079B  3400               	retlw	0
   265     079C  0AFF               	incf	btemp+1,f
   266     079D  1903               	btfsc	3,2
   267     079E  0AFE               	incf	btemp,f
   268     079F  2F91               	goto	init_ram0
   269                           
   270                           	psect	cstackCOMMON
   271     0073                     __pcstackCOMMON:
   272     0073                     ?_main:
   273     0073                     ??_main:	
   274                           ; 1 bytes @ 0x0
   275                           
   276                           
   277                           ; 1 bytes @ 0x0
   278     0073                     	ds	3
   279                           
   280                           	psect	maintext
   281     07A0                     __pmaintext:	
   282 ;;
   283 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   284 ;;
   285 ;; *************** function _main *****************
   286 ;; Defined at:
   287 ;;		line 22 in file "codigo.c"
   288 ;; Parameters:    Size  Location     Type
   289 ;;		None
   290 ;; Auto vars:     Size  Location     Type
   291 ;;		None
   292 ;; Return value:  Size  Location     Type
   293 ;;                  1    wreg      void 
   294 ;; Registers used:
   295 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   296 ;; Tracked objects:
   297 ;;		On entry : B00/0
   298 ;;		On exit  : 0/0
   299 ;;		Unchanged: 0/0
   300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   301 ;;      Params:         0       0       0       0       0
   302 ;;      Locals:         0       0       0       0       0
   303 ;;      Temps:          3       0       0       0       0
   304 ;;      Totals:         3       0       0       0       0
   305 ;;Total ram usage:        3 bytes
   306 ;; This function calls:
   307 ;;		Nothing
   308 ;; This function is called by:
   309 ;;		Startup code after reset
   310 ;; This function uses a non-reentrant model
   311 ;;
   312                           
   313     07A0                     _main:	
   314                           ;psect for function _main
   315                           
   316     07A0                     l580:	
   317                           ;incstack = 0
   318                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0]
   319                           
   320                           
   321                           ;codigo.c: 24:        {
   322     07A0  1683               	bsf	3,5	;RP0=1, select bank1
   323     07A1  1303               	bcf	3,6	;RP1=0, select bank1
   324     07A2  0188               	clrf	8	;volatile
   325     07A3                     l582:
   326                           
   327                           ;codigo.c: 25:             sentido = !sentido;
   328     07A3  30FF               	movlw	255
   329     07A4  0086               	movwf	6	;volatile
   330                           
   331                           ;codigo.c: 27: 
   332     07A5  0185               	clrf	5	;volatile
   333                           
   334                           ;codigo.c: 28: 
   335     07A6  01F1               	clrf	_contador
   336     07A7                     l584:
   337                           
   338                           ;codigo.c: 29: 
   339     07A7  1283               	bcf	3,5	;RP0=0, select bank0
   340     07A8  1303               	bcf	3,6	;RP1=0, select bank0
   341     07A9  1285               	bcf	5,5	;volatile
   342     07AA                     l586:
   343                           
   344                           ;codigo.c: 35:         }else{
   345     07AA  1283               	bcf	3,5	;RP0=0, select bank0
   346     07AB  1303               	bcf	3,6	;RP1=0, select bank0
   347     07AC  1806               	btfsc	6,0	;volatile
   348     07AD  2FAF               	goto	u11
   349     07AE  2FB0               	goto	u10
   350     07AF                     u11:
   351     07AF  2FAA               	goto	l586
   352     07B0                     u10:
   353     07B0                     l588:
   354                           
   355                           ;codigo.c: 37:             if(contador == 0)
   356     07B0  1806               	btfsc	6,0	;volatile
   357     07B1  2FB3               	goto	u21
   358     07B2  2FB4               	goto	u20
   359     07B3                     u21:
   360     07B3  2FBC               	goto	l29
   361     07B4                     u20:
   362     07B4                     l590:
   363                           
   364                           ;codigo.c: 38:                 contador = 15;;codigo.c: 39: 
   365     07B4  0870               	movf	_sentido,w
   366     07B5  1903               	btfsc	3,2
   367     07B6  2FB8               	goto	u31
   368     07B7  2FBA               	goto	u30
   369     07B8                     u31:
   370     07B8  3001               	movlw	1
   371     07B9  2FBB               	goto	u40
   372     07BA                     u30:
   373     07BA  3000               	movlw	0
   374     07BB                     u40:
   375     07BB  00F0               	movwf	_sentido
   376     07BC                     l29:	
   377                           ;codigo.c: 40:         }
   378                           
   379     07BC  0370               	decf	_sentido,w
   380     07BD  1D03               	btfss	3,2
   381     07BE  2FC0               	goto	u51
   382     07BF  2FC1               	goto	u50
   383     07C0                     u51:
   384     07C0  2FCB               	goto	l598
   385     07C1                     u50:
   386     07C1                     l592:
   387     07C1  3001               	movlw	1
   388     07C2  07F1               	addwf	_contador,f
   389     07C3                     l594:
   390     07C3  3010               	movlw	16
   391     07C4  0271               	subwf	_contador,w
   392     07C5  1C03               	skipc
   393     07C6  2FC8               	goto	u61
   394     07C7  2FC9               	goto	u60
   395     07C8                     u61:
   396     07C8  2FD4               	goto	l602
   397     07C9                     u60:
   398     07C9                     l596:
   399     07C9  01F1               	clrf	_contador
   400     07CA  2FD4               	goto	l602
   401     07CB                     l598:
   402     07CB  3001               	movlw	1
   403     07CC  02F1               	subwf	_contador,f
   404     07CD  0871               	movf	_contador,w
   405     07CE  1D03               	btfss	3,2
   406     07CF  2FD1               	goto	u71
   407     07D0  2FD2               	goto	u70
   408     07D1                     u71:
   409     07D1  2FD4               	goto	l602
   410     07D2                     u70:
   411     07D2                     l600:
   412     07D2  300F               	movlw	15
   413     07D3  00F1               	movwf	_contador
   414     07D4                     l602:
   415     07D4  0871               	movf	_contador,w
   416     07D5  3E20               	addlw	(low (_segment| 0))& (0+255)
   417     07D6  0084               	movwf	4
   418     07D7  1383               	bcf	3,7	;select IRP bank0
   419     07D8  0800               	movf	0,w
   420     07D9  0088               	movwf	8	;volatile
   421     07DA                     l604:
   422     07DA  300D               	movlw	13
   423     07DB  00F5               	movwf	??_main+2
   424     07DC  30AF               	movlw	175
   425     07DD  00F4               	movwf	??_main+1
   426     07DE  30B6               	movlw	182
   427     07DF  00F3               	movwf	??_main
   428     07E0                     u87:
   429     07E0  0BF3               	decfsz	??_main,f
   430     07E1  2FE0               	goto	u87
   431     07E2  0BF4               	decfsz	??_main+1,f
   432     07E3  2FE0               	goto	u87
   433     07E4  0BF5               	decfsz	??_main+2,f
   434     07E5  2FE0               	goto	u87
   435     07E6  0000               	nop
   436     07E7  2FAA               	goto	l586
   437     07E8  120A  118A  2800   	ljmp	start
   438     07EB                     __end_of_main:
   439     0002                     ___latbits      equ	2
   440     007E                     btemp           set	126	;btemp
   441     007E                     wtemp0          set	126
   442                           
   443                           	psect	config
   444                           
   445                           ;Config register CONFIG @ 0x2007
   446                           ;	Oscillator Selection bits
   447                           ;	FOSC = HS, HS oscillator
   448                           ;	Watchdog Timer Enable bit
   449                           ;	WDTE = OFF, WDT disabled
   450                           ;	Power-up Timer Enable bit
   451                           ;	PWRTE = OFF, PWRT disabled
   452                           ;	FLASH Program Memory Code Protection bits
   453                           ;	CP = OFF, Code protection off
   454                           ;	Brown-out Reset Enable bit
   455                           ;	BOREN = OFF, BOR disabled
   456                           ;	Low Voltage In-Circuit Serial Programming Enable bit
   457                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   458                           ;	Data EE Memory Code Protection
   459                           ;	CPD = OFF, Code Protection off
   460                           ;	FLASH Program Memory Write Enable
   461                           ;	WRT = OFF, Unprotected program memory may not be written to by EECON control
   462                           ;	In-Circuit Debugger Mode bit
   463                           ;	DEBUG = 0x1, unprogrammed default
   464     2007                     	org	8199
   465     2007  3D3A               	dw	15674

Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       6
    BANK0            80      0      16
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BANK3               96      0       0      0.0%
BITBANK3            96      0       0      0.0%
BANK2               96      0       0      0.0%
BITBANK2            96      0       0      0.0%
BANK1               80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BANK0               80      0      16     20.0%
BITBANK0            80      0       0      0.0%
COMMON              14      3       6     42.9%
BITCOMMON           14      0       0      0.0%
DATA                 0      0      22      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Wed Nov 20 02:01:49 2024

                      _i 0072                        pc 0002                       l29 07BC  
                     u10 07B0                       u11 07AF                       u20 07B4  
                     u21 07B3                       u30 07BA                       u31 07B8  
                     u40 07BB                       u50 07C1                       u51 07C0  
                     u60 07C9                       u61 07C8                       u70 07D2  
                     u71 07D1                       u87 07E0                       fsr 0004  
                    l600 07D2                      l602 07D4                      l604 07DA  
                    l580 07A0                      l590 07B4                      l582 07A3  
                    l592 07C1                      l584 07A7                      l594 07C3  
                    l586 07AA                      l596 07C9                      l588 07B0  
                    l598 07CB                      fsr0 0004                      indf 0000  
                   _main 07A0                     btemp 007E                     start 0000  
                  ?_main 0073                    _PORTD 0008                    _TRISA 0085  
                  _TRISB 0086                    _TRISD 0088                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07EB  
           __end_of_main 07EB                   ??_main 0073  __end_of__initialization 07FC  
         __pcstackCOMMON 0073             __pidataBANK0 077D               __pmaintext 07A0  
                _segment 0020                  _sentido 0070     end_of_initialization 07FC  
              _PORTAbits 0005                _PORTBbits 0006      start_initialization 07EB  
             init_fetch0 078D              __pdataBANK0 0020              __pbssCOMMON 0070  
              ___latbits 0002                 _contador 0071                 init_ram0 0791  
