

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Tue Nov 19 15:04:18 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F877
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,space=0,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15     0000                     
    16                           ; Generated 12/10/2023 GMT
    17                           ; 
    18                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F877 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50     0004                     fsr             equ	4
    51     0004                     fsr0            equ	4
    52     0000                     indf            equ	0
    53     0000                     indf0           equ	0
    54     0002                     pc              equ	2
    55     0002                     pcl             equ	2
    56     000A                     pclath          equ	10
    57     0003                     status          equ	3
    58     0000                     INDF            equ	0	;# 
    59     0001                     TMR0            equ	1	;# 
    60     0002                     PCL             equ	2	;# 
    61     0003                     STATUS          equ	3	;# 
    62     0004                     FSR             equ	4	;# 
    63     0005                     PORTA           equ	5	;# 
    64     0006                     PORTB           equ	6	;# 
    65     0007                     PORTC           equ	7	;# 
    66     0008                     PORTD           equ	8	;# 
    67     0009                     PORTE           equ	9	;# 
    68     000A                     PCLATH          equ	10	;# 
    69     000B                     INTCON          equ	11	;# 
    70     000C                     PIR1            equ	12	;# 
    71     000D                     PIR2            equ	13	;# 
    72     000E                     TMR1            equ	14	;# 
    73     000E                     TMR1L           equ	14	;# 
    74     000F                     TMR1H           equ	15	;# 
    75     0010                     T1CON           equ	16	;# 
    76     0011                     TMR2            equ	17	;# 
    77     0012                     T2CON           equ	18	;# 
    78     0013                     SSPBUF          equ	19	;# 
    79     0014                     SSPCON          equ	20	;# 
    80     0015                     CCPR1           equ	21	;# 
    81     0015                     CCPR1L          equ	21	;# 
    82     0016                     CCPR1H          equ	22	;# 
    83     0017                     CCP1CON         equ	23	;# 
    84     0018                     RCSTA           equ	24	;# 
    85     0019                     TXREG           equ	25	;# 
    86     001A                     RCREG           equ	26	;# 
    87     001B                     CCPR2           equ	27	;# 
    88     001B                     CCPR2L          equ	27	;# 
    89     001C                     CCPR2H          equ	28	;# 
    90     001D                     CCP2CON         equ	29	;# 
    91     001E                     ADRESH          equ	30	;# 
    92     001F                     ADCON0          equ	31	;# 
    93     0081                     OPTION_REG      equ	129	;# 
    94     0085                     TRISA           equ	133	;# 
    95     0086                     TRISB           equ	134	;# 
    96     0087                     TRISC           equ	135	;# 
    97     0088                     TRISD           equ	136	;# 
    98     0089                     TRISE           equ	137	;# 
    99     008C                     PIE1            equ	140	;# 
   100     008D                     PIE2            equ	141	;# 
   101     008E                     PCON            equ	142	;# 
   102     0091                     SSPCON2         equ	145	;# 
   103     0092                     PR2             equ	146	;# 
   104     0093                     SSPADD          equ	147	;# 
   105     0094                     SSPSTAT         equ	148	;# 
   106     0098                     TXSTA           equ	152	;# 
   107     0099                     SPBRG           equ	153	;# 
   108     009E                     ADRESL          equ	158	;# 
   109     009F                     ADCON1          equ	159	;# 
   110     010C                     EEDATA          equ	268	;# 
   111     010D                     EEADR           equ	269	;# 
   112     010E                     EEDATH          equ	270	;# 
   113     010F                     EEADRH          equ	271	;# 
   114     018C                     EECON1          equ	396	;# 
   115     018D                     EECON2          equ	397	;# 
   116     0000                     INDF            equ	0	;# 
   117     0001                     TMR0            equ	1	;# 
   118     0002                     PCL             equ	2	;# 
   119     0003                     STATUS          equ	3	;# 
   120     0004                     FSR             equ	4	;# 
   121     0005                     PORTA           equ	5	;# 
   122     0006                     PORTB           equ	6	;# 
   123     0007                     PORTC           equ	7	;# 
   124     0008                     PORTD           equ	8	;# 
   125     0009                     PORTE           equ	9	;# 
   126     000A                     PCLATH          equ	10	;# 
   127     000B                     INTCON          equ	11	;# 
   128     000C                     PIR1            equ	12	;# 
   129     000D                     PIR2            equ	13	;# 
   130     000E                     TMR1            equ	14	;# 
   131     000E                     TMR1L           equ	14	;# 
   132     000F                     TMR1H           equ	15	;# 
   133     0010                     T1CON           equ	16	;# 
   134     0011                     TMR2            equ	17	;# 
   135     0012                     T2CON           equ	18	;# 
   136     0013                     SSPBUF          equ	19	;# 
   137     0014                     SSPCON          equ	20	;# 
   138     0015                     CCPR1           equ	21	;# 
   139     0015                     CCPR1L          equ	21	;# 
   140     0016                     CCPR1H          equ	22	;# 
   141     0017                     CCP1CON         equ	23	;# 
   142     0018                     RCSTA           equ	24	;# 
   143     0019                     TXREG           equ	25	;# 
   144     001A                     RCREG           equ	26	;# 
   145     001B                     CCPR2           equ	27	;# 
   146     001B                     CCPR2L          equ	27	;# 
   147     001C                     CCPR2H          equ	28	;# 
   148     001D                     CCP2CON         equ	29	;# 
   149     001E                     ADRESH          equ	30	;# 
   150     001F                     ADCON0          equ	31	;# 
   151     0081                     OPTION_REG      equ	129	;# 
   152     0085                     TRISA           equ	133	;# 
   153     0086                     TRISB           equ	134	;# 
   154     0087                     TRISC           equ	135	;# 
   155     0088                     TRISD           equ	136	;# 
   156     0089                     TRISE           equ	137	;# 
   157     008C                     PIE1            equ	140	;# 
   158     008D                     PIE2            equ	141	;# 
   159     008E                     PCON            equ	142	;# 
   160     0091                     SSPCON2         equ	145	;# 
   161     0092                     PR2             equ	146	;# 
   162     0093                     SSPADD          equ	147	;# 
   163     0094                     SSPSTAT         equ	148	;# 
   164     0098                     TXSTA           equ	152	;# 
   165     0099                     SPBRG           equ	153	;# 
   166     009E                     ADRESL          equ	158	;# 
   167     009F                     ADCON1          equ	159	;# 
   168     010C                     EEDATA          equ	268	;# 
   169     010D                     EEADR           equ	269	;# 
   170     010E                     EEDATH          equ	270	;# 
   171     010F                     EEADRH          equ	271	;# 
   172     018C                     EECON1          equ	396	;# 
   173     018D                     EECON2          equ	397	;# 
   174                           
   175                           	psect	idataCOMMON
   176     0768                     __pidataCOMMON:
   177                           
   178                           ;initializer for _sentido
   179     0768  3401               	retlw	1
   180                           
   181                           	psect	idataBANK0
   182     0769                     __pidataBANK0:
   183                           
   184                           ;initializer for _segment
   185     0769  3403               	retlw	3
   186     076A  349F               	retlw	159
   187     076B  3425               	retlw	37
   188     076C  340D               	retlw	13
   189     076D  3499               	retlw	153
   190     076E  3449               	retlw	73
   191     076F  3441               	retlw	65
   192     0770  341F               	retlw	31
   193     0771  3401               	retlw	1
   194     0772  3419               	retlw	25
   195     0773  3411               	retlw	17
   196     0774  34C1               	retlw	193
   197     0775  3463               	retlw	99
   198     0776  3485               	retlw	133
   199     0777  3461               	retlw	97
   200     0778  3471               	retlw	113
   201     0006                     _PORTBbits      set	6
   202     0008                     _PORTD          set	8
   203     0081                     _OPTION_REGbits set	129
   204     0086                     _TRISBbits      set	134
   205     0088                     _TRISD          set	136
   206                           
   207                           	psect	cinit
   208     07E7                     start_initialization:	
   209                           ; #config settings
   210                           
   211     07E7                     __initialization:
   212                           
   213                           ; Initialize objects allocated to BANK0
   214     07E7  1383               	bcf	3,7	;select IRP bank0
   215     07E8  3030               	movlw	low (__pdataBANK0+16)
   216     07E9  00FD               	movwf	btemp+-1
   217     07EA  3007               	movlw	high __pidataBANK0
   218     07EB  00FE               	movwf	btemp
   219     07EC  3069               	movlw	low __pidataBANK0
   220     07ED  00FF               	movwf	btemp+1
   221     07EE  3020               	movlw	low __pdataBANK0
   222     07EF  0084               	movwf	4
   223     07F0  120A  118A  277D  120A  118A  	fcall	init_ram0
   224                           
   225                           ; Initialize objects allocated to COMMON
   226     07F5  120A  118A  2768  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   227     07FA  00F4               	movwf	__pdataCOMMON& (0+127)
   228                           
   229                           ; Clear objects allocated to COMMON
   230     07FB  01F3               	clrf	__pbssCOMMON& (0+127)
   231     07FC                     end_of_initialization:	
   232                           ;End of C runtime variable initialization code
   233                           
   234     07FC                     __end_of__initialization:
   235     07FC  0183               	clrf	3
   236     07FD  120A  118A  2F8C   	ljmp	_main	;jump to C main() function
   237                           
   238                           	psect	bssCOMMON
   239     0073                     __pbssCOMMON:
   240     0073                     _contador:
   241     0073                     	ds	1
   242                           
   243                           	psect	dataCOMMON
   244     0074                     __pdataCOMMON:
   245     0074                     _sentido:
   246     0074                     	ds	1
   247                           
   248                           	psect	dataBANK0
   249     0020                     __pdataBANK0:
   250     0020                     _segment:
   251     0020                     	ds	16
   252                           
   253                           	psect	inittext
   254     0779                     init_fetch0:	
   255                           ;	Called with low address in FSR and high address in W
   256                           
   257     0779  087E               	movf	btemp,w
   258     077A  008A               	movwf	10
   259     077B  087F               	movf	btemp+1,w
   260     077C  0082               	movwf	2
   261     077D                     init_ram0:	
   262                           ;Called with:
   263                           ;	high address of idata address in btemp 
   264                           ;	low address of idata address in btemp+1 
   265                           ;	low address of data in FSR
   266                           ;	high address + 1 of data in btemp-1
   267                           
   268     077D  120A  118A  2779  120A  118A  	fcall	init_fetch0
   269     0782  0080               	movwf	0
   270     0783  0A84               	incf	4,f
   271     0784  0804               	movf	4,w
   272     0785  067D               	xorwf	btemp+-1,w
   273     0786  1903               	btfsc	3,2
   274     0787  3400               	retlw	0
   275     0788  0AFF               	incf	btemp+1,f
   276     0789  1903               	btfsc	3,2
   277     078A  0AFE               	incf	btemp,f
   278     078B  2F7D               	goto	init_ram0
   279                           
   280                           	psect	cstackCOMMON
   281     0070                     __pcstackCOMMON:
   282     0070                     ?_main:
   283     0070                     ??_main:	
   284                           ; 1 bytes @ 0x0
   285                           
   286                           
   287                           ; 1 bytes @ 0x0
   288     0070                     	ds	3
   289                           
   290                           	psect	maintext
   291     078C                     __pmaintext:	
   292 ;;
   293 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   294 ;;
   295 ;; *************** function _main *****************
   296 ;; Defined at:
   297 ;;		line 21 in file "codigo.c"
   298 ;; Parameters:    Size  Location     Type
   299 ;;		None
   300 ;; Auto vars:     Size  Location     Type
   301 ;;		None
   302 ;; Return value:  Size  Location     Type
   303 ;;                  1    wreg      void 
   304 ;; Registers used:
   305 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   306 ;; Tracked objects:
   307 ;;		On entry : B00/0
   308 ;;		On exit  : 0/0
   309 ;;		Unchanged: 0/0
   310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   311 ;;      Params:         0       0       0       0       0
   312 ;;      Locals:         0       0       0       0       0
   313 ;;      Temps:          3       0       0       0       0
   314 ;;      Totals:         3       0       0       0       0
   315 ;;Total ram usage:        3 bytes
   316 ;; This function calls:
   317 ;;		Nothing
   318 ;; This function is called by:
   319 ;;		Startup code after reset
   320 ;; This function uses a non-reentrant model
   321 ;;
   322                           
   323     078C                     _main:	
   324                           ;psect for function _main
   325                           
   326     078C                     l580:	
   327                           ;incstack = 0
   328                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0]
   329                           
   330                           
   331                           ;codigo.c: 23:                 while (PORTBbits.RB0 == 0);
   332     078C  1683               	bsf	3,5	;RP0=1, select bank1
   333     078D  1303               	bcf	3,6	;RP1=0, select bank1
   334     078E  0188               	clrf	8	;volatile
   335     078F                     l582:
   336                           
   337                           ;codigo.c: 24:             }
   338     078F  1406               	bsf	6,0	;volatile
   339                           
   340                           ;codigo.c: 25:         }
   341     0790  1283               	bcf	3,5	;RP0=0, select bank0
   342     0791  1303               	bcf	3,6	;RP1=0, select bank0
   343     0792  0188               	clrf	8	;volatile
   344     0793                     l584:
   345                           
   346                           ;codigo.c: 28:         if (sentido) {
   347     0793  1683               	bsf	3,5	;RP0=1, select bank1
   348     0794  1303               	bcf	3,6	;RP1=0, select bank1
   349     0795  1381               	bcf	1,7	;volatile
   350     0796                     l586:
   351                           
   352                           ;codigo.c: 33:         } else {
   353     0796  1283               	bcf	3,5	;RP0=0, select bank0
   354     0797  1303               	bcf	3,6	;RP1=0, select bank0
   355     0798  1806               	btfsc	6,0	;volatile
   356     0799  2F9B               	goto	u11
   357     079A  2F9C               	goto	u10
   358     079B                     u11:
   359     079B  2FB7               	goto	l594
   360     079C                     u10:
   361     079C                     l588:
   362                           
   363                           ;codigo.c: 34:             if (contador == 0) {
   364     079C  3082               	movlw	130
   365     079D  00F1               	movwf	??_main+1
   366     079E  30DD               	movlw	221
   367     079F  00F0               	movwf	??_main
   368     07A0                     u97:
   369     07A0  0BF0               	decfsz	??_main,f
   370     07A1  2FA0               	goto	u97
   371     07A2  0BF1               	decfsz	??_main+1,f
   372     07A3  2FA0               	goto	u97
   373     07A4  2FA5               	nop2
   374     07A5                     l590:
   375                           
   376                           ;codigo.c: 35:                 contador = 15;
   377     07A5  1283               	bcf	3,5	;RP0=0, select bank0
   378     07A6  1303               	bcf	3,6	;RP1=0, select bank0
   379     07A7  1806               	btfsc	6,0	;volatile
   380     07A8  2FAA               	goto	u21
   381     07A9  2FAB               	goto	u20
   382     07AA                     u21:
   383     07AA  2FB7               	goto	l594
   384     07AB                     u20:
   385     07AB                     l592:
   386                           
   387                           ;codigo.c: 36:             } else {
   388     07AB  0874               	movf	_sentido,w
   389     07AC  1903               	btfsc	3,2
   390     07AD  2FAF               	goto	u31
   391     07AE  2FB1               	goto	u30
   392     07AF                     u31:
   393     07AF  3001               	movlw	1
   394     07B0  2FB2               	goto	u40
   395     07B1                     u30:
   396     07B1  3000               	movlw	0
   397     07B2                     u40:
   398     07B2  00F4               	movwf	_sentido
   399     07B3                     l26:	
   400                           ;codigo.c: 37:                 contador--;
   401                           
   402     07B3  1C06               	btfss	6,0	;volatile
   403     07B4  2FB6               	goto	u51
   404     07B5  2FB7               	goto	u50
   405     07B6                     u51:
   406     07B6  2FB3               	goto	l26
   407     07B7                     u50:
   408     07B7                     l594:
   409                           
   410                           ;codigo.c: 42:         PORTD = segment[contador];
   411     07B7  0874               	movf	_sentido,w
   412     07B8  1903               	btfsc	3,2
   413     07B9  2FBB               	goto	u61
   414     07BA  2FBC               	goto	u60
   415     07BB                     u61:
   416     07BB  2FC6               	goto	l602
   417     07BC                     u60:
   418     07BC                     l596:
   419                           
   420                           ;codigo.c: 43:         _delay((unsigned long)((500)*(20000000/4000.0)));
   421     07BC  3001               	movlw	1
   422     07BD  07F3               	addwf	_contador,f
   423     07BE                     l598:
   424                           
   425                           ;codigo.c: 44:     }
   426     07BE  3010               	movlw	16
   427     07BF  0273               	subwf	_contador,w
   428     07C0  1C03               	skipc
   429     07C1  2FC3               	goto	u71
   430     07C2  2FC4               	goto	u70
   431     07C3                     u71:
   432     07C3  2FD0               	goto	l608
   433     07C4                     u70:
   434     07C4                     l600:
   435                           
   436                           ;codigo.c: 45: }
   437     07C4  01F3               	clrf	_contador
   438     07C5  2FD0               	goto	l608
   439     07C6                     l602:
   440     07C6  0873               	movf	_contador,w
   441     07C7  1D03               	btfss	3,2
   442     07C8  2FCA               	goto	u81
   443     07C9  2FCB               	goto	u80
   444     07CA                     u81:
   445     07CA  2FCE               	goto	l606
   446     07CB                     u80:
   447     07CB                     l604:
   448     07CB  300F               	movlw	15
   449     07CC  00F3               	movwf	_contador
   450     07CD  2FD0               	goto	l608
   451     07CE                     l606:
   452     07CE  3001               	movlw	1
   453     07CF  02F3               	subwf	_contador,f
   454     07D0                     l608:
   455     07D0  0873               	movf	_contador,w
   456     07D1  3E20               	addlw	(low (_segment| 0))& (0+255)
   457     07D2  0084               	movwf	4
   458     07D3  1383               	bcf	3,7	;select IRP bank0
   459     07D4  0800               	movf	0,w
   460     07D5  0088               	movwf	8	;volatile
   461     07D6                     l610:
   462     07D6  300D               	movlw	13
   463     07D7  00F2               	movwf	??_main+2
   464     07D8  30AF               	movlw	175
   465     07D9  00F1               	movwf	??_main+1
   466     07DA  30B6               	movlw	182
   467     07DB  00F0               	movwf	??_main
   468     07DC                     u107:
   469     07DC  0BF0               	decfsz	??_main,f
   470     07DD  2FDC               	goto	u107
   471     07DE  0BF1               	decfsz	??_main+1,f
   472     07DF  2FDC               	goto	u107
   473     07E0  0BF2               	decfsz	??_main+2,f
   474     07E1  2FDC               	goto	u107
   475     07E2  0000               	nop
   476     07E3  2F96               	goto	l586
   477     07E4  120A  118A  2800   	ljmp	start
   478     07E7                     __end_of_main:
   479     0002                     ___latbits      equ	2
   480     007E                     btemp           set	126	;btemp
   481     007E                     wtemp0          set	126
   482                           
   483                           	psect	config
   484                           
   485                           ;Config register CONFIG @ 0x2007
   486                           ;	Oscillator Selection bits
   487                           ;	FOSC = HS, HS oscillator
   488                           ;	Watchdog Timer Enable bit
   489                           ;	WDTE = OFF, WDT disabled
   490                           ;	Power-up Timer Enable bit
   491                           ;	PWRTE = OFF, PWRT disabled
   492                           ;	FLASH Program Memory Code Protection bits
   493                           ;	CP = OFF, Code protection off
   494                           ;	Brown-out Reset Enable bit
   495                           ;	BOREN = OFF, BOR disabled
   496                           ;	Low Voltage In-Circuit Serial Programming Enable bit
   497                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   498                           ;	Data EE Memory Code Protection
   499                           ;	CPD = OFF, Code Protection off
   500                           ;	FLASH Program Memory Write Enable
   501                           ;	WRT = OFF, Unprotected program memory may not be written to by EECON control
   502                           ;	In-Circuit Debugger Mode bit
   503                           ;	DEBUG = 0x1, unprogrammed default
   504     2007                     	org	8199
   505     2007  3D3A               	dw	15674

Data Sizes:
    Strings     0
    Constant    0
    Data        17
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       5
    BANK0            80      0      16
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BANK3               96      0       0      0.0%
BITBANK3            96      0       0      0.0%
BANK2               96      0       0      0.0%
BITBANK2            96      0       0      0.0%
BANK1               80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BANK0               80      0      16     20.0%
BITBANK0            80      0       0      0.0%
COMMON              14      3       5     35.7%
BITCOMMON           14      0       0      0.0%
DATA                 0      0      21      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Tue Nov 19 15:04:18 2024

                      pc 0002                       l26 07B3                       u10 079C  
                     u11 079B                       u20 07AB                       u21 07AA  
                     u30 07B1                       u31 07AF                       u40 07B2  
                     u50 07B7                       u51 07B6                       u60 07BC  
                     u61 07BB                       u70 07C4                       u71 07C3  
                     u80 07CB                       u81 07CA                       u97 07A0  
                     fsr 0004                      l600 07C4                      l610 07D6  
                    l602 07C6                      l604 07CB                      l606 07CE  
                    l608 07D0                      l580 078C                      l590 07A5  
                    l582 078F                      l592 07AB                      l584 0793  
                    l594 07B7                      l586 0796                      l596 07BC  
                    l588 079C                      l598 07BE                      u107 07DC  
                    fsr0 0004                      indf 0000                     _main 078C  
                   btemp 007E                     start 0000                    ?_main 0070  
                  _PORTD 0008                    _TRISD 0088                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07E7  
           __end_of_main 07E7                   ??_main 0070             __pdataCOMMON 0074  
__end_of__initialization 07FC           __pcstackCOMMON 0070             __pidataBANK0 0769  
         _OPTION_REGbits 0081               __pmaintext 078C                  _segment 0020  
                _sentido 0074     end_of_initialization 07FC                _PORTBbits 0006  
              _TRISBbits 0086            __pidataCOMMON 0768      start_initialization 07E7  
             init_fetch0 0779              __pdataBANK0 0020              __pbssCOMMON 0073  
              ___latbits 0002                 _contador 0073                 init_ram0 077D  
