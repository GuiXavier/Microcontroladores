

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Tue Feb 11 14:31:56 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F877
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    10                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,space=0,delta=2
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17     0000                     
    18                           ; Generated 12/10/2023 GMT
    19                           ; 
    20                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F877 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52     0004                     fsr             equ	4
    53     0004                     fsr0            equ	4
    54     0000                     indf            equ	0
    55     0000                     indf0           equ	0
    56     0002                     pc              equ	2
    57     0002                     pcl             equ	2
    58     000A                     pclath          equ	10
    59     0003                     status          equ	3
    60     0000                     INDF            equ	0	;# 
    61     0001                     TMR0            equ	1	;# 
    62     0002                     PCL             equ	2	;# 
    63     0003                     STATUS          equ	3	;# 
    64     0004                     FSR             equ	4	;# 
    65     0005                     PORTA           equ	5	;# 
    66     0006                     PORTB           equ	6	;# 
    67     0007                     PORTC           equ	7	;# 
    68     0008                     PORTD           equ	8	;# 
    69     0009                     PORTE           equ	9	;# 
    70     000A                     PCLATH          equ	10	;# 
    71     000B                     INTCON          equ	11	;# 
    72     000C                     PIR1            equ	12	;# 
    73     000D                     PIR2            equ	13	;# 
    74     000E                     TMR1            equ	14	;# 
    75     000E                     TMR1L           equ	14	;# 
    76     000F                     TMR1H           equ	15	;# 
    77     0010                     T1CON           equ	16	;# 
    78     0011                     TMR2            equ	17	;# 
    79     0012                     T2CON           equ	18	;# 
    80     0013                     SSPBUF          equ	19	;# 
    81     0014                     SSPCON          equ	20	;# 
    82     0015                     CCPR1           equ	21	;# 
    83     0015                     CCPR1L          equ	21	;# 
    84     0016                     CCPR1H          equ	22	;# 
    85     0017                     CCP1CON         equ	23	;# 
    86     0018                     RCSTA           equ	24	;# 
    87     0019                     TXREG           equ	25	;# 
    88     001A                     RCREG           equ	26	;# 
    89     001B                     CCPR2           equ	27	;# 
    90     001B                     CCPR2L          equ	27	;# 
    91     001C                     CCPR2H          equ	28	;# 
    92     001D                     CCP2CON         equ	29	;# 
    93     001E                     ADRESH          equ	30	;# 
    94     001F                     ADCON0          equ	31	;# 
    95     0081                     OPTION_REG      equ	129	;# 
    96     0085                     TRISA           equ	133	;# 
    97     0086                     TRISB           equ	134	;# 
    98     0087                     TRISC           equ	135	;# 
    99     0088                     TRISD           equ	136	;# 
   100     0089                     TRISE           equ	137	;# 
   101     008C                     PIE1            equ	140	;# 
   102     008D                     PIE2            equ	141	;# 
   103     008E                     PCON            equ	142	;# 
   104     0091                     SSPCON2         equ	145	;# 
   105     0092                     PR2             equ	146	;# 
   106     0093                     SSPADD          equ	147	;# 
   107     0094                     SSPSTAT         equ	148	;# 
   108     0098                     TXSTA           equ	152	;# 
   109     0099                     SPBRG           equ	153	;# 
   110     009E                     ADRESL          equ	158	;# 
   111     009F                     ADCON1          equ	159	;# 
   112     010C                     EEDATA          equ	268	;# 
   113     010D                     EEADR           equ	269	;# 
   114     010E                     EEDATH          equ	270	;# 
   115     010F                     EEADRH          equ	271	;# 
   116     018C                     EECON1          equ	396	;# 
   117     018D                     EECON2          equ	397	;# 
   118     0000                     INDF            equ	0	;# 
   119     0001                     TMR0            equ	1	;# 
   120     0002                     PCL             equ	2	;# 
   121     0003                     STATUS          equ	3	;# 
   122     0004                     FSR             equ	4	;# 
   123     0005                     PORTA           equ	5	;# 
   124     0006                     PORTB           equ	6	;# 
   125     0007                     PORTC           equ	7	;# 
   126     0008                     PORTD           equ	8	;# 
   127     0009                     PORTE           equ	9	;# 
   128     000A                     PCLATH          equ	10	;# 
   129     000B                     INTCON          equ	11	;# 
   130     000C                     PIR1            equ	12	;# 
   131     000D                     PIR2            equ	13	;# 
   132     000E                     TMR1            equ	14	;# 
   133     000E                     TMR1L           equ	14	;# 
   134     000F                     TMR1H           equ	15	;# 
   135     0010                     T1CON           equ	16	;# 
   136     0011                     TMR2            equ	17	;# 
   137     0012                     T2CON           equ	18	;# 
   138     0013                     SSPBUF          equ	19	;# 
   139     0014                     SSPCON          equ	20	;# 
   140     0015                     CCPR1           equ	21	;# 
   141     0015                     CCPR1L          equ	21	;# 
   142     0016                     CCPR1H          equ	22	;# 
   143     0017                     CCP1CON         equ	23	;# 
   144     0018                     RCSTA           equ	24	;# 
   145     0019                     TXREG           equ	25	;# 
   146     001A                     RCREG           equ	26	;# 
   147     001B                     CCPR2           equ	27	;# 
   148     001B                     CCPR2L          equ	27	;# 
   149     001C                     CCPR2H          equ	28	;# 
   150     001D                     CCP2CON         equ	29	;# 
   151     001E                     ADRESH          equ	30	;# 
   152     001F                     ADCON0          equ	31	;# 
   153     0081                     OPTION_REG      equ	129	;# 
   154     0085                     TRISA           equ	133	;# 
   155     0086                     TRISB           equ	134	;# 
   156     0087                     TRISC           equ	135	;# 
   157     0088                     TRISD           equ	136	;# 
   158     0089                     TRISE           equ	137	;# 
   159     008C                     PIE1            equ	140	;# 
   160     008D                     PIE2            equ	141	;# 
   161     008E                     PCON            equ	142	;# 
   162     0091                     SSPCON2         equ	145	;# 
   163     0092                     PR2             equ	146	;# 
   164     0093                     SSPADD          equ	147	;# 
   165     0094                     SSPSTAT         equ	148	;# 
   166     0098                     TXSTA           equ	152	;# 
   167     0099                     SPBRG           equ	153	;# 
   168     009E                     ADRESL          equ	158	;# 
   169     009F                     ADCON1          equ	159	;# 
   170     010C                     EEDATA          equ	268	;# 
   171     010D                     EEADR           equ	269	;# 
   172     010E                     EEDATH          equ	270	;# 
   173     010F                     EEADRH          equ	271	;# 
   174     018C                     EECON1          equ	396	;# 
   175     018D                     EECON2          equ	397	;# 
   176                           
   177                           	psect	idataCOMMON
   178     009C                     __pidataCOMMON:
   179                           
   180                           ;initializer for main@rb1_anterior
   181     009C  3401               	retlw	1
   182     000E                     _TMR1L          set	14
   183     000F                     _TMR1H          set	15
   184     0010                     _T1CONbits      set	16
   185     0008                     _PORTD          set	8
   186     0006                     _PORTBbits      set	6
   187     000B                     _INTCONbits     set	11
   188     0008                     _PORTDbits      set	8
   189     000C                     _PIR1bits       set	12
   190     0081                     _OPTION_REGbits set	129
   191     008C                     _PIE1bits       set	140
   192     0086                     _TRISBbits      set	134
   193     0088                     _TRISD          set	136
   194                           
   195                           	psect	cinit
   196     000F                     start_initialization:	
   197                           ; #config settings
   198                           
   199     000F                     __initialization:
   200                           
   201                           ; Initialize objects allocated to COMMON
   202     000F  120A  118A  209C  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   203     0014  00F6               	movwf	__pdataCOMMON& (0+127)
   204                           
   205                           ; Clear objects allocated to COMMON
   206     0015  01F0               	clrf	__pbssCOMMON& (0+127)
   207     0016  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   208     0017  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   209     0018                     end_of_initialization:	
   210                           ;End of C runtime variable initialization code
   211                           
   212     0018                     __end_of__initialization:
   213     0018  0183               	clrf	3
   214     0019  120A  118A  281C   	ljmp	_main	;jump to C main() function
   215                           
   216                           	psect	bssCOMMON
   217     0070                     __pbssCOMMON:
   218     0070                     _contagem_overflows:
   219     0070                     	ds	1
   220     0071                     _tempo_alvo_overflows:
   221     0071                     	ds	1
   222     0072                     _motor_ativo:
   223     0072                     	ds	1
   224                           
   225                           	psect	dataCOMMON
   226     0076                     __pdataCOMMON:
   227     0076                     main@rb1_anterior:
   228     0076                     	ds	1
   229                           
   230                           	psect	cstackCOMMON
   231     0073                     __pcstackCOMMON:
   232     0073                     ?_configurar_pinos:
   233     0073                     ?_configurar_timer1:	
   234                           ; 1 bytes @ 0x0
   235                           
   236     0073                     ?_configurar_interrupcoes:	
   237                           ; 1 bytes @ 0x0
   238                           
   239     0073                     ?_isr:	
   240                           ; 1 bytes @ 0x0
   241                           
   242     0073                     ?_main:	
   243                           ; 1 bytes @ 0x0
   244                           
   245     0073                     ??_isr:	
   246                           ; 1 bytes @ 0x0
   247                           
   248                           
   249                           ; 1 bytes @ 0x0
   250     0073                     	ds	2
   251     0075                     main@rb1_atual:
   252     0075                     ??_configurar_pinos:	
   253                           ; 1 bytes @ 0x2
   254                           
   255     0075                     ??_configurar_timer1:	
   256                           ; 1 bytes @ 0x2
   257                           
   258     0075                     ??_configurar_interrupcoes:	
   259                           ; 1 bytes @ 0x2
   260                           
   261     0075                     ??_main:	
   262                           ; 1 bytes @ 0x2
   263                           
   264                           
   265                           ; 1 bytes @ 0x2
   266     0075                     	ds	1
   267                           
   268                           	psect	maintext
   269     001C                     __pmaintext:	
   270 ;;
   271 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   272 ;;
   273 ;; *************** function _main *****************
   274 ;; Defined at:
   275 ;;		line 54 in file "atividade10.c"
   276 ;; Parameters:    Size  Location     Type
   277 ;;		None
   278 ;; Auto vars:     Size  Location     Type
   279 ;;  rb1_atual       1    2[COMMON] unsigned char 
   280 ;; Return value:  Size  Location     Type
   281 ;;                  1    wreg      void 
   282 ;; Registers used:
   283 ;;		wreg, status,2, status,0, pclath, cstack
   284 ;; Tracked objects:
   285 ;;		On entry : B00/0
   286 ;;		On exit  : 0/0
   287 ;;		Unchanged: 0/0
   288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   289 ;;      Params:         0       0       0       0       0
   290 ;;      Locals:         1       0       0       0       0
   291 ;;      Temps:          0       0       0       0       0
   292 ;;      Totals:         1       0       0       0       0
   293 ;;Total ram usage:        1 bytes
   294 ;; Hardware stack levels required when called: 2
   295 ;; This function calls:
   296 ;;		_configurar_interrupcoes
   297 ;;		_configurar_pinos
   298 ;;		_configurar_timer1
   299 ;; This function is called by:
   300 ;;		Startup code after reset
   301 ;; This function uses a non-reentrant model
   302 ;;
   303                           
   304     001C                     _main:	
   305                           ;psect for function _main
   306                           
   307     001C                     l663:	
   308                           ;incstack = 0
   309                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   310                           
   311                           
   312                           ;atividade10.c: 56:             if (!motor_ativo)
   313     001C  120A  118A  2078  120A  118A  	fcall	_configurar_pinos
   314     0021                     l665:
   315                           
   316                           ;atividade10.c: 57:             {
   317     0021  120A  118A  2086  120A  118A  	fcall	_configurar_timer1
   318     0026                     l667:
   319                           
   320                           ;atividade10.c: 58:                 motor_ativo = 1;
   321     0026  120A  118A  2093  120A  118A  	fcall	_configurar_interrupcoes
   322     002B                     l669:
   323                           
   324                           ;atividade10.c: 63:         };atividade10.c: 64:         rb1_anterior = rb1_atual;
   325     002B  1283               	bcf	3,5	;RP0=0, select bank0
   326     002C  1303               	bcf	3,6	;RP1=0, select bank0
   327     002D  0C06               	rrf	6,w	;volatile
   328     002E  3901               	andlw	1
   329     002F  00F5               	movwf	main@rb1_atual
   330     0030                     l671:
   331                           
   332                           ;atividade10.c: 65:     }
   333     0030  0376               	decf	main@rb1_anterior,w
   334     0031  1D03               	btfss	3,2
   335     0032  2834               	goto	u61
   336     0033  2835               	goto	u60
   337     0034                     u61:
   338     0034  2845               	goto	l685
   339     0035                     u60:
   340     0035                     l673:
   341     0035  0875               	movf	main@rb1_atual,w
   342     0036  1D03               	btfss	3,2
   343     0037  2839               	goto	u71
   344     0038  283A               	goto	u70
   345     0039                     u71:
   346     0039  2845               	goto	l685
   347     003A                     u70:
   348     003A                     l675:
   349                           
   350                           ;atividade10.c: 66: };atividade10.c: 67: 
   351     003A  0872               	movf	_motor_ativo,w	;volatile
   352     003B  1D03               	btfss	3,2
   353     003C  283E               	goto	u81
   354     003D  283F               	goto	u80
   355     003E                     u81:
   356     003E  2845               	goto	l685
   357     003F                     u80:
   358     003F                     l677:
   359                           
   360                           ;atividade10.c: 68: void configurar_pinos(void);atividade10.c: 69: {
   361     003F  3001               	movlw	1
   362     0040  00F2               	movwf	_motor_ativo	;volatile
   363     0041                     l679:
   364                           
   365                           ;atividade10.c: 70:     TRISD = 0x00;
   366     0041  01F0               	clrf	_contagem_overflows	;volatile
   367     0042                     l681:
   368                           
   369                           ;atividade10.c: 71:     PORTD = 0x00;
   370     0042  3026               	movlw	38
   371     0043  00F1               	movwf	_tempo_alvo_overflows	;volatile
   372     0044                     l683:
   373                           
   374                           ;atividade10.c: 72:     TRISBbits.TRISB0 = 1;
   375     0044  1408               	bsf	8,0	;volatile
   376     0045                     l685:
   377                           
   378                           ;atividade10.c: 75: }
   379     0045  0875               	movf	main@rb1_atual,w
   380     0046  00F6               	movwf	main@rb1_anterior
   381     0047  282B               	goto	l669
   382     0048  120A  118A  280C   	ljmp	start
   383     004B                     __end_of_main:
   384                           
   385                           	psect	text1
   386     0086                     __ptext1:	
   387 ;; *************** function _configurar_timer1 *****************
   388 ;; Defined at:
   389 ;;		line 88 in file "atividade10.c"
   390 ;; Parameters:    Size  Location     Type
   391 ;;		None
   392 ;; Auto vars:     Size  Location     Type
   393 ;;		None
   394 ;; Return value:  Size  Location     Type
   395 ;;                  1    wreg      void 
   396 ;; Registers used:
   397 ;;		wreg, status,2, status,0
   398 ;; Tracked objects:
   399 ;;		On entry : 0/0
   400 ;;		On exit  : 0/0
   401 ;;		Unchanged: 0/0
   402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   403 ;;      Params:         0       0       0       0       0
   404 ;;      Locals:         0       0       0       0       0
   405 ;;      Temps:          0       0       0       0       0
   406 ;;      Totals:         0       0       0       0       0
   407 ;;Total ram usage:        0 bytes
   408 ;; Hardware stack levels used: 1
   409 ;; Hardware stack levels required when called: 1
   410 ;; This function calls:
   411 ;;		Nothing
   412 ;; This function is called by:
   413 ;;		_main
   414 ;; This function uses a non-reentrant model
   415 ;;
   416                           
   417     0086                     _configurar_timer1:	
   418                           ;psect for function _configurar_timer1
   419                           
   420     0086                     l619:	
   421                           ;incstack = 0
   422                           ; Regs used in _configurar_timer1: [wreg+status,2+status,0]
   423                           
   424                           
   425                           ;atividade10.c: 90:     INTCONbits.GIE = 1;
   426     0086  1283               	bcf	3,5	;RP0=0, select bank0
   427     0087  1303               	bcf	3,6	;RP1=0, select bank0
   428     0088  1090               	bcf	16,1	;volatile
   429     0089                     l621:
   430                           
   431                           ;atividade10.c: 91:     INTCONbits.PEIE = 1;
   432     0089  3030               	movlw	48
   433     008A  0490               	iorwf	16,f	;volatile
   434     008B                     l623:
   435                           
   436                           ;atividade10.c: 92:     OPTION_REGbits.INTEDG = 0;
   437     008B  1410               	bsf	16,0	;volatile
   438     008C                     l625:
   439                           
   440                           ;atividade10.c: 93:     INTCONbits.INTE = 1;
   441     008C  018F               	clrf	15	;volatile
   442     008D                     l627:
   443                           
   444                           ;atividade10.c: 94:     INTCONbits.INTF = 0;
   445     008D  018E               	clrf	14	;volatile
   446     008E                     l629:
   447                           
   448                           ;atividade10.c: 95:     OPTION_REGbits.nRBPU = 0;
   449     008E  100C               	bcf	12,0	;volatile
   450     008F                     l631:
   451                           
   452                           ;atividade10.c: 96: }
   453     008F  1683               	bsf	3,5	;RP0=1, select bank1
   454     0090  1303               	bcf	3,6	;RP1=0, select bank1
   455     0091  140C               	bsf	12,0	;volatile
   456     0092                     l64:
   457     0092  0008               	return
   458     0093                     __end_of_configurar_timer1:
   459                           
   460                           	psect	text2
   461     0078                     __ptext2:	
   462 ;; *************** function _configurar_pinos *****************
   463 ;; Defined at:
   464 ;;		line 79 in file "atividade10.c"
   465 ;; Parameters:    Size  Location     Type
   466 ;;		None
   467 ;; Auto vars:     Size  Location     Type
   468 ;;		None
   469 ;; Return value:  Size  Location     Type
   470 ;;                  1    wreg      void 
   471 ;; Registers used:
   472 ;;		status,2
   473 ;; Tracked objects:
   474 ;;		On entry : 0/0
   475 ;;		On exit  : 0/0
   476 ;;		Unchanged: 0/0
   477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   478 ;;      Params:         0       0       0       0       0
   479 ;;      Locals:         0       0       0       0       0
   480 ;;      Temps:          0       0       0       0       0
   481 ;;      Totals:         0       0       0       0       0
   482 ;;Total ram usage:        0 bytes
   483 ;; Hardware stack levels used: 1
   484 ;; Hardware stack levels required when called: 1
   485 ;; This function calls:
   486 ;;		Nothing
   487 ;; This function is called by:
   488 ;;		_main
   489 ;; This function uses a non-reentrant model
   490 ;;
   491                           
   492     0078                     _configurar_pinos:	
   493                           ;psect for function _configurar_pinos
   494                           
   495     0078                     l611:	
   496                           ;incstack = 0
   497                           ; Regs used in _configurar_pinos: [status,2]
   498                           
   499                           
   500                           ;atividade10.c: 81:     T1CONbits.TMR1ON = 1;
   501     0078  1683               	bsf	3,5	;RP0=1, select bank1
   502     0079  1303               	bcf	3,6	;RP1=0, select bank1
   503     007A  0188               	clrf	8	;volatile
   504                           
   505                           ;atividade10.c: 82:     TMR1H = 0;
   506     007B  1283               	bcf	3,5	;RP0=0, select bank0
   507     007C  1303               	bcf	3,6	;RP1=0, select bank0
   508     007D  0188               	clrf	8	;volatile
   509     007E                     l613:
   510                           
   511                           ;atividade10.c: 83:     TMR1L = 0;
   512     007E  1683               	bsf	3,5	;RP0=1, select bank1
   513     007F  1303               	bcf	3,6	;RP1=0, select bank1
   514     0080  1406               	bsf	6,0	;volatile
   515     0081                     l615:
   516                           
   517                           ;atividade10.c: 84:     PIR1bits.TMR1IF = 0;
   518     0081  1486               	bsf	6,1	;volatile
   519     0082                     l617:
   520                           
   521                           ;atividade10.c: 85:     PIE1bits.TMR1IE = 1;
   522     0082  1283               	bcf	3,5	;RP0=0, select bank0
   523     0083  1303               	bcf	3,6	;RP1=0, select bank0
   524     0084  1008               	bcf	8,0	;volatile
   525     0085                     l61:
   526     0085  0008               	return
   527     0086                     __end_of_configurar_pinos:
   528                           
   529                           	psect	text3
   530     0093                     __ptext3:	
   531 ;; *************** function _configurar_interrupcoes *****************
   532 ;; Defined at:
   533 ;;		line 99 in file "atividade10.c"
   534 ;; Parameters:    Size  Location     Type
   535 ;;		None
   536 ;; Auto vars:     Size  Location     Type
   537 ;;		None
   538 ;; Return value:  Size  Location     Type
   539 ;;                  1    wreg      void 
   540 ;; Registers used:
   541 ;;		None
   542 ;; Tracked objects:
   543 ;;		On entry : 0/0
   544 ;;		On exit  : 0/0
   545 ;;		Unchanged: 0/0
   546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   547 ;;      Params:         0       0       0       0       0
   548 ;;      Locals:         0       0       0       0       0
   549 ;;      Temps:          0       0       0       0       0
   550 ;;      Totals:         0       0       0       0       0
   551 ;;Total ram usage:        0 bytes
   552 ;; Hardware stack levels used: 1
   553 ;; Hardware stack levels required when called: 1
   554 ;; This function calls:
   555 ;;		Nothing
   556 ;; This function is called by:
   557 ;;		_main
   558 ;; This function uses a non-reentrant model
   559 ;;
   560                           
   561     0093                     _configurar_interrupcoes:	
   562                           ;psect for function _configurar_interrupcoes
   563                           
   564     0093                     l633:	
   565                           ;incstack = 0
   566                           ; Regs used in _configurar_interrupcoes: []
   567                           
   568     0093  178B               	bsf	11,7	;volatile
   569     0094  170B               	bsf	11,6	;volatile
   570     0095  1683               	bsf	3,5	;RP0=1, select bank1
   571     0096  1303               	bcf	3,6	;RP1=0, select bank1
   572     0097  1301               	bcf	1,6	;volatile
   573     0098  160B               	bsf	11,4	;volatile
   574     0099  108B               	bcf	11,1	;volatile
   575     009A  1381               	bcf	1,7	;volatile
   576     009B                     l67:
   577     009B  0008               	return
   578     009C                     __end_of_configurar_interrupcoes:
   579                           
   580                           	psect	text4
   581     004B                     __ptext4:	
   582 ;; *************** function _isr *****************
   583 ;; Defined at:
   584 ;;		line 25 in file "atividade10.c"
   585 ;; Parameters:    Size  Location     Type
   586 ;;		None
   587 ;; Auto vars:     Size  Location     Type
   588 ;;		None
   589 ;; Return value:  Size  Location     Type
   590 ;;                  1    wreg      void 
   591 ;; Registers used:
   592 ;;		wreg, status,2, status,0
   593 ;; Tracked objects:
   594 ;;		On entry : 0/0
   595 ;;		On exit  : 0/0
   596 ;;		Unchanged: 0/0
   597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   598 ;;      Params:         0       0       0       0       0
   599 ;;      Locals:         0       0       0       0       0
   600 ;;      Temps:          2       0       0       0       0
   601 ;;      Totals:         2       0       0       0       0
   602 ;;Total ram usage:        2 bytes
   603 ;; Hardware stack levels used: 1
   604 ;; This function calls:
   605 ;;		Nothing
   606 ;; This function is called by:
   607 ;;		Interrupt level 1
   608 ;; This function uses a non-reentrant model
   609 ;;
   610                           
   611     004B                     _isr:	
   612                           ;psect for function _isr
   613                           
   614     004B                     i1l635:
   615                           
   616                           ;atividade10.c: 27:         }
   617     004B  1283               	bcf	3,5	;RP0=0, select bank0
   618     004C  1303               	bcf	3,6	;RP1=0, select bank0
   619     004D  1C0C               	btfss	12,0	;volatile
   620     004E  2850               	goto	u1_21
   621     004F  2851               	goto	u1_20
   622     0050                     u1_21:
   623     0050  2861               	goto	i1l649
   624     0051                     u1_20:
   625     0051                     i1l637:
   626                           
   627                           ;atividade10.c: 28:     };atividade10.c: 29: 
   628     0051  100C               	bcf	12,0	;volatile
   629     0052                     i1l639:
   630                           
   631                           ;atividade10.c: 30:     if (INTCONbits.INTF)
   632     0052  0872               	movf	_motor_ativo,w	;volatile
   633     0053  1903               	btfsc	3,2
   634     0054  2856               	goto	u2_21
   635     0055  2857               	goto	u2_20
   636     0056                     u2_21:
   637     0056  2861               	goto	i1l649
   638     0057                     u2_20:
   639     0057                     i1l641:
   640                           
   641                           ;atividade10.c: 31:     {;atividade10.c: 32:         INTCONbits.INTF = 0;
   642     0057  3001               	movlw	1
   643     0058  07F0               	addwf	_contagem_overflows,f	;volatile
   644     0059                     i1l643:
   645                           
   646                           ;atividade10.c: 33:         if (!motor_ativo)
   647     0059  0871               	movf	_tempo_alvo_overflows,w	;volatile
   648     005A  0270               	subwf	_contagem_overflows,w	;volatile
   649     005B  1C03               	skipc
   650     005C  285E               	goto	u3_21
   651     005D  285F               	goto	u3_20
   652     005E                     u3_21:
   653     005E  2861               	goto	i1l649
   654     005F                     u3_20:
   655     005F                     i1l645:
   656                           
   657                           ;atividade10.c: 34:         {;atividade10.c: 35:             motor_ativo = 1;
   658     005F  1008               	bcf	8,0	;volatile
   659     0060                     i1l647:
   660                           
   661                           ;atividade10.c: 36:             contagem_overflows = 0;
   662     0060  01F2               	clrf	_motor_ativo	;volatile
   663     0061                     i1l649:
   664                           
   665                           ;atividade10.c: 41: }
   666     0061  1C8B               	btfss	11,1	;volatile
   667     0062  2864               	goto	u4_21
   668     0063  2865               	goto	u4_20
   669     0064                     u4_21:
   670     0064  2871               	goto	i1l46
   671     0065                     u4_20:
   672     0065                     i1l651:
   673                           
   674                           ;atividade10.c: 42: ;atividade10.c: 43: void main(void)
   675     0065  108B               	bcf	11,1	;volatile
   676     0066                     i1l653:
   677                           
   678                           ;atividade10.c: 44: {
   679     0066  0872               	movf	_motor_ativo,w	;volatile
   680     0067  1D03               	btfss	3,2
   681     0068  286A               	goto	u5_21
   682     0069  286B               	goto	u5_20
   683     006A                     u5_21:
   684     006A  2871               	goto	i1l46
   685     006B                     u5_20:
   686     006B                     i1l655:
   687                           
   688                           ;atividade10.c: 45:     configurar_pinos();;atividade10.c: 46:     configurar_timer1();
   689     006B  3001               	movlw	1
   690     006C  00F2               	movwf	_motor_ativo	;volatile
   691     006D                     i1l657:
   692                           
   693                           ;atividade10.c: 47:     configurar_interrupcoes();
   694     006D  01F0               	clrf	_contagem_overflows	;volatile
   695     006E                     i1l659:
   696                           
   697                           ;atividade10.c: 48: 
   698     006E  3013               	movlw	19
   699     006F  00F1               	movwf	_tempo_alvo_overflows	;volatile
   700     0070                     i1l661:
   701                           
   702                           ;atividade10.c: 49:     static unsigned char rb1_anterior = 1;
   703     0070  1408               	bsf	8,0	;volatile
   704     0071                     i1l46:
   705     0071  0874               	movf	??_isr+1,w
   706     0072  008A               	movwf	10
   707     0073  0E73               	swapf	??_isr,w
   708     0074  0083               	movwf	3
   709     0075  0EFE               	swapf	btemp,f
   710     0076  0E7E               	swapf	btemp,w
   711     0077  0009               	retfie
   712     0078                     __end_of_isr:
   713     0002                     ___latbits      equ	2
   714     007E                     btemp           set	126	;btemp
   715     007E                     wtemp0          set	126
   716                           
   717                           	psect	intentry
   718     0004                     __pintentry:	
   719                           ;incstack = 0
   720                           ; Regs used in _isr: [wreg+status,2+status,0]
   721                           
   722     0004                     interrupt_function:
   723     007E                     saved_w         set	btemp
   724     0004  00FE               	movwf	btemp
   725     0005  0E03               	swapf	3,w
   726     0006  00F3               	movwf	??_isr
   727     0007  080A               	movf	10,w
   728     0008  00F4               	movwf	??_isr+1
   729     0009  120A  118A  284B   	ljmp	_isr
   730                           
   731                           	psect	config
   732                           
   733                           ;Config register CONFIG @ 0x2007
   734                           ;	Oscillator Selection bits
   735                           ;	FOSC = XT, XT oscillator
   736                           ;	Watchdog Timer Enable bit
   737                           ;	WDTE = OFF, WDT disabled
   738                           ;	Power-up Timer Enable bit
   739                           ;	PWRTE = OFF, PWRT disabled
   740                           ;	FLASH Program Memory Code Protection bits
   741                           ;	CP = OFF, Code protection off
   742                           ;	Brown-out Reset Enable bit
   743                           ;	BOREN = OFF, BOR disabled
   744                           ;	Low Voltage In-Circuit Serial Programming Enable bit
   745                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   746                           ;	Data EE Memory Code Protection
   747                           ;	CPD = 0x1, unprogrammed default
   748                           ;	FLASH Program Memory Write Enable
   749                           ;	WRT = OFF, Unprotected program memory may not be written to by EECON control
   750                           ;	In-Circuit Debugger Mode bit
   751                           ;	DEBUG = 0x1, unprogrammed default
   752     2007                     	org	8199
   753     2007  3D39               	dw	15673

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0      30
                                              2 COMMON     1     1      0
            _configurar_interrupcoes
                   _configurar_pinos
                  _configurar_timer1
 ---------------------------------------------------------------------------------
 (1) _configurar_timer1                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configurar_pinos                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configurar_interrupcoes                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _configurar_interrupcoes
   _configurar_pinos
   _configurar_timer1

 _isr (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BANK3               96      0       0      0.0%
BITBANK3            96      0       0      0.0%
BANK2               96      0       0      0.0%
BITBANK2            96      0       0      0.0%
BANK1               80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BANK0               80      0       0      0.0%
BITBANK0            80      0       0      0.0%
COMMON              14      3       7     50.0%
BITCOMMON           14      0       0      0.0%
DATA                 0      0       7      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Tue Feb 11 14:31:56 2025

                             l61 0085                               l64 0092                               l67 009B  
                             u60 0035                               u61 0034                               u70 003A  
                             u71 0039                               u80 003F                               u81 003E  
                            l611 0078                              l613 007E                              l621 0089  
                            l615 0081                              l631 008F                              l623 008B  
                            l633 0093                              l617 0082                              l625 008C  
                            l627 008D                              l619 0086                              l629 008E  
                            l671 0030                              l663 001C                              l681 0042  
                            l673 0035                              l665 0021                              l683 0044  
                            l675 003A                              l667 0026                              l677 003F  
                            l685 0045                              l669 002B                              l679 0041  
                            _isr 004B                             ?_isr 0073        ??_configurar_interrupcoes 0075  
                           i1l46 0071                             u1_20 0051                             u1_21 0050  
                           u2_20 0057                             u2_21 0056                             u3_20 005F  
                           u3_21 005E                             u4_20 0065                             u4_21 0064  
                           u5_20 006B                             u5_21 006A                             _main 001C  
                           btemp 007E                             start 000C                 main@rb1_anterior 0076  
                          ??_isr 0073                            ?_main 0073                            i1l641 0057  
                          i1l651 0065                            i1l643 0059                            i1l635 004B  
                          i1l661 0070                            i1l653 0066                            i1l645 005F  
                          i1l637 0051                            i1l655 006B                            i1l647 0060  
                          i1l639 0052                            i1l657 006D                            i1l649 0061  
                          i1l659 006E                            _TMR1H 000F                            _TMR1L 000E  
                          _PORTD 0008                            _TRISD 0088                            pclath 000A  
                          status 0003                            wtemp0 007E                ?_configurar_pinos 0073  
             ??_configurar_pinos 0075                  __initialization 000F                    main@rb1_atual 0075  
                   __end_of_main 004B  __end_of_configurar_interrupcoes 009C                           ??_main 0075  
           _tempo_alvo_overflows 0071                     __pdataCOMMON 0076                           saved_w 007E  
              _configurar_timer1 0086               ?_configurar_timer1 0073          __end_of__initialization 0018  
            ??_configurar_timer1 0075                   __pcstackCOMMON 0073                   _OPTION_REGbits 0081  
      __end_of_configurar_timer1 0093                       __pmaintext 001C                       __pintentry 0004  
                        __ptext1 0086                          __ptext2 0078                          __ptext3 0093  
                        __ptext4 004B                        _T1CONbits 0010         ?_configurar_interrupcoes 0073  
           end_of_initialization 0018                        _PORTBbits 0006                        _PORTDbits 0008  
                      _TRISBbits 0086                    __pidataCOMMON 009C               _contagem_overflows 0070  
            start_initialization 000F                      __end_of_isr 0078                 _configurar_pinos 0078  
                    __pbssCOMMON 0070                        ___latbits 0002                interrupt_function 0004  
                       _PIE1bits 008C                         _PIR1bits 000C         __end_of_configurar_pinos 0086  
                     _INTCONbits 000B                         intlevel1 0000          _configurar_interrupcoes 0093  
                    _motor_ativo 0072  
