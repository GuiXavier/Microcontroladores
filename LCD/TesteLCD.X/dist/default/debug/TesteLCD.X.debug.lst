

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Mon Nov 18 14:36:26 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F877
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     8                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14     0000                     
    15                           ; Generated 12/10/2023 GMT
    16                           ; 
    17                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49     0004                     fsr             equ	4
    50     0004                     fsr0            equ	4
    51     0000                     indf            equ	0
    52     0000                     indf0           equ	0
    53     0002                     pc              equ	2
    54     0002                     pcl             equ	2
    55     000A                     pclath          equ	10
    56     0003                     status          equ	3
    57     0000                     INDF            equ	0	;# 
    58     0001                     TMR0            equ	1	;# 
    59     0002                     PCL             equ	2	;# 
    60     0003                     STATUS          equ	3	;# 
    61     0004                     FSR             equ	4	;# 
    62     0005                     PORTA           equ	5	;# 
    63     0006                     PORTB           equ	6	;# 
    64     0007                     PORTC           equ	7	;# 
    65     0008                     PORTD           equ	8	;# 
    66     0009                     PORTE           equ	9	;# 
    67     000A                     PCLATH          equ	10	;# 
    68     000B                     INTCON          equ	11	;# 
    69     000C                     PIR1            equ	12	;# 
    70     000D                     PIR2            equ	13	;# 
    71     000E                     TMR1            equ	14	;# 
    72     000E                     TMR1L           equ	14	;# 
    73     000F                     TMR1H           equ	15	;# 
    74     0010                     T1CON           equ	16	;# 
    75     0011                     TMR2            equ	17	;# 
    76     0012                     T2CON           equ	18	;# 
    77     0013                     SSPBUF          equ	19	;# 
    78     0014                     SSPCON          equ	20	;# 
    79     0015                     CCPR1           equ	21	;# 
    80     0015                     CCPR1L          equ	21	;# 
    81     0016                     CCPR1H          equ	22	;# 
    82     0017                     CCP1CON         equ	23	;# 
    83     0018                     RCSTA           equ	24	;# 
    84     0019                     TXREG           equ	25	;# 
    85     001A                     RCREG           equ	26	;# 
    86     001B                     CCPR2           equ	27	;# 
    87     001B                     CCPR2L          equ	27	;# 
    88     001C                     CCPR2H          equ	28	;# 
    89     001D                     CCP2CON         equ	29	;# 
    90     001E                     ADRESH          equ	30	;# 
    91     001F                     ADCON0          equ	31	;# 
    92     0081                     OPTION_REG      equ	129	;# 
    93     0085                     TRISA           equ	133	;# 
    94     0086                     TRISB           equ	134	;# 
    95     0087                     TRISC           equ	135	;# 
    96     0088                     TRISD           equ	136	;# 
    97     0089                     TRISE           equ	137	;# 
    98     008C                     PIE1            equ	140	;# 
    99     008D                     PIE2            equ	141	;# 
   100     008E                     PCON            equ	142	;# 
   101     0091                     SSPCON2         equ	145	;# 
   102     0092                     PR2             equ	146	;# 
   103     0093                     SSPADD          equ	147	;# 
   104     0094                     SSPSTAT         equ	148	;# 
   105     0098                     TXSTA           equ	152	;# 
   106     0099                     SPBRG           equ	153	;# 
   107     009E                     ADRESL          equ	158	;# 
   108     009F                     ADCON1          equ	159	;# 
   109     010C                     EEDATA          equ	268	;# 
   110     010D                     EEADR           equ	269	;# 
   111     010E                     EEDATH          equ	270	;# 
   112     010F                     EEADRH          equ	271	;# 
   113     018C                     EECON1          equ	396	;# 
   114     018D                     EECON2          equ	397	;# 
   115     0000                     INDF            equ	0	;# 
   116     0001                     TMR0            equ	1	;# 
   117     0002                     PCL             equ	2	;# 
   118     0003                     STATUS          equ	3	;# 
   119     0004                     FSR             equ	4	;# 
   120     0005                     PORTA           equ	5	;# 
   121     0006                     PORTB           equ	6	;# 
   122     0007                     PORTC           equ	7	;# 
   123     0008                     PORTD           equ	8	;# 
   124     0009                     PORTE           equ	9	;# 
   125     000A                     PCLATH          equ	10	;# 
   126     000B                     INTCON          equ	11	;# 
   127     000C                     PIR1            equ	12	;# 
   128     000D                     PIR2            equ	13	;# 
   129     000E                     TMR1            equ	14	;# 
   130     000E                     TMR1L           equ	14	;# 
   131     000F                     TMR1H           equ	15	;# 
   132     0010                     T1CON           equ	16	;# 
   133     0011                     TMR2            equ	17	;# 
   134     0012                     T2CON           equ	18	;# 
   135     0013                     SSPBUF          equ	19	;# 
   136     0014                     SSPCON          equ	20	;# 
   137     0015                     CCPR1           equ	21	;# 
   138     0015                     CCPR1L          equ	21	;# 
   139     0016                     CCPR1H          equ	22	;# 
   140     0017                     CCP1CON         equ	23	;# 
   141     0018                     RCSTA           equ	24	;# 
   142     0019                     TXREG           equ	25	;# 
   143     001A                     RCREG           equ	26	;# 
   144     001B                     CCPR2           equ	27	;# 
   145     001B                     CCPR2L          equ	27	;# 
   146     001C                     CCPR2H          equ	28	;# 
   147     001D                     CCP2CON         equ	29	;# 
   148     001E                     ADRESH          equ	30	;# 
   149     001F                     ADCON0          equ	31	;# 
   150     0081                     OPTION_REG      equ	129	;# 
   151     0085                     TRISA           equ	133	;# 
   152     0086                     TRISB           equ	134	;# 
   153     0087                     TRISC           equ	135	;# 
   154     0088                     TRISD           equ	136	;# 
   155     0089                     TRISE           equ	137	;# 
   156     008C                     PIE1            equ	140	;# 
   157     008D                     PIE2            equ	141	;# 
   158     008E                     PCON            equ	142	;# 
   159     0091                     SSPCON2         equ	145	;# 
   160     0092                     PR2             equ	146	;# 
   161     0093                     SSPADD          equ	147	;# 
   162     0094                     SSPSTAT         equ	148	;# 
   163     0098                     TXSTA           equ	152	;# 
   164     0099                     SPBRG           equ	153	;# 
   165     009E                     ADRESL          equ	158	;# 
   166     009F                     ADCON1          equ	159	;# 
   167     010C                     EEDATA          equ	268	;# 
   168     010D                     EEADR           equ	269	;# 
   169     010E                     EEDATH          equ	270	;# 
   170     010F                     EEADRH          equ	271	;# 
   171     018C                     EECON1          equ	396	;# 
   172     018D                     EECON2          equ	397	;# 
   173     0009                     _PORTEbits      set	9
   174     0008                     _PORTD          set	8
   175     0088                     _TRISD          set	136
   176     0089                     _TRISE          set	137
   177                           
   178                           	psect	strings
   179     0003                     __pstrings:
   180     0003                     stringtab:
   181     0003                     __stringtab:
   182     0003                     stringcode:	
   183                           ;	String table - string pointers are 1 byte each
   184                           
   185     0003                     stringdir:
   186     0003  3000               	movlw	high stringdir
   187     0004  008A               	movwf	10
   188     0005  0804               	movf	4,w
   189     0006  0A84               	incf	4,f
   190     0007  0782               	addwf	2,f
   191     0008                     __stringbase:
   192     0008  3400               	retlw	0
   193     0009                     __end_of__stringtab:
   194     0009                     STR_2:
   195     0009  344D               	retlw	77	;'M'
   196     000A  3449               	retlw	73	;'I'
   197     000B  3443               	retlw	67	;'C'
   198     000C  3452               	retlw	82	;'R'
   199     000D  344F               	retlw	79	;'O'
   200     000E  3443               	retlw	67	;'C'
   201     000F  344F               	retlw	79	;'O'
   202     0010  344E               	retlw	78	;'N'
   203     0011  3454               	retlw	84	;'T'
   204     0012  3452               	retlw	82	;'R'
   205     0013  344F               	retlw	79	;'O'
   206     0014  344C               	retlw	76	;'L'
   207     0015  3441               	retlw	65	;'A'
   208     0016  3444               	retlw	68	;'D'
   209     0017  344F               	retlw	79	;'O'
   210     0018  3452               	retlw	82	;'R'
   211     0019  3400               	retlw	0
   212     001A                     STR_1:
   213     001A  3444               	retlw	68	;'D'
   214     001B  3449               	retlw	73	;'I'
   215     001C  3453               	retlw	83	;'S'
   216     001D  3443               	retlw	67	;'C'
   217     001E  3449               	retlw	73	;'I'
   218     001F  3450               	retlw	80	;'P'
   219     0020  344C               	retlw	76	;'L'
   220     0021  3449               	retlw	73	;'I'
   221     0022  344E               	retlw	78	;'N'
   222     0023  3441               	retlw	65	;'A'
   223     0024  3400               	retlw	0
   224                           
   225                           	psect	cinit
   226     07FC                     start_initialization:	
   227                           ; #config settings
   228                           
   229     07FC                     __initialization:
   230     07FC                     end_of_initialization:	
   231                           ;End of C runtime variable initialization code
   232                           
   233     07FC                     __end_of__initialization:
   234     07FC  0183               	clrf	3
   235     07FD  120A  118A  2FD1   	ljmp	_main	;jump to C main() function
   236                           
   237                           	psect	cstackCOMMON
   238     0070                     __pcstackCOMMON:
   239     0070                     ?_lcd_data:
   240     0070                     ?_lcd_command:	
   241                           ; 1 bytes @ 0x0
   242                           
   243     0070                     ?_lcd_initialise:	
   244                           ; 1 bytes @ 0x0
   245                           
   246     0070                     ?_main:	
   247                           ; 1 bytes @ 0x0
   248                           
   249     0070                     ??_lcd_data:	
   250                           ; 1 bytes @ 0x0
   251                           
   252     0070                     ??_lcd_command:	
   253                           ; 1 bytes @ 0x0
   254                           
   255                           
   256                           ; 1 bytes @ 0x0
   257     0070                     	ds	2
   258     0072                     lcd_data@data:
   259     0072                     lcd_command@cmd:	
   260                           ; 1 bytes @ 0x2
   261                           
   262                           
   263                           ; 1 bytes @ 0x2
   264     0072                     	ds	1
   265     0073                     ?_lcd_string:
   266     0073                     lcd_string@str:	
   267                           ; 1 bytes @ 0x3
   268                           
   269     0073                     ??_lcd_initialise:	
   270                           ; 1 bytes @ 0x3
   271                           
   272                           
   273                           ; 1 bytes @ 0x3
   274     0073                     	ds	1
   275     0074                     lcd_string@num:
   276                           
   277                           ; 1 bytes @ 0x4
   278     0074                     	ds	1
   279     0075                     lcd_string@i:
   280     0075                     ??_lcd_string:	
   281                           ; 1 bytes @ 0x5
   282                           
   283                           
   284                           ; 1 bytes @ 0x5
   285     0075                     	ds	1
   286     0076                     ??_main:
   287                           
   288                           	psect	maintext
   289     07D1                     __pmaintext:	
   290                           ; 1 bytes @ 0x6
   291 ;;
   292 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   293 ;;
   294 ;; *************** function _main *****************
   295 ;; Defined at:
   296 ;;		line 55 in file "main.c"
   297 ;; Parameters:    Size  Location     Type
   298 ;;		None
   299 ;; Auto vars:     Size  Location     Type
   300 ;;		None
   301 ;; Return value:  Size  Location     Type
   302 ;;                  1    wreg      void 
   303 ;; Registers used:
   304 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   305 ;; Tracked objects:
   306 ;;		On entry : B00/0
   307 ;;		On exit  : 0/0
   308 ;;		Unchanged: 0/0
   309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   310 ;;      Params:         0       0       0       0       0
   311 ;;      Locals:         0       0       0       0       0
   312 ;;      Temps:          0       0       0       0       0
   313 ;;      Totals:         0       0       0       0       0
   314 ;;Total ram usage:        0 bytes
   315 ;; Hardware stack levels required when called: 2
   316 ;; This function calls:
   317 ;;		_lcd_command
   318 ;;		_lcd_initialise
   319 ;;		_lcd_string
   320 ;; This function is called by:
   321 ;;		Startup code after reset
   322 ;; This function uses a non-reentrant model
   323 ;;
   324                           
   325     07D1                     _main:	
   326                           ;psect for function _main
   327                           
   328     07D1                     l623:	
   329                           ;incstack = 0
   330                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   331                           
   332     07D1  1683               	bsf	3,5	;RP0=1, select bank1
   333     07D2  1303               	bcf	3,6	;RP1=0, select bank1
   334     07D3  0189               	clrf	9	;volatile
   335     07D4  0188               	clrf	8	;volatile
   336     07D5                     l625:
   337     07D5  120A  118A  27B8  120A  118A  	fcall	_lcd_initialise
   338     07DA                     l627:
   339     07DA  3080               	movlw	128
   340     07DB  120A  118A  2778  120A  118A  	fcall	_lcd_command
   341     07E0                     l629:
   342     07E0  3012               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   343     07E1  00F3               	movwf	lcd_string@str
   344     07E2  300A               	movlw	10
   345     07E3  00F4               	movwf	lcd_string@num
   346     07E4  120A  118A  27A0  120A  118A  	fcall	_lcd_string
   347     07E9                     l631:
   348     07E9  30C0               	movlw	192
   349     07EA  120A  118A  2778  120A  118A  	fcall	_lcd_command
   350     07EF                     l633:
   351     07EF  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   352     07F0  00F3               	movwf	lcd_string@str
   353     07F1  3010               	movlw	16
   354     07F2  00F4               	movwf	lcd_string@num
   355     07F3  120A  118A  27A0  120A  118A  	fcall	_lcd_string
   356     07F8  2FDA               	goto	l627
   357     07F9  120A  118A  2800   	ljmp	start
   358     07FC                     __end_of_main:
   359                           
   360                           	psect	text1
   361     07A0                     __ptext1:	
   362 ;; *************** function _lcd_string *****************
   363 ;; Defined at:
   364 ;;		line 37 in file "main.c"
   365 ;; Parameters:    Size  Location     Type
   366 ;;  str             1    3[COMMON] PTR const unsigned char 
   367 ;;		 -> STR_2(17), STR_1(11), 
   368 ;;  num             1    4[COMMON] unsigned char 
   369 ;; Auto vars:     Size  Location     Type
   370 ;;  i               1    5[COMMON] unsigned char 
   371 ;; Return value:  Size  Location     Type
   372 ;;                  1    wreg      void 
   373 ;; Registers used:
   374 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   375 ;; Tracked objects:
   376 ;;		On entry : 0/0
   377 ;;		On exit  : 0/0
   378 ;;		Unchanged: 0/0
   379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   380 ;;      Params:         2       0       0       0       0
   381 ;;      Locals:         1       0       0       0       0
   382 ;;      Temps:          0       0       0       0       0
   383 ;;      Totals:         3       0       0       0       0
   384 ;;Total ram usage:        3 bytes
   385 ;; Hardware stack levels used: 1
   386 ;; Hardware stack levels required when called: 1
   387 ;; This function calls:
   388 ;;		_lcd_data
   389 ;; This function is called by:
   390 ;;		_main
   391 ;; This function uses a non-reentrant model
   392 ;;
   393                           
   394     07A0                     _lcd_string:	
   395                           ;psect for function _lcd_string
   396                           
   397     07A0                     l615:	
   398                           ;incstack = 0
   399                           ; Regs used in _lcd_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   400                           
   401                           
   402                           ;main.c: 37:     lcd_command(0x06);;main.c: 38:     lcd_command(0x0C);;main.c: 39:     l
      +                          cd_command(0x01);;main.c: 40: }
   403     07A0  01F5               	clrf	lcd_string@i
   404     07A1  2FB1               	goto	l621
   405     07A2                     l617:
   406                           
   407                           ;main.c: 41: ;main.c: 42: void main(void)
   408     07A2  0875               	movf	lcd_string@i,w
   409     07A3  0773               	addwf	lcd_string@str,w
   410     07A4  0084               	movwf	4
   411     07A5  120A  118A  2003  120A  118A  	fcall	stringdir
   412     07AA  120A  118A  278C  120A  118A  	fcall	_lcd_data
   413     07AF                     l619:
   414                           
   415                           ;main.c: 44:     TRISE = 0x00;
   416     07AF  3001               	movlw	1
   417     07B0  07F5               	addwf	lcd_string@i,f
   418     07B1                     l621:
   419     07B1  0874               	movf	lcd_string@num,w
   420     07B2  0275               	subwf	lcd_string@i,w
   421     07B3  1C03               	skipc
   422     07B4  2FB6               	goto	u21
   423     07B5  2FB7               	goto	u20
   424     07B6                     u21:
   425     07B6  2FA2               	goto	l617
   426     07B7                     u20:
   427     07B7                     l22:
   428     07B7  0008               	return
   429     07B8                     __end_of_lcd_string:
   430                           
   431                           	psect	text2
   432     078C                     __ptext2:	
   433 ;; *************** function _lcd_data *****************
   434 ;; Defined at:
   435 ;;		line 17 in file "main.c"
   436 ;; Parameters:    Size  Location     Type
   437 ;;  data            1    wreg     unsigned char 
   438 ;; Auto vars:     Size  Location     Type
   439 ;;  data            1    2[COMMON] unsigned char 
   440 ;; Return value:  Size  Location     Type
   441 ;;                  1    wreg      void 
   442 ;; Registers used:
   443 ;;		wreg
   444 ;; Tracked objects:
   445 ;;		On entry : 0/0
   446 ;;		On exit  : 0/0
   447 ;;		Unchanged: 0/0
   448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   449 ;;      Params:         0       0       0       0       0
   450 ;;      Locals:         1       0       0       0       0
   451 ;;      Temps:          2       0       0       0       0
   452 ;;      Totals:         3       0       0       0       0
   453 ;;Total ram usage:        3 bytes
   454 ;; Hardware stack levels used: 1
   455 ;; This function calls:
   456 ;;		Nothing
   457 ;; This function is called by:
   458 ;;		_lcd_string
   459 ;; This function uses a non-reentrant model
   460 ;;
   461                           
   462     078C                     _lcd_data:	
   463                           ;psect for function _lcd_data
   464                           
   465                           
   466                           ;incstack = 0
   467                           ; Regs used in _lcd_data: [wreg]
   468                           ;lcd_data@data stored from wreg
   469     078C  00F2               	movwf	lcd_data@data
   470     078D                     l577:
   471                           
   472                           ;main.c: 17:     PORTEbits.RE0 = 0;;main.c: 18: ;main.c: 19:     PORTEbits.RE1 = 1;
   473     078D  0872               	movf	lcd_data@data,w
   474     078E  1283               	bcf	3,5	;RP0=0, select bank0
   475     078F  1303               	bcf	3,6	;RP1=0, select bank0
   476     0790  0088               	movwf	8	;volatile
   477     0791                     l579:
   478                           
   479                           ;main.c: 20:     _delay((unsigned long)((5)*(20000000/4000.0)));
   480     0791  1409               	bsf	9,0	;volatile
   481     0792                     l581:
   482                           
   483                           ;main.c: 22: }
   484     0792  1489               	bsf	9,1	;volatile
   485                           
   486                           ;main.c: 23: 
   487     0793  3021               	movlw	33
   488     0794  00F1               	movwf	??_lcd_data+1
   489     0795  3076               	movlw	118
   490     0796  00F0               	movwf	??_lcd_data
   491     0797                     u37:
   492     0797  0BF0               	decfsz	??_lcd_data,f
   493     0798  2F97               	goto	u37
   494     0799  0BF1               	decfsz	??_lcd_data+1,f
   495     079A  2F97               	goto	u37
   496     079B  0000               	nop
   497     079C                     l583:
   498                           
   499                           ;main.c: 24: void lcd_string(const unsigned char *str,unsigned char num)
   500     079C  1283               	bcf	3,5	;RP0=0, select bank0
   501     079D  1303               	bcf	3,6	;RP1=0, select bank0
   502     079E  1089               	bcf	9,1	;volatile
   503     079F                     l13:
   504     079F  0008               	return
   505     07A0                     __end_of_lcd_data:
   506                           
   507                           	psect	text3
   508     07B8                     __ptext3:	
   509 ;; *************** function _lcd_initialise *****************
   510 ;; Defined at:
   511 ;;		line 47 in file "main.c"
   512 ;; Parameters:    Size  Location     Type
   513 ;;		None
   514 ;; Auto vars:     Size  Location     Type
   515 ;;		None
   516 ;; Return value:  Size  Location     Type
   517 ;;                  1    wreg      void 
   518 ;; Registers used:
   519 ;;		wreg, status,2, status,0, pclath, cstack
   520 ;; Tracked objects:
   521 ;;		On entry : 0/0
   522 ;;		On exit  : 0/0
   523 ;;		Unchanged: 0/0
   524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   525 ;;      Params:         0       0       0       0       0
   526 ;;      Locals:         0       0       0       0       0
   527 ;;      Temps:          0       0       0       0       0
   528 ;;      Totals:         0       0       0       0       0
   529 ;;Total ram usage:        0 bytes
   530 ;; Hardware stack levels used: 1
   531 ;; Hardware stack levels required when called: 1
   532 ;; This function calls:
   533 ;;		_lcd_command
   534 ;; This function is called by:
   535 ;;		_main
   536 ;; This function uses a non-reentrant model
   537 ;;
   538                           
   539     07B8                     _lcd_initialise:	
   540                           ;psect for function _lcd_initialise
   541                           
   542     07B8                     l601:	
   543                           ;incstack = 0
   544                           ; Regs used in _lcd_initialise: [wreg+status,2+status,0+pclath+cstack]
   545                           
   546                           
   547                           ;main.c: 49:         lcd_command(0x80);
   548     07B8  3038               	movlw	56
   549     07B9  120A  118A  2778  120A  118A  	fcall	_lcd_command
   550                           
   551                           ;main.c: 50:         lcd_string("DISCIPLINA",10);
   552     07BE  3006               	movlw	6
   553     07BF  120A  118A  2778  120A  118A  	fcall	_lcd_command
   554                           
   555                           ;main.c: 51:         lcd_command(0xC0);
   556     07C4  300C               	movlw	12
   557     07C5  120A  118A  2778  120A  118A  	fcall	_lcd_command
   558                           
   559                           ;main.c: 52:         lcd_string("MICROCONTROLADOR",16);
   560     07CA  3001               	movlw	1
   561     07CB  120A  118A  2778  120A  118A  	fcall	_lcd_command
   562     07D0                     l25:
   563     07D0  0008               	return
   564     07D1                     __end_of_lcd_initialise:
   565                           
   566                           	psect	text4
   567     0778                     __ptext4:	
   568 ;; *************** function _lcd_command *****************
   569 ;; Defined at:
   570 ;;		line 27 in file "main.c"
   571 ;; Parameters:    Size  Location     Type
   572 ;;  cmd             1    wreg     unsigned char 
   573 ;; Auto vars:     Size  Location     Type
   574 ;;  cmd             1    2[COMMON] unsigned char 
   575 ;; Return value:  Size  Location     Type
   576 ;;                  1    wreg      void 
   577 ;; Registers used:
   578 ;;		wreg
   579 ;; Tracked objects:
   580 ;;		On entry : 0/0
   581 ;;		On exit  : 0/0
   582 ;;		Unchanged: 0/0
   583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   584 ;;      Params:         0       0       0       0       0
   585 ;;      Locals:         1       0       0       0       0
   586 ;;      Temps:          2       0       0       0       0
   587 ;;      Totals:         3       0       0       0       0
   588 ;;Total ram usage:        3 bytes
   589 ;; Hardware stack levels used: 1
   590 ;; This function calls:
   591 ;;		Nothing
   592 ;; This function is called by:
   593 ;;		_lcd_initialise
   594 ;;		_main
   595 ;; This function uses a non-reentrant model
   596 ;;
   597                           
   598     0778                     _lcd_command:	
   599                           ;psect for function _lcd_command
   600                           
   601                           
   602                           ;incstack = 0
   603                           ; Regs used in _lcd_command: [wreg]
   604                           ;lcd_command@cmd stored from wreg
   605     0778  00F2               	movwf	lcd_command@cmd
   606     0779                     l585:
   607                           
   608                           ;main.c: 27:     for(i=0;i<num;i++);main.c: 28:     {;main.c: 29:       lcd_data(str[i])
      +                          ;
   609     0779  0872               	movf	lcd_command@cmd,w
   610     077A  1283               	bcf	3,5	;RP0=0, select bank0
   611     077B  1303               	bcf	3,6	;RP1=0, select bank0
   612     077C  0088               	movwf	8	;volatile
   613     077D                     l587:
   614                           
   615                           ;main.c: 30: 
   616     077D  1009               	bcf	9,0	;volatile
   617     077E                     l589:
   618                           
   619                           ;main.c: 32: }
   620     077E  1489               	bsf	9,1	;volatile
   621                           
   622                           ;main.c: 33: 
   623     077F  3021               	movlw	33
   624     0780  00F1               	movwf	??_lcd_command+1
   625     0781  3076               	movlw	118
   626     0782  00F0               	movwf	??_lcd_command
   627     0783                     u47:
   628     0783  0BF0               	decfsz	??_lcd_command,f
   629     0784  2F83               	goto	u47
   630     0785  0BF1               	decfsz	??_lcd_command+1,f
   631     0786  2F83               	goto	u47
   632     0787  0000               	nop
   633     0788                     l591:
   634                           
   635                           ;main.c: 34: void lcd_initialise()
   636     0788  1283               	bcf	3,5	;RP0=0, select bank0
   637     0789  1303               	bcf	3,6	;RP1=0, select bank0
   638     078A  1089               	bcf	9,1	;volatile
   639     078B                     l16:
   640     078B  0008               	return
   641     078C                     __end_of_lcd_command:
   642     0002                     ___latbits      equ	2
   643     007E                     btemp           set	126	;btemp
   644     007E                     wtemp0          set	126
   645                           
   646                           	psect	config
   647                           
   648                           ;Config register CONFIG @ 0x2007
   649                           ;	Oscillator Selection bits
   650                           ;	FOSC = HS, HS oscillator
   651                           ;	Watchdog Timer Enable bit
   652                           ;	WDTE = OFF, WDT disabled
   653                           ;	Power-up Timer Enable bit
   654                           ;	PWRTE = OFF, PWRT disabled
   655                           ;	FLASH Program Memory Code Protection bits
   656                           ;	CP = OFF, Code protection off
   657                           ;	Brown-out Reset Enable bit
   658                           ;	BOREN = OFF, BOR disabled
   659                           ;	Low Voltage In-Circuit Serial Programming Enable bit
   660                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   661                           ;	Data EE Memory Code Protection
   662                           ;	CPD = OFF, Code Protection off
   663                           ;	FLASH Program Memory Write Enable
   664                           ;	WRT = OFF, Unprotected program memory may not be written to by EECON control
   665                           ;	In-Circuit Debugger Mode bit
   666                           ;	DEBUG = 0x1, unprogrammed default
   667     2007                     	org	8199
   668     2007  3DBA               	dw	15802

Data Sizes:
    Strings     28
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_string@str	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[11]), STR_2(CODE[17]), 


Critical Paths under _main in COMMON

    _main->_lcd_string
    _lcd_string->_lcd_data
    _lcd_initialise->_lcd_command

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     139
                        _lcd_command
                     _lcd_initialise
                         _lcd_string
 ---------------------------------------------------------------------------------
 (1) _lcd_string                                           3     1      2     109
                                              3 COMMON     3     1      2
                           _lcd_data
 ---------------------------------------------------------------------------------
 (2) _lcd_data                                             3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _lcd_initialise                                       0     0      0      15
                        _lcd_command
 ---------------------------------------------------------------------------------
 (2) _lcd_command                                          3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_command
   _lcd_initialise
     _lcd_command
   _lcd_string
     _lcd_data

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14      6       6     42.9%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK3               96      0       0      0.0%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       6      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Mon Nov 18 14:36:26 2024

                      pc 0002             lcd_data@data 0072                       l13 079F  
                     l22 07B7                       l16 078B                       l25 07D0  
                     u20 07B7                       u21 07B6                       u37 0797  
                     u47 0783                       fsr 0004                      l601 07B8  
                    l621 07B1                      l615 07A0                      l631 07E9  
                    l623 07D1                      l617 07A2                      l633 07EF  
                    l625 07D5                      l619 07AF                      l627 07DA  
                    l581 0792                      l629 07E0                      l591 0788  
                    l583 079C                      l585 0779                      l577 078D  
                    l587 077D                      l579 0791                      l589 077E  
                    fsr0 0004                     STR_1 001A                     STR_2 0009  
                   _main 07D1                     btemp 007E                     start 0000  
            lcd_string@i 0075                    ?_main 0070                    _PORTD 0008  
                  _TRISD 0088                    _TRISE 0089                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07FC  
           __end_of_main 07FC                   ??_main 0076           lcd_command@cmd 0072  
       __end_of_lcd_data 07A0         ??_lcd_initialise 0073            lcd_string@num 0074  
          lcd_string@str 0073  __end_of__initialization 07FC           __pcstackCOMMON 0070  
             __pmaintext 07D1                ?_lcd_data 0070               _lcd_string 07A0  
             __stringtab 0003                  __ptext1 07A0                  __ptext2 078C  
                __ptext3 07B8                  __ptext4 0778               ??_lcd_data 0070  
   end_of_initialization 07FC                _PORTEbits 0009              ?_lcd_string 0073  
          ??_lcd_command 0070      start_initialization 07FC      __end_of_lcd_command 078C  
              ___latbits 0002                __pstrings 0003              _lcd_command 0778  
            __stringbase 0008             ??_lcd_string 0075       __end_of_lcd_string 07B8  
     __end_of__stringtab 0009                 _lcd_data 078C           _lcd_initialise 07B8  
 __end_of_lcd_initialise 07D1                stringcode 0003                 stringdir 0003  
               stringtab 0003          ?_lcd_initialise 0070             ?_lcd_command 0070  
