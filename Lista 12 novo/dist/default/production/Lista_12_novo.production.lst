

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Mon Feb 17 16:23:05 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F877
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     8                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14     0000                     
    15                           ; Generated 12/10/2023 GMT
    16                           ; 
    17                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49     0004                     fsr             equ	4
    50     0004                     fsr0            equ	4
    51     0000                     indf            equ	0
    52     0000                     indf0           equ	0
    53     0002                     pc              equ	2
    54     0002                     pcl             equ	2
    55     000A                     pclath          equ	10
    56     0003                     status          equ	3
    57     0000                     INDF            equ	0	;# 
    58     0001                     TMR0            equ	1	;# 
    59     0002                     PCL             equ	2	;# 
    60     0003                     STATUS          equ	3	;# 
    61     0004                     FSR             equ	4	;# 
    62     0005                     PORTA           equ	5	;# 
    63     0006                     PORTB           equ	6	;# 
    64     0007                     PORTC           equ	7	;# 
    65     0008                     PORTD           equ	8	;# 
    66     0009                     PORTE           equ	9	;# 
    67     000A                     PCLATH          equ	10	;# 
    68     000B                     INTCON          equ	11	;# 
    69     000C                     PIR1            equ	12	;# 
    70     000D                     PIR2            equ	13	;# 
    71     000E                     TMR1            equ	14	;# 
    72     000E                     TMR1L           equ	14	;# 
    73     000F                     TMR1H           equ	15	;# 
    74     0010                     T1CON           equ	16	;# 
    75     0011                     TMR2            equ	17	;# 
    76     0012                     T2CON           equ	18	;# 
    77     0013                     SSPBUF          equ	19	;# 
    78     0014                     SSPCON          equ	20	;# 
    79     0015                     CCPR1           equ	21	;# 
    80     0015                     CCPR1L          equ	21	;# 
    81     0016                     CCPR1H          equ	22	;# 
    82     0017                     CCP1CON         equ	23	;# 
    83     0018                     RCSTA           equ	24	;# 
    84     0019                     TXREG           equ	25	;# 
    85     001A                     RCREG           equ	26	;# 
    86     001B                     CCPR2           equ	27	;# 
    87     001B                     CCPR2L          equ	27	;# 
    88     001C                     CCPR2H          equ	28	;# 
    89     001D                     CCP2CON         equ	29	;# 
    90     001E                     ADRESH          equ	30	;# 
    91     001F                     ADCON0          equ	31	;# 
    92     0081                     OPTION_REG      equ	129	;# 
    93     0085                     TRISA           equ	133	;# 
    94     0086                     TRISB           equ	134	;# 
    95     0087                     TRISC           equ	135	;# 
    96     0088                     TRISD           equ	136	;# 
    97     0089                     TRISE           equ	137	;# 
    98     008C                     PIE1            equ	140	;# 
    99     008D                     PIE2            equ	141	;# 
   100     008E                     PCON            equ	142	;# 
   101     0091                     SSPCON2         equ	145	;# 
   102     0092                     PR2             equ	146	;# 
   103     0093                     SSPADD          equ	147	;# 
   104     0094                     SSPSTAT         equ	148	;# 
   105     0098                     TXSTA           equ	152	;# 
   106     0099                     SPBRG           equ	153	;# 
   107     009E                     ADRESL          equ	158	;# 
   108     009F                     ADCON1          equ	159	;# 
   109     010C                     EEDATA          equ	268	;# 
   110     010D                     EEADR           equ	269	;# 
   111     010E                     EEDATH          equ	270	;# 
   112     010F                     EEADRH          equ	271	;# 
   113     018C                     EECON1          equ	396	;# 
   114     018D                     EECON2          equ	397	;# 
   115     0000                     INDF            equ	0	;# 
   116     0001                     TMR0            equ	1	;# 
   117     0002                     PCL             equ	2	;# 
   118     0003                     STATUS          equ	3	;# 
   119     0004                     FSR             equ	4	;# 
   120     0005                     PORTA           equ	5	;# 
   121     0006                     PORTB           equ	6	;# 
   122     0007                     PORTC           equ	7	;# 
   123     0008                     PORTD           equ	8	;# 
   124     0009                     PORTE           equ	9	;# 
   125     000A                     PCLATH          equ	10	;# 
   126     000B                     INTCON          equ	11	;# 
   127     000C                     PIR1            equ	12	;# 
   128     000D                     PIR2            equ	13	;# 
   129     000E                     TMR1            equ	14	;# 
   130     000E                     TMR1L           equ	14	;# 
   131     000F                     TMR1H           equ	15	;# 
   132     0010                     T1CON           equ	16	;# 
   133     0011                     TMR2            equ	17	;# 
   134     0012                     T2CON           equ	18	;# 
   135     0013                     SSPBUF          equ	19	;# 
   136     0014                     SSPCON          equ	20	;# 
   137     0015                     CCPR1           equ	21	;# 
   138     0015                     CCPR1L          equ	21	;# 
   139     0016                     CCPR1H          equ	22	;# 
   140     0017                     CCP1CON         equ	23	;# 
   141     0018                     RCSTA           equ	24	;# 
   142     0019                     TXREG           equ	25	;# 
   143     001A                     RCREG           equ	26	;# 
   144     001B                     CCPR2           equ	27	;# 
   145     001B                     CCPR2L          equ	27	;# 
   146     001C                     CCPR2H          equ	28	;# 
   147     001D                     CCP2CON         equ	29	;# 
   148     001E                     ADRESH          equ	30	;# 
   149     001F                     ADCON0          equ	31	;# 
   150     0081                     OPTION_REG      equ	129	;# 
   151     0085                     TRISA           equ	133	;# 
   152     0086                     TRISB           equ	134	;# 
   153     0087                     TRISC           equ	135	;# 
   154     0088                     TRISD           equ	136	;# 
   155     0089                     TRISE           equ	137	;# 
   156     008C                     PIE1            equ	140	;# 
   157     008D                     PIE2            equ	141	;# 
   158     008E                     PCON            equ	142	;# 
   159     0091                     SSPCON2         equ	145	;# 
   160     0092                     PR2             equ	146	;# 
   161     0093                     SSPADD          equ	147	;# 
   162     0094                     SSPSTAT         equ	148	;# 
   163     0098                     TXSTA           equ	152	;# 
   164     0099                     SPBRG           equ	153	;# 
   165     009E                     ADRESL          equ	158	;# 
   166     009F                     ADCON1          equ	159	;# 
   167     010C                     EEDATA          equ	268	;# 
   168     010D                     EEADR           equ	269	;# 
   169     010E                     EEDATH          equ	270	;# 
   170     010F                     EEADRH          equ	271	;# 
   171     018C                     EECON1          equ	396	;# 
   172     018D                     EECON2          equ	397	;# 
   173                           
   174                           	psect	strings
   175     0003                     __pstrings:
   176     0003                     stringtab:
   177     0003                     __stringtab:
   178     0003                     stringcode:	
   179                           ;	String table - string pointers are 1 byte each
   180                           
   181     0003                     stringdir:
   182     0003  3000               	movlw	high stringdir
   183     0004  008A               	movwf	10
   184     0005  0804               	movf	4,w
   185     0006  0A84               	incf	4,f
   186     0007  0782               	addwf	2,f
   187     0008                     __stringbase:
   188     0008  3400               	retlw	0
   189     0009                     __end_of__stringtab:
   190     0009                     ler_teclado@matriz_teclas:
   191     0009  3430               	retlw	48
   192     000A  3431               	retlw	49
   193     000B  3432               	retlw	50
   194     000C  3433               	retlw	51
   195     000D  3434               	retlw	52
   196     000E  3435               	retlw	53
   197     000F  3436               	retlw	54
   198     0010  3437               	retlw	55
   199     0011  3438               	retlw	56
   200     0012  3439               	retlw	57
   201     0013  3441               	retlw	65
   202     0014  3442               	retlw	66
   203     0015  3443               	retlw	67
   204     0016  3444               	retlw	68
   205     0017  3445               	retlw	69
   206     0018  3446               	retlw	70
   207     0019                     __end_ofler_teclado@matriz_teclas:
   208     0019                     _TXREG          set	25
   209     0018                     _RCSTA          set	24
   210     0006                     _PORTBbits      set	6
   211     0007                     _PORTC          set	7
   212     0064                     _TXIF           set	100
   213     0099                     _SPBRG          set	153
   214     0098                     _TXSTA          set	152
   215     0087                     _TRISC          set	135
   216     0086                     _TRISB          set	134
   217     0019                     STR_1:
   218     0019  3425               	retlw	37	;'%'
   219     001A  3475               	retlw	117	;'u'
   220     001B  3420               	retlw	32	;' '
   221     001C  3400               	retlw	0
   222                           
   223                           	psect	cinit
   224     07FC                     start_initialization:	
   225                           ; #config settings
   226                           
   227     07FC                     __initialization:
   228     07FC                     end_of_initialization:	
   229                           ;End of C runtime variable initialization code
   230                           
   231     07FC                     __end_of__initialization:
   232     07FC  0183               	clrf	3
   233     07FD  120A  118A  2F39   	ljmp	_main	;jump to C main() function
   234                           
   235                           	psect	cstackCOMMON
   236     0070                     __pcstackCOMMON:
   237     0070                     ?_configurar_teclado:
   238     0070                     ?_configurar_uart:	
   239                           ; 1 bytes @ 0x0
   240                           
   241     0070                     ?_ler_teclado:	
   242                           ; 1 bytes @ 0x0
   243                           
   244     0070                     ?_uart_enviar_caractere:	
   245                           ; 1 bytes @ 0x0
   246                           
   247     0070                     ?_main:	
   248                           ; 1 bytes @ 0x0
   249                           
   250     0070                     uart_enviar_caractere@c:	
   251                           ; 1 bytes @ 0x0
   252                           
   253     0070                     ??_configurar_teclado:	
   254                           ; 1 bytes @ 0x0
   255                           
   256     0070                     ??_configurar_uart:	
   257                           ; 1 bytes @ 0x0
   258                           
   259     0070                     ??_ler_teclado:	
   260                           ; 1 bytes @ 0x0
   261                           
   262     0070                     ??_uart_enviar_caractere:	
   263                           ; 1 bytes @ 0x0
   264                           
   265                           
   266                           ; 1 bytes @ 0x0
   267     0070                     	ds	2
   268     0072                     ler_teclado@linha:
   269                           
   270                           ; 1 bytes @ 0x2
   271     0072                     	ds	1
   272     0073                     ??_main:
   273                           
   274                           ; 1 bytes @ 0x3
   275     0073                     	ds	2
   276     0075                     main@tecla:
   277                           
   278                           ; 1 bytes @ 0x5
   279     0075                     	ds	1
   280                           
   281                           	psect	maintext
   282     0739                     __pmaintext:	
   283 ;;
   284 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   285 ;;
   286 ;; *************** function _main *****************
   287 ;; Defined at:
   288 ;;		line 26 in file "atividade10.c"
   289 ;; Parameters:    Size  Location     Type
   290 ;;		None
   291 ;; Auto vars:     Size  Location     Type
   292 ;;  tecla           1    5[COMMON] unsigned char 
   293 ;; Return value:  Size  Location     Type
   294 ;;                  1    wreg      void 
   295 ;; Registers used:
   296 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   297 ;; Tracked objects:
   298 ;;		On entry : B00/0
   299 ;;		On exit  : 0/0
   300 ;;		Unchanged: 0/0
   301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   302 ;;      Params:         0       0       0       0       0
   303 ;;      Locals:         1       0       0       0       0
   304 ;;      Temps:          2       0       0       0       0
   305 ;;      Totals:         3       0       0       0       0
   306 ;;Total ram usage:        3 bytes
   307 ;; Hardware stack levels required when called: 2
   308 ;; This function calls:
   309 ;;		_configurar_teclado
   310 ;;		_configurar_uart
   311 ;;		_ler_teclado
   312 ;;		_uart_enviar_caractere
   313 ;; This function is called by:
   314 ;;		Startup code after reset
   315 ;; This function uses a non-reentrant model
   316 ;;
   317                           
   318     0739                     _main:	
   319                           ;psect for function _main
   320                           
   321     0739                     l736:	
   322                           ;incstack = 0
   323                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   324                           
   325                           
   326                           ;atividade10.c: 27:     configurar_teclado();
   327     0739  120A  118A  2718  120A  118A  	fcall	_configurar_teclado
   328                           
   329                           ;atividade10.c: 28:     configurar_uart();
   330     073E  120A  118A  272C  120A  118A  	fcall	_configurar_uart
   331     0743                     l738:
   332                           
   333                           ;atividade10.c: 31:         char tecla = ler_teclado();
   334     0743  120A  118A  2780  120A  118A  	fcall	_ler_teclado
   335     0748  00F5               	movwf	main@tecla
   336     0749                     l740:
   337                           
   338                           ;atividade10.c: 33:         if (tecla != '\0') {
   339     0749  0875               	movf	main@tecla,w
   340     074A  1903               	btfsc	3,2
   341     074B  2F4D               	goto	u271
   342     074C  2F4E               	goto	u270
   343     074D                     u271:
   344     074D  2F43               	goto	l738
   345     074E                     u270:
   346     074E                     l742:
   347                           
   348                           ;atividade10.c: 34:             _delay((unsigned long)((100)*(2000000/4000.0)));
   349     074E  3041               	movlw	65
   350     074F  00F4               	movwf	??_main+1
   351     0750  30EE               	movlw	238
   352     0751  00F3               	movwf	??_main
   353     0752                     u317:
   354     0752  0BF3               	decfsz	??_main,f
   355     0753  2F52               	goto	u317
   356     0754  0BF4               	decfsz	??_main+1,f
   357     0755  2F52               	goto	u317
   358     0756  0000               	nop
   359     0757                     l744:	
   360                           ;atividade10.c: 36:             while (ler_teclado() != '\0');
   361                           
   362     0757  120A  118A  2780  120A  118A  	fcall	_ler_teclado
   363     075C  3A00               	xorlw	0
   364     075D  1D03               	skipz
   365     075E  2F60               	goto	u281
   366     075F  2F61               	goto	u280
   367     0760                     u281:
   368     0760  2F57               	goto	l744
   369     0761                     u280:
   370     0761                     l746:
   371                           
   372                           ;atividade10.c: 37:             _delay((unsigned long)((50)*(2000000/4000.0)));
   373     0761  3021               	movlw	33
   374     0762  00F4               	movwf	??_main+1
   375     0763  3076               	movlw	118
   376     0764  00F3               	movwf	??_main
   377     0765                     u327:
   378     0765  0BF3               	decfsz	??_main,f
   379     0766  2F65               	goto	u327
   380     0767  0BF4               	decfsz	??_main+1,f
   381     0768  2F65               	goto	u327
   382     0769  0000               	nop
   383                           
   384                           ;atividade10.c: 39:             if (tecla >= '0' && tecla <= 'F') {
   385     076A  3030               	movlw	48
   386     076B  0275               	subwf	main@tecla,w
   387     076C  1C03               	skipc
   388     076D  2F6F               	goto	u291
   389     076E  2F70               	goto	u290
   390     076F                     u291:
   391     076F  2F43               	goto	l738
   392     0770                     u290:
   393     0770                     l748:
   394     0770  3047               	movlw	71
   395     0771  0275               	subwf	main@tecla,w
   396     0772  1803               	skipnc
   397     0773  2F75               	goto	u301
   398     0774  2F76               	goto	u300
   399     0775                     u301:
   400     0775  2F43               	goto	l738
   401     0776                     u300:
   402     0776                     l750:
   403                           
   404                           ;atividade10.c: 40:                 uart_enviar_caractere(tecla);
   405     0776  0875               	movf	main@tecla,w
   406     0777  120A  118A  2722  120A  118A  	fcall	_uart_enviar_caractere
   407     077C  2F43               	goto	l738
   408     077D  120A  118A  2800   	ljmp	start
   409     0780                     __end_of_main:
   410                           
   411                           	psect	text1
   412     0722                     __ptext1:	
   413 ;; *************** function _uart_enviar_caractere *****************
   414 ;; Defined at:
   415 ;;		line 86 in file "atividade10.c"
   416 ;; Parameters:    Size  Location     Type
   417 ;;  c               1    wreg     unsigned char 
   418 ;; Auto vars:     Size  Location     Type
   419 ;;  c               1    0[COMMON] unsigned char 
   420 ;; Return value:  Size  Location     Type
   421 ;;                  1    wreg      void 
   422 ;; Registers used:
   423 ;;		wreg
   424 ;; Tracked objects:
   425 ;;		On entry : 0/0
   426 ;;		On exit  : 0/0
   427 ;;		Unchanged: 0/0
   428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   429 ;;      Params:         0       0       0       0       0
   430 ;;      Locals:         1       0       0       0       0
   431 ;;      Temps:          0       0       0       0       0
   432 ;;      Totals:         1       0       0       0       0
   433 ;;Total ram usage:        1 bytes
   434 ;; Hardware stack levels used: 1
   435 ;; This function calls:
   436 ;;		Nothing
   437 ;; This function is called by:
   438 ;;		_main
   439 ;;		_uart_enviar_string
   440 ;; This function uses a non-reentrant model
   441 ;;
   442                           
   443     0722                     _uart_enviar_caractere:	
   444                           ;psect for function _uart_enviar_caractere
   445                           
   446                           
   447                           ;incstack = 0
   448                           ; Regs used in _uart_enviar_caractere: [wreg]
   449                           ;uart_enviar_caractere@c stored from wreg
   450     0722  00F0               	movwf	uart_enviar_caractere@c
   451     0723                     l668:
   452     0723                     l63:	
   453                           ;atividade10.c: 87:     while (!TXIF);
   454                           
   455     0723  1283               	bcf	3,5	;RP0=0, select bank0
   456     0724  1303               	bcf	3,6	;RP1=0, select bank0
   457     0725  1E0C               	btfss	12,4	;volatile
   458     0726  2F28               	goto	u111
   459     0727  2F29               	goto	u110
   460     0728                     u111:
   461     0728  2F23               	goto	l63
   462     0729                     u110:
   463     0729                     l670:
   464                           
   465                           ;atividade10.c: 88:     TXREG = c;
   466     0729  0870               	movf	uart_enviar_caractere@c,w
   467     072A  0099               	movwf	25	;volatile
   468     072B                     l66:
   469     072B  0008               	return
   470     072C                     __end_of_uart_enviar_caractere:
   471                           
   472                           	psect	text2
   473     0780                     __ptext2:	
   474 ;; *************** function _ler_teclado *****************
   475 ;; Defined at:
   476 ;;		line 56 in file "atividade10.c"
   477 ;; Parameters:    Size  Location     Type
   478 ;;		None
   479 ;; Auto vars:     Size  Location     Type
   480 ;;  linha           1    2[COMMON] unsigned char 
   481 ;; Return value:  Size  Location     Type
   482 ;;                  1    wreg      unsigned char 
   483 ;; Registers used:
   484 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
   485 ;; Tracked objects:
   486 ;;		On entry : 0/0
   487 ;;		On exit  : 0/0
   488 ;;		Unchanged: 0/0
   489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   490 ;;      Params:         0       0       0       0       0
   491 ;;      Locals:         1       0       0       0       0
   492 ;;      Temps:          2       0       0       0       0
   493 ;;      Totals:         3       0       0       0       0
   494 ;;Total ram usage:        3 bytes
   495 ;; Hardware stack levels used: 2
   496 ;; This function calls:
   497 ;;		Nothing
   498 ;; This function is called by:
   499 ;;		_main
   500 ;; This function uses a non-reentrant model
   501 ;;
   502                           
   503     0780                     _ler_teclado:	
   504                           ;psect for function _ler_teclado
   505                           
   506     0780                     l700:	
   507                           ;incstack = 0
   508                           ; Regs used in _ler_teclado: [wreg-fsr0h+status,2+status,0+pclath]
   509                           
   510                           
   511                           ;atividade10.c: 57:     const char matriz_teclas[4][4] = {;atividade10.c: 64:     for (u
      +                          nsigned char linha = 0; linha < 4; linha++) {
   512     0780  01F2               	clrf	ler_teclado@linha
   513     0781                     l702:
   514     0781  3004               	movlw	4
   515     0782  0272               	subwf	ler_teclado@linha,w
   516     0783  1C03               	skipc
   517     0784  2F86               	goto	u171
   518     0785  2F87               	goto	u170
   519     0786                     u171:
   520     0786  2F88               	goto	l706
   521     0787                     u170:
   522     0787  2FFA               	goto	l732
   523     0788                     l706:
   524                           
   525                           ;atividade10.c: 65:         PORTC = ~(1 << linha);
   526     0788  3001               	movlw	1
   527     0789  00F0               	movwf	??_ler_teclado
   528     078A  0A72               	incf	ler_teclado@linha,w
   529     078B  2F8E               	goto	u184
   530     078C                     u185:
   531     078C  1003               	clrc
   532     078D  0DF0               	rlf	??_ler_teclado,f
   533     078E                     u184:
   534     078E  3EFF               	addlw	-1
   535     078F  1D03               	skipz
   536     0790  2F8C               	goto	u185
   537     0791  0870               	movf	??_ler_teclado,w
   538     0792  3AFF               	xorlw	255
   539     0793  1283               	bcf	3,5	;RP0=0, select bank0
   540     0794  1303               	bcf	3,6	;RP1=0, select bank0
   541     0795  0087               	movwf	7	;volatile
   542     0796                     l708:
   543                           
   544                           ;atividade10.c: 67:         if (!PORTBbits.RB0) return matriz_teclas[linha][0];
   545     0796  1806               	btfsc	6,0	;volatile
   546     0797  2F99               	goto	u191
   547     0798  2F9A               	goto	u190
   548     0799                     u191:
   549     0799  2FAC               	goto	l53
   550     079A                     u190:
   551     079A                     l710:
   552     079A  0872               	movf	ler_teclado@linha,w
   553     079B  00F0               	movwf	??_ler_teclado
   554     079C  3001               	movlw	1
   555     079D                     u205:
   556     079D  1003               	clrc
   557     079E  0DF0               	rlf	??_ler_teclado,f
   558     079F  3EFF               	addlw	-1
   559     07A0  1D03               	skipz
   560     07A1  2F9D               	goto	u205
   561     07A2  1003               	clrc
   562     07A3  0D70               	rlf	??_ler_teclado,w
   563     07A4  3E01               	addlw	low ((ler_teclado@matriz_teclas-__stringbase)| (0+32768))
   564     07A5  0084               	movwf	4
   565     07A6  120A  118A  2003  120A  118A  	fcall	stringdir
   566     07AB  2FFB               	goto	l54
   567     07AC                     l53:
   568                           
   569                           ;atividade10.c: 68:         if (!PORTBbits.RB1) return matriz_teclas[linha][1];
   570     07AC  1886               	btfsc	6,1	;volatile
   571     07AD  2FAF               	goto	u211
   572     07AE  2FB0               	goto	u210
   573     07AF                     u211:
   574     07AF  2FC2               	goto	l55
   575     07B0                     u210:
   576     07B0                     l714:
   577     07B0  0872               	movf	ler_teclado@linha,w
   578     07B1  00F0               	movwf	??_ler_teclado
   579     07B2  3001               	movlw	1
   580     07B3                     u225:
   581     07B3  1003               	clrc
   582     07B4  0DF0               	rlf	??_ler_teclado,f
   583     07B5  3EFF               	addlw	-1
   584     07B6  1D03               	skipz
   585     07B7  2FB3               	goto	u225
   586     07B8  1003               	clrc
   587     07B9  0D70               	rlf	??_ler_teclado,w
   588     07BA  3E02               	addlw	low (((ler_teclado@matriz_teclas-__stringbase)| (0+32768)+1))
   589     07BB  0084               	movwf	4
   590     07BC  120A  118A  2003  120A  118A  	fcall	stringdir
   591     07C1  2FFB               	goto	l54
   592     07C2                     l55:
   593                           
   594                           ;atividade10.c: 69:         if (!PORTBbits.RB2) return matriz_teclas[linha][2];
   595     07C2  1906               	btfsc	6,2	;volatile
   596     07C3  2FC5               	goto	u231
   597     07C4  2FC6               	goto	u230
   598     07C5                     u231:
   599     07C5  2FD8               	goto	l56
   600     07C6                     u230:
   601     07C6                     l718:
   602     07C6  0872               	movf	ler_teclado@linha,w
   603     07C7  00F0               	movwf	??_ler_teclado
   604     07C8  3001               	movlw	1
   605     07C9                     u245:
   606     07C9  1003               	clrc
   607     07CA  0DF0               	rlf	??_ler_teclado,f
   608     07CB  3EFF               	addlw	-1
   609     07CC  1D03               	skipz
   610     07CD  2FC9               	goto	u245
   611     07CE  1003               	clrc
   612     07CF  0D70               	rlf	??_ler_teclado,w
   613     07D0  3E03               	addlw	low (((ler_teclado@matriz_teclas-__stringbase)| (0+32768)+2))
   614     07D1  0084               	movwf	4
   615     07D2  120A  118A  2003  120A  118A  	fcall	stringdir
   616     07D7  2FFB               	goto	l54
   617     07D8                     l56:
   618                           
   619                           ;atividade10.c: 70:         if (!PORTBbits.RB3) return matriz_teclas[linha][3];
   620     07D8  1986               	btfsc	6,3	;volatile
   621     07D9  2FDB               	goto	u251
   622     07DA  2FDC               	goto	u250
   623     07DB                     u251:
   624     07DB  2FEE               	goto	l726
   625     07DC                     u250:
   626     07DC                     l722:
   627     07DC  0872               	movf	ler_teclado@linha,w
   628     07DD  00F0               	movwf	??_ler_teclado
   629     07DE  3001               	movlw	1
   630     07DF                     u265:
   631     07DF  1003               	clrc
   632     07E0  0DF0               	rlf	??_ler_teclado,f
   633     07E1  3EFF               	addlw	-1
   634     07E2  1D03               	skipz
   635     07E3  2FDF               	goto	u265
   636     07E4  1003               	clrc
   637     07E5  0D70               	rlf	??_ler_teclado,w
   638     07E6  3E04               	addlw	low (((ler_teclado@matriz_teclas-__stringbase)| (0+32768)+3))
   639     07E7  0084               	movwf	4
   640     07E8  120A  118A  2003  120A  118A  	fcall	stringdir
   641     07ED  2FFB               	goto	l54
   642     07EE                     l726:
   643                           
   644                           ;atividade10.c: 72:         _delay((unsigned long)((100)*(2000000/4000.0)));
   645     07EE  3041               	movlw	65
   646     07EF  00F1               	movwf	??_ler_teclado+1
   647     07F0  30EE               	movlw	238
   648     07F1  00F0               	movwf	??_ler_teclado
   649     07F2                     u337:
   650     07F2  0BF0               	decfsz	??_ler_teclado,f
   651     07F3  2FF2               	goto	u337
   652     07F4  0BF1               	decfsz	??_ler_teclado+1,f
   653     07F5  2FF2               	goto	u337
   654     07F6  0000               	nop
   655     07F7                     l728:
   656                           
   657                           ;atividade10.c: 73:     }
   658     07F7  3001               	movlw	1
   659     07F8  07F2               	addwf	ler_teclado@linha,f
   660     07F9  2F81               	goto	l702
   661     07FA                     l732:
   662                           
   663                           ;atividade10.c: 74:     return '\0';
   664     07FA  3000               	movlw	0
   665     07FB                     l54:
   666     07FB  0008               	return
   667     07FC                     __end_of_ler_teclado:
   668                           
   669                           	psect	text3
   670     072C                     __ptext3:	
   671 ;; *************** function _configurar_uart *****************
   672 ;; Defined at:
   673 ;;		line 80 in file "atividade10.c"
   674 ;; Parameters:    Size  Location     Type
   675 ;;		None
   676 ;; Auto vars:     Size  Location     Type
   677 ;;		None
   678 ;; Return value:  Size  Location     Type
   679 ;;                  1    wreg      void 
   680 ;; Registers used:
   681 ;;		None
   682 ;; Tracked objects:
   683 ;;		On entry : 0/0
   684 ;;		On exit  : 0/0
   685 ;;		Unchanged: 0/0
   686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   687 ;;      Params:         0       0       0       0       0
   688 ;;      Locals:         0       0       0       0       0
   689 ;;      Temps:          0       0       0       0       0
   690 ;;      Totals:         0       0       0       0       0
   691 ;;Total ram usage:        0 bytes
   692 ;; Hardware stack levels used: 1
   693 ;; This function calls:
   694 ;;		Nothing
   695 ;; This function is called by:
   696 ;;		_main
   697 ;; This function uses a non-reentrant model
   698 ;;
   699                           
   700     072C                     _configurar_uart:	
   701                           ;psect for function _configurar_uart
   702                           
   703     072C                     l630:	
   704                           ;incstack = 0
   705                           ; Regs used in _configurar_uart: []
   706                           
   707                           
   708                           ;atividade10.c: 81:     TXSTA = 0x24;
   709     072C  3024               	movlw	36
   710     072D  1683               	bsf	3,5	;RP0=1, select bank1
   711     072E  1303               	bcf	3,6	;RP1=0, select bank1
   712     072F  0098               	movwf	24	;volatile
   713                           
   714                           ;atividade10.c: 82:     RCSTA = 0x90;
   715     0730  3090               	movlw	144
   716     0731  1283               	bcf	3,5	;RP0=0, select bank0
   717     0732  1303               	bcf	3,6	;RP1=0, select bank0
   718     0733  0098               	movwf	24	;volatile
   719                           
   720                           ;atividade10.c: 83:     SPBRG = 12;
   721     0734  300C               	movlw	12
   722     0735  1683               	bsf	3,5	;RP0=1, select bank1
   723     0736  1303               	bcf	3,6	;RP1=0, select bank1
   724     0737  0099               	movwf	25	;volatile
   725     0738                     l60:
   726     0738  0008               	return
   727     0739                     __end_of_configurar_uart:
   728                           
   729                           	psect	text4
   730     0718                     __ptext4:	
   731 ;; *************** function _configurar_teclado *****************
   732 ;; Defined at:
   733 ;;		line 50 in file "atividade10.c"
   734 ;; Parameters:    Size  Location     Type
   735 ;;		None
   736 ;; Auto vars:     Size  Location     Type
   737 ;;		None
   738 ;; Return value:  Size  Location     Type
   739 ;;                  1    wreg      void 
   740 ;; Registers used:
   741 ;;		status,2
   742 ;; Tracked objects:
   743 ;;		On entry : 0/0
   744 ;;		On exit  : 0/0
   745 ;;		Unchanged: 0/0
   746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   747 ;;      Params:         0       0       0       0       0
   748 ;;      Locals:         0       0       0       0       0
   749 ;;      Temps:          0       0       0       0       0
   750 ;;      Totals:         0       0       0       0       0
   751 ;;Total ram usage:        0 bytes
   752 ;; Hardware stack levels used: 1
   753 ;; This function calls:
   754 ;;		Nothing
   755 ;; This function is called by:
   756 ;;		_main
   757 ;; This function uses a non-reentrant model
   758 ;;
   759                           
   760     0718                     _configurar_teclado:	
   761                           ;psect for function _configurar_teclado
   762                           
   763     0718                     l626:	
   764                           ;incstack = 0
   765                           ; Regs used in _configurar_teclado: [status,2]
   766                           
   767                           
   768                           ;atividade10.c: 51:     TRISB = 0x0F;
   769     0718  300F               	movlw	15
   770     0719  1683               	bsf	3,5	;RP0=1, select bank1
   771     071A  1303               	bcf	3,6	;RP1=0, select bank1
   772     071B  0086               	movwf	6	;volatile
   773                           
   774                           ;atividade10.c: 52:     TRISC = 0xF0;
   775     071C  30F0               	movlw	240
   776     071D  0087               	movwf	7	;volatile
   777     071E                     l628:
   778                           
   779                           ;atividade10.c: 53:     PORTC = 0x00;
   780     071E  1283               	bcf	3,5	;RP0=0, select bank0
   781     071F  1303               	bcf	3,6	;RP1=0, select bank0
   782     0720  0187               	clrf	7	;volatile
   783     0721                     l46:
   784     0721  0008               	return
   785     0722                     __end_of_configurar_teclado:
   786     0002                     ___latbits      equ	2
   787     007E                     btemp           set	126	;btemp
   788     007E                     wtemp0          set	126
   789                           
   790                           	psect	config
   791                           
   792                           ;Config register CONFIG @ 0x2007
   793                           ;	Oscillator Selection bits
   794                           ;	FOSC = XT, XT oscillator
   795                           ;	Watchdog Timer Enable bit
   796                           ;	WDTE = OFF, WDT disabled
   797                           ;	Power-up Timer Enable bit
   798                           ;	PWRTE = ON, PWRT enabled
   799                           ;	FLASH Program Memory Code Protection bits
   800                           ;	CP = OFF, Code protection off
   801                           ;	Brown-out Reset Enable bit
   802                           ;	BOREN = 0x1, unprogrammed default
   803                           ;	Low Voltage In-Circuit Serial Programming Enable bit
   804                           ;	LVP = 0x1, unprogrammed default
   805                           ;	Data EE Memory Code Protection
   806                           ;	CPD = 0x1, unprogrammed default
   807                           ;	FLASH Program Memory Write Enable
   808                           ;	WRT = 0x1, unprogrammed default
   809                           ;	In-Circuit Debugger Mode bit
   810                           ;	DEBUG = 0x1, unprogrammed default
   811     2007                     	org	8199
   812     2007  3FF1               	dw	16369

Data Sizes:
    Strings     4
    Constant    16
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(1) Largest target is 10
		 -> uart_enviar_valor@buffer(COMMON[10]), 

    f$.$source	PTR const unsigned char  size(1) Largest target is 0

    S550$buffer	PTR unsigned char  size(1) Largest target is 10
		 -> uart_enviar_valor@buffer(COMMON[10]), 

    S550$source	PTR const unsigned char  size(1) Largest target is 0

    vfprintf$0	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMMON[10]), 

    vfprintf$1	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_1(CODE[4]), 

    vfprintf$2	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMMON[1]), 


Critical Paths under _main in COMMON

    _main->_ler_teclado

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     260
                                              3 COMMON     3     3      0
                 _configurar_teclado
                    _configurar_uart
                        _ler_teclado
              _uart_enviar_caractere
 ---------------------------------------------------------------------------------
 (1) _uart_enviar_caractere                                1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ler_teclado                                          3     3      0     156
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _configurar_uart                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configurar_teclado                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _configurar_teclado
   _configurar_uart
   _ler_teclado
   _uart_enviar_caractere

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14      6       6     42.9%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK3               96      0       0      0.0%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       6      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Mon Feb 17 16:23:05 2025

                               pc 0002                                l60 0738                                l53 07AC  
                              l46 0721                                l54 07FB                                l55 07C2  
                              l63 0723                                l56 07D8                                l66 072B  
                              fsr 0004                               l700 0780                               l630 072C  
                             l710 079A                               l702 0781                               l626 0718  
                             l722 07DC                               l714 07B0                               l706 0788  
                             l628 071E                               l708 0796                               l732 07FA  
                             l740 0749                               l726 07EE                               l718 07C6  
                             l670 0729                               l750 0776                               l742 074E  
                             l728 07F7                               l744 0757                               l736 0739  
                             l746 0761                               l738 0743                               l668 0723  
                             l748 0770                               u110 0729                               u111 0728  
                             u210 07B0                               u211 07AF                               u300 0776  
                             u205 079D                               u301 0775                               u230 07C6  
                             u231 07C5                               u225 07B3                               u250 07DC  
                             u170 0787                               u251 07DB                               u171 0786  
                             u245 07C9                               u317 0752                               u190 079A  
                             u270 074E                               u191 0799                               u327 0765  
                             u271 074D                               u184 078E                               u280 0761  
                             u337 07F2                               u265 07DF                               u185 078C  
                             u281 0760                               u290 0770                               u291 076F  
                             fsr0 0004            ?_uart_enviar_caractere 0070                              STR_1 0019  
                            _TXIF 0064                              _main 0739                              btemp 007E  
                            start 0000                  ?_configurar_uart 0070                      ?_ler_teclado 0070  
                           ?_main 0070                             _RCSTA 0018                             _SPBRG 0099  
                           _PORTC 0007                             _TRISB 0086                             _TRISC 0087  
                           _TXREG 0019                             _TXSTA 0098                             pclath 000A  
                           status 0003                             wtemp0 007E                   __initialization 07FC  
                    __end_of_main 0780                  ler_teclado@linha 0072                            ??_main 0073  
      __end_of_configurar_teclado 0722           __end_of__initialization 07FC                    __pcstackCOMMON 0070  
         ??_uart_enviar_caractere 0070  __end_ofler_teclado@matriz_teclas 0019                        __pmaintext 0739  
                      __stringtab 0003                           __ptext1 0722                           __ptext2 0780  
                         __ptext3 072C                           __ptext4 0718              end_of_initialization 07FC  
              _configurar_teclado 0718               ?_configurar_teclado 0070                         _PORTBbits 0006  
            ??_configurar_teclado 0070               start_initialization 07FC                 ??_configurar_uart 0070  
   __end_of_uart_enviar_caractere 072C                     ??_ler_teclado 0070                         ___latbits 0002  
                       __pstrings 0003               __end_of_ler_teclado 07FC                       __stringbase 0008  
                       main@tecla 0075                   _configurar_uart 072C                       _ler_teclado 0780  
              __end_of__stringtab 0009          ler_teclado@matriz_teclas 0009             _uart_enviar_caractere 0722  
         __end_of_configurar_uart 0739                         stringcode 0003            uart_enviar_caractere@c 0070  
                        stringdir 0003                          stringtab 0003  
