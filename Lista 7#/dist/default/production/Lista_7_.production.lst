

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Tue Dec 10 01:15:49 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F877
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,space=0,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    14                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2,group=3
    19                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2,group=1
    20                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2,group=1
    21                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2,group=3
    22                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2,group=3
    23                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2,group=3
    24                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2,group=2
    25                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2,group=2
    26                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    30                           	dabs	1,0x7E,2
    31     0000                     
    32                           ; Generated 12/10/2023 GMT
    33                           ; 
    34                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution. Publication is not required when
    48                           ;        this file is used in an embedded application.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC16F877 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66     0004                     fsr             equ	4
    67     0004                     fsr0            equ	4
    68     0000                     indf            equ	0
    69     0000                     indf0           equ	0
    70     0002                     pc              equ	2
    71     0002                     pcl             equ	2
    72     000A                     pclath          equ	10
    73     0003                     status          equ	3
    74     0000                     INDF            equ	0	;# 
    75     0001                     TMR0            equ	1	;# 
    76     0002                     PCL             equ	2	;# 
    77     0003                     STATUS          equ	3	;# 
    78     0004                     FSR             equ	4	;# 
    79     0005                     PORTA           equ	5	;# 
    80     0006                     PORTB           equ	6	;# 
    81     0007                     PORTC           equ	7	;# 
    82     0008                     PORTD           equ	8	;# 
    83     0009                     PORTE           equ	9	;# 
    84     000A                     PCLATH          equ	10	;# 
    85     000B                     INTCON          equ	11	;# 
    86     000C                     PIR1            equ	12	;# 
    87     000D                     PIR2            equ	13	;# 
    88     000E                     TMR1            equ	14	;# 
    89     000E                     TMR1L           equ	14	;# 
    90     000F                     TMR1H           equ	15	;# 
    91     0010                     T1CON           equ	16	;# 
    92     0011                     TMR2            equ	17	;# 
    93     0012                     T2CON           equ	18	;# 
    94     0013                     SSPBUF          equ	19	;# 
    95     0014                     SSPCON          equ	20	;# 
    96     0015                     CCPR1           equ	21	;# 
    97     0015                     CCPR1L          equ	21	;# 
    98     0016                     CCPR1H          equ	22	;# 
    99     0017                     CCP1CON         equ	23	;# 
   100     0018                     RCSTA           equ	24	;# 
   101     0019                     TXREG           equ	25	;# 
   102     001A                     RCREG           equ	26	;# 
   103     001B                     CCPR2           equ	27	;# 
   104     001B                     CCPR2L          equ	27	;# 
   105     001C                     CCPR2H          equ	28	;# 
   106     001D                     CCP2CON         equ	29	;# 
   107     001E                     ADRESH          equ	30	;# 
   108     001F                     ADCON0          equ	31	;# 
   109     0081                     OPTION_REG      equ	129	;# 
   110     0085                     TRISA           equ	133	;# 
   111     0086                     TRISB           equ	134	;# 
   112     0087                     TRISC           equ	135	;# 
   113     0088                     TRISD           equ	136	;# 
   114     0089                     TRISE           equ	137	;# 
   115     008C                     PIE1            equ	140	;# 
   116     008D                     PIE2            equ	141	;# 
   117     008E                     PCON            equ	142	;# 
   118     0091                     SSPCON2         equ	145	;# 
   119     0092                     PR2             equ	146	;# 
   120     0093                     SSPADD          equ	147	;# 
   121     0094                     SSPSTAT         equ	148	;# 
   122     0098                     TXSTA           equ	152	;# 
   123     0099                     SPBRG           equ	153	;# 
   124     009E                     ADRESL          equ	158	;# 
   125     009F                     ADCON1          equ	159	;# 
   126     010C                     EEDATA          equ	268	;# 
   127     010D                     EEADR           equ	269	;# 
   128     010E                     EEDATH          equ	270	;# 
   129     010F                     EEADRH          equ	271	;# 
   130     018C                     EECON1          equ	396	;# 
   131     018D                     EECON2          equ	397	;# 
   132     0000                     INDF            equ	0	;# 
   133     0001                     TMR0            equ	1	;# 
   134     0002                     PCL             equ	2	;# 
   135     0003                     STATUS          equ	3	;# 
   136     0004                     FSR             equ	4	;# 
   137     0005                     PORTA           equ	5	;# 
   138     0006                     PORTB           equ	6	;# 
   139     0007                     PORTC           equ	7	;# 
   140     0008                     PORTD           equ	8	;# 
   141     0009                     PORTE           equ	9	;# 
   142     000A                     PCLATH          equ	10	;# 
   143     000B                     INTCON          equ	11	;# 
   144     000C                     PIR1            equ	12	;# 
   145     000D                     PIR2            equ	13	;# 
   146     000E                     TMR1            equ	14	;# 
   147     000E                     TMR1L           equ	14	;# 
   148     000F                     TMR1H           equ	15	;# 
   149     0010                     T1CON           equ	16	;# 
   150     0011                     TMR2            equ	17	;# 
   151     0012                     T2CON           equ	18	;# 
   152     0013                     SSPBUF          equ	19	;# 
   153     0014                     SSPCON          equ	20	;# 
   154     0015                     CCPR1           equ	21	;# 
   155     0015                     CCPR1L          equ	21	;# 
   156     0016                     CCPR1H          equ	22	;# 
   157     0017                     CCP1CON         equ	23	;# 
   158     0018                     RCSTA           equ	24	;# 
   159     0019                     TXREG           equ	25	;# 
   160     001A                     RCREG           equ	26	;# 
   161     001B                     CCPR2           equ	27	;# 
   162     001B                     CCPR2L          equ	27	;# 
   163     001C                     CCPR2H          equ	28	;# 
   164     001D                     CCP2CON         equ	29	;# 
   165     001E                     ADRESH          equ	30	;# 
   166     001F                     ADCON0          equ	31	;# 
   167     0081                     OPTION_REG      equ	129	;# 
   168     0085                     TRISA           equ	133	;# 
   169     0086                     TRISB           equ	134	;# 
   170     0087                     TRISC           equ	135	;# 
   171     0088                     TRISD           equ	136	;# 
   172     0089                     TRISE           equ	137	;# 
   173     008C                     PIE1            equ	140	;# 
   174     008D                     PIE2            equ	141	;# 
   175     008E                     PCON            equ	142	;# 
   176     0091                     SSPCON2         equ	145	;# 
   177     0092                     PR2             equ	146	;# 
   178     0093                     SSPADD          equ	147	;# 
   179     0094                     SSPSTAT         equ	148	;# 
   180     0098                     TXSTA           equ	152	;# 
   181     0099                     SPBRG           equ	153	;# 
   182     009E                     ADRESL          equ	158	;# 
   183     009F                     ADCON1          equ	159	;# 
   184     010C                     EEDATA          equ	268	;# 
   185     010D                     EEADR           equ	269	;# 
   186     010E                     EEDATH          equ	270	;# 
   187     010F                     EEADRH          equ	271	;# 
   188     018C                     EECON1          equ	396	;# 
   189     018D                     EECON2          equ	397	;# 
   190                           
   191                           	psect	idataBANK0
   192     0398                     __pidataBANK0:
   193                           
   194                           ;initializer for main@cursor_pos
   195     0398  3480               	retlw	128
   196                           
   197                           ;initializer for _tecla_anterior
   198     0399  34FF               	retlw	255
   199     0006                     _PORTBbits      set	6
   200     0007                     _PORTCbits      set	7
   201     0009                     _PORTEbits      set	9
   202     0008                     _PORTD          set	8
   203     0086                     _TRISB          set	134
   204     0087                     _TRISC          set	135
   205     0088                     _TRISD          set	136
   206     0089                     _TRISE          set	137
   207                           
   208                           	psect	strings
   209     0003                     __pstrings:
   210     0003                     stringtab:
   211     0003                     __stringtab:
   212     0003                     stringcode:	
   213                           ;	String table - string pointers are 1 byte each
   214                           
   215     0003                     stringdir:
   216     0003  3000               	movlw	high stringdir
   217     0004  008A               	movwf	10
   218     0005  0804               	movf	4,w
   219     0006  0A84               	incf	4,f
   220     0007  0782               	addwf	2,f
   221     0008                     __stringbase:
   222     0008  3400               	retlw	0
   223     0009                     __end_of__stringtab:
   224     0009                     STR_1:
   225     0009  3425               	retlw	37	;'%'
   226     000A  3464               	retlw	100	;'d'
   227     000B  3400               	retlw	0
   228                           
   229                           	psect	cinit
   230     07E1                     start_initialization:	
   231                           ; #config settings
   232                           
   233     07E1                     __initialization:
   234                           
   235                           ; Initialize objects allocated to BANK0
   236     07E1  120A  118A  2398  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   237     07E6  00E0               	movwf	__pdataBANK0& (0+127)
   238     07E7  120A  118A  2399  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   239     07EC  00E1               	movwf	(__pdataBANK0+1)& (0+127)
   240                           
   241                           ; Clear objects allocated to BANK1
   242     07ED  1383               	bcf	3,7	;select IRP bank0
   243     07EE  30A0               	movlw	low __pbssBANK1
   244     07EF  0084               	movwf	4
   245     07F0  30C0               	movlw	low (__pbssBANK1+32)
   246     07F1  120A  118A  239A  120A  118A  	fcall	clear_ram0
   247                           
   248                           ; Clear objects allocated to BANK0
   249     07F6  01DA               	clrf	__pbssBANK0& (0+127)
   250     07F7  01DB               	clrf	(__pbssBANK0+1)& (0+127)
   251     07F8  01DC               	clrf	(__pbssBANK0+2)& (0+127)
   252     07F9  01DD               	clrf	(__pbssBANK0+3)& (0+127)
   253     07FA  01DE               	clrf	(__pbssBANK0+4)& (0+127)
   254     07FB  01DF               	clrf	(__pbssBANK0+5)& (0+127)
   255     07FC                     end_of_initialization:	
   256                           ;End of C runtime variable initialization code
   257                           
   258     07FC                     __end_of__initialization:
   259     07FC  0183               	clrf	3
   260     07FD  120A  118A  2E5A   	ljmp	_main	;jump to C main() function
   261                           
   262                           	psect	bssBANK0
   263     005A                     __pbssBANK0:
   264     005A                     _width:
   265     005A                     	ds	2
   266     005C                     _prec:
   267     005C                     	ds	2
   268     005E                     _flags:
   269     005E                     	ds	1
   270     005F                     _tecla_pressionada:
   271     005F                     	ds	1
   272                           
   273                           	psect	dataBANK0
   274     0060                     __pdataBANK0:
   275     0060                     main@cursor_pos:
   276     0060                     	ds	1
   277     0061                     _tecla_anterior:
   278     0061                     	ds	1
   279                           
   280                           	psect	bssBANK1
   281     00A0                     __pbssBANK1:
   282     00A0                     _dbuf:
   283     00A0                     	ds	32
   284                           
   285                           	psect	clrtext
   286     039A                     clear_ram0:	
   287                           ;	Called with FSR containing the base address, and
   288                           ;	W with the last address+1
   289                           
   290     039A  0064               	clrwdt	;clear the watchdog before getting into this loop
   291     039B                     clrloop0:
   292     039B  0180               	clrf	0	;clear RAM location pointed to by FSR
   293     039C  0A84               	incf	4,f	;increment pointer
   294     039D  0604               	xorwf	4,w	;XOR with final address
   295     039E  1903               	btfsc	3,2	;have we reached the end yet?
   296     039F  3400               	retlw	0	;all done for this memory range, return
   297     03A0  0604               	xorwf	4,w	;XOR again to restore value
   298     03A1  2B9B               	goto	clrloop0	;do the next byte
   299                           
   300                           	psect	cstackCOMMON
   301     0070                     __pcstackCOMMON:
   302     0070                     ?_putch:
   303     0070                     ?_lcd_data:	
   304                           ; 1 bytes @ 0x0
   305                           
   306     0070                     ?_lcd_command:	
   307                           ; 1 bytes @ 0x0
   308                           
   309     0070                     ?_lcd_initialise:	
   310                           ; 1 bytes @ 0x0
   311                           
   312     0070                     ?_debounce:	
   313                           ; 1 bytes @ 0x0
   314                           
   315     0070                     ?_teclado:	
   316                           ; 1 bytes @ 0x0
   317                           
   318     0070                     ?_atualiza_lcd:	
   319                           ; 1 bytes @ 0x0
   320                           
   321     0070                     ?_main:	
   322                           ; 1 bytes @ 0x0
   323                           
   324     0070                     ?_fputc:	
   325                           ; 1 bytes @ 0x0
   326                           
   327     0070                     ?___awdiv:	
   328                           ; 2 bytes @ 0x0
   329                           
   330     0070                     ?___awmod:	
   331                           ; 2 bytes @ 0x0
   332                           
   333     0070                     teclado@tecla:	
   334                           ; 2 bytes @ 0x0
   335                           
   336     0070                     putch@c:	
   337                           ; 1 bytes @ 0x0
   338                           
   339     0070                     ___awdiv@divisor:	
   340                           ; 1 bytes @ 0x0
   341                           
   342     0070                     ___awmod@divisor:	
   343                           ; 2 bytes @ 0x0
   344                           
   345     0070                     fputc@c:	
   346                           ; 2 bytes @ 0x0
   347                           
   348     0070                     ??_putch:	
   349                           ; 2 bytes @ 0x0
   350                           
   351     0070                     ??_lcd_data:	
   352                           ; 1 bytes @ 0x0
   353                           
   354     0070                     ??_lcd_command:	
   355                           ; 1 bytes @ 0x0
   356                           
   357     0070                     ??_debounce:	
   358                           ; 1 bytes @ 0x0
   359                           
   360     0070                     ??_teclado:	
   361                           ; 1 bytes @ 0x0
   362                           
   363                           
   364                           ; 1 bytes @ 0x0
   365     0070                     	ds	2
   366     0072                     lcd_data@data:
   367     0072                     lcd_command@cmd:	
   368                           ; 1 bytes @ 0x2
   369                           
   370     0072                     ___awdiv@dividend:	
   371                           ; 1 bytes @ 0x2
   372                           
   373     0072                     ___awmod@dividend:	
   374                           ; 2 bytes @ 0x2
   375                           
   376     0072                     fputc@fp:	
   377                           ; 2 bytes @ 0x2
   378                           
   379                           
   380                           ; 2 bytes @ 0x2
   381     0072                     	ds	1
   382     0073                     ?_lcd_string:
   383     0073                     lcd_string@str:	
   384                           ; 1 bytes @ 0x3
   385                           
   386     0073                     ??_lcd_initialise:	
   387                           ; 1 bytes @ 0x3
   388                           
   389                           
   390                           ; 1 bytes @ 0x3
   391     0073                     	ds	1
   392     0074                     ___awdiv@counter:
   393     0074                     ___awmod@counter:	
   394                           ; 1 bytes @ 0x4
   395                           
   396     0074                     ??_fputc:	
   397                           ; 1 bytes @ 0x4
   398                           
   399     0074                     ??_lcd_string:	
   400                           ; 1 bytes @ 0x4
   401                           
   402     0074                     ??___awdiv:	
   403                           ; 1 bytes @ 0x4
   404                           
   405     0074                     ??___awmod:	
   406                           ; 1 bytes @ 0x4
   407                           
   408                           
   409                           ; 1 bytes @ 0x4
   410     0074                     	ds	1
   411     0075                     ___awdiv@sign:
   412     0075                     ___awmod@sign:	
   413                           ; 1 bytes @ 0x5
   414                           
   415                           
   416                           ; 1 bytes @ 0x5
   417     0075                     	ds	1
   418     0076                     ?_abs:
   419     0076                     ___awdiv@quotient:	
   420                           ; 2 bytes @ 0x6
   421                           
   422     0076                     abs@a:	
   423                           ; 2 bytes @ 0x6
   424                           
   425                           
   426                           ; 2 bytes @ 0x6
   427     0076                     	ds	2
   428     0078                     ??_abs:
   429                           
   430                           ; 1 bytes @ 0x8
   431     0078                     	ds	5
   432     007D                     vfprintf@cfmt:
   433     007D                     ??_vfprintf:	
   434                           ; 1 bytes @ 0xD
   435                           
   436                           
   437                           ; 1 bytes @ 0xD
   438     007D                     	ds	1
   439                           
   440                           	psect	cstackBANK0
   441     0020                     __pcstackBANK0:
   442     0020                     ?_vfpfcnvrt:
   443     0020                     vfpfcnvrt@fp:	
   444                           ; 1 bytes @ 0x0
   445                           
   446                           
   447                           ; 2 bytes @ 0x0
   448     0020                     	ds	2
   449     0022                     vfpfcnvrt@fmt:
   450                           
   451                           ; 1 bytes @ 0x2
   452     0022                     	ds	1
   453     0023                     vfpfcnvrt@ap:
   454                           
   455                           ; 1 bytes @ 0x3
   456     0023                     	ds	1
   457     0024                     ??_vfpfcnvrt:
   458                           
   459                           ; 1 bytes @ 0x4
   460     0024                     	ds	2
   461     0026                     vfpfcnvrt@done:
   462                           
   463                           ; 1 bytes @ 0x6
   464     0026                     	ds	1
   465     0027                     vfpfcnvrt@cp:
   466                           
   467                           ; 1 bytes @ 0x7
   468     0027                     	ds	1
   469     0028                     vfpfcnvrt@convarg:
   470                           
   471                           ; 4 bytes @ 0x8
   472     0028                     	ds	4
   473     002C                     vfpfcnvrt@c:
   474                           
   475                           ; 1 bytes @ 0xC
   476     002C                     	ds	1
   477     002D                     ?_vfprintf:
   478     002D                     vfprintf@fp:	
   479                           ; 2 bytes @ 0xD
   480                           
   481                           
   482                           ; 2 bytes @ 0xD
   483     002D                     	ds	2
   484     002F                     vfprintf@fmt:
   485                           
   486                           ; 1 bytes @ 0xF
   487     002F                     	ds	1
   488     0030                     vfprintf@ap:
   489                           
   490                           ; 1 bytes @ 0x10
   491     0030                     	ds	1
   492     0031                     ?_sprintf:
   493     0031                     sprintf@s:	
   494                           ; 2 bytes @ 0x11
   495                           
   496                           
   497                           ; 1 bytes @ 0x11
   498     0031                     	ds	1
   499     0032                     sprintf@fmt:
   500                           
   501                           ; 1 bytes @ 0x12
   502     0032                     	ds	3
   503     0035                     ??_sprintf:
   504                           
   505                           ; 1 bytes @ 0x15
   506     0035                     	ds	1
   507     0036                     sprintf@ap:
   508                           
   509                           ; 1 bytes @ 0x16
   510     0036                     	ds	1
   511     0037                     sprintf@f:
   512                           
   513                           ; 11 bytes @ 0x17
   514     0037                     	ds	11
   515     0042                     ??_atualiza_lcd:
   516                           
   517                           ; 1 bytes @ 0x22
   518     0042                     	ds	2
   519     0044                     atualiza_lcd@buffer:
   520                           
   521                           ; 16 bytes @ 0x24
   522     0044                     	ds	16
   523     0054                     atualiza_lcd@tecla_pressionado:
   524                           
   525                           ; 1 bytes @ 0x34
   526     0054                     	ds	1
   527     0055                     ??_main:
   528                           
   529                           ; 1 bytes @ 0x35
   530     0055                     	ds	2
   531     0057                     main@i:
   532                           
   533                           ; 2 bytes @ 0x37
   534     0057                     	ds	2
   535     0059                     main@tecla:
   536                           
   537                           ; 1 bytes @ 0x39
   538     0059                     	ds	1
   539                           
   540                           	psect	maintext
   541     065A                     __pmaintext:	
   542 ;;
   543 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   544 ;;
   545 ;; *************** function _main *****************
   546 ;; Defined at:
   547 ;;		line 126 in file "atividade7.c"
   548 ;; Parameters:    Size  Location     Type
   549 ;;		None
   550 ;; Auto vars:     Size  Location     Type
   551 ;;  tecla           1    0        unsigned char 
   552 ;;  i               2   55[BANK0 ] int 
   553 ;;  tecla           1   57[BANK0 ] unsigned char 
   554 ;; Return value:  Size  Location     Type
   555 ;;                  1    wreg      void 
   556 ;; Registers used:
   557 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   558 ;; Tracked objects:
   559 ;;		On entry : B00/0
   560 ;;		On exit  : 0/0
   561 ;;		Unchanged: 0/0
   562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   563 ;;      Params:         0       0       0       0       0
   564 ;;      Locals:         0       3       0       0       0
   565 ;;      Temps:          0       2       0       0       0
   566 ;;      Totals:         0       5       0       0       0
   567 ;;Total ram usage:        5 bytes
   568 ;; Hardware stack levels required when called: 6
   569 ;; This function calls:
   570 ;;		_atualiza_lcd
   571 ;;		_debounce
   572 ;;		_lcd_command
   573 ;;		_lcd_data
   574 ;;		_lcd_initialise
   575 ;;		_teclado
   576 ;; This function is called by:
   577 ;;		Startup code after reset
   578 ;; This function uses a non-reentrant model
   579 ;;
   580                           
   581     065A                     _main:	
   582                           ;psect for function _main
   583                           
   584     065A                     l1292:	
   585                           ;incstack = 0
   586                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   587                           
   588                           
   589                           ;atividade7.c: 128:     TRISE = 0x00;
   590     065A  1683               	bsf	3,5	;RP0=1, select bank1
   591     065B  1303               	bcf	3,6	;RP1=0, select bank1
   592     065C  0189               	clrf	9	;volatile
   593                           
   594                           ;atividade7.c: 129:     TRISD = 0x00;
   595     065D  0188               	clrf	8	;volatile
   596                           
   597                           ;atividade7.c: 130:     TRISC = 0x00;
   598     065E  0187               	clrf	7	;volatile
   599     065F                     l1294:
   600                           
   601                           ;atividade7.c: 131:     TRISB = 0xFF;
   602     065F  30FF               	movlw	255
   603     0660  0086               	movwf	6	;volatile
   604     0661                     l1296:
   605                           
   606                           ;atividade7.c: 133:     lcd_initialise();
   607     0661  120A  118A  23FD  120A  118A  	fcall	_lcd_initialise
   608     0666                     l1298:
   609                           
   610                           ;atividade7.c: 134:     atualiza_lcd();
   611     0666  120A  118A  245E  120A  118A  	fcall	_atualiza_lcd
   612     066B                     l1300:
   613                           
   614                           ;atividade7.c: 138:         unsigned char tecla = teclado();
   615     066B  120A  118A  2544  120A  118A  	fcall	_teclado
   616     0670  1283               	bcf	3,5	;RP0=0, select bank0
   617     0671  1303               	bcf	3,6	;RP1=0, select bank0
   618     0672  00D9               	movwf	main@tecla
   619     0673                     l1302:
   620                           
   621                           ;atividade7.c: 140:         static unsigned char cursor_pos = 0x80;;atividade7.c: 143:  
      +                                 for(int i = cursor_pos; i < 31; i++ ){
   622     0673  0860               	movf	main@cursor_pos,w
   623     0674  00D5               	movwf	??_main
   624     0675  01D6               	clrf	??_main+1
   625     0676  0855               	movf	??_main,w
   626     0677  00D7               	movwf	main@i
   627     0678  0856               	movf	??_main+1,w
   628     0679  00D8               	movwf	main@i+1
   629     067A                     l1304:
   630     067A  0858               	movf	main@i+1,w
   631     067B  3A80               	xorlw	128
   632     067C  00FF               	movwf	btemp+1
   633     067D  3080               	movlw	128
   634     067E  027F               	subwf	btemp+1,w
   635     067F  1D03               	skipz
   636     0680  2E83               	goto	u1155
   637     0681  301F               	movlw	31
   638     0682  0257               	subwf	main@i,w
   639     0683                     u1155:
   640     0683  1C03               	skipc
   641     0684  2E86               	goto	u1151
   642     0685  2E87               	goto	u1150
   643     0686                     u1151:
   644     0686  2E88               	goto	l1308
   645     0687                     u1150:
   646     0687  2EC3               	goto	l1332
   647     0688                     l1308:
   648                           
   649                           ;atividade7.c: 145:             lcd_command(i);
   650     0688  1283               	bcf	3,5	;RP0=0, select bank0
   651     0689  1303               	bcf	3,6	;RP1=0, select bank0
   652     068A  0857               	movf	main@i,w
   653     068B  120A  118A  23C1  120A  118A  	fcall	_lcd_command
   654     0690                     l1310:
   655                           
   656                           ;atividade7.c: 147:             if(cursor_pos < 16){
   657     0690  3010               	movlw	16
   658     0691  1283               	bcf	3,5	;RP0=0, select bank0
   659     0692  1303               	bcf	3,6	;RP1=0, select bank0
   660     0693  0260               	subwf	main@cursor_pos,w
   661     0694  1803               	skipnc
   662     0695  2E97               	goto	u1161
   663     0696  2E98               	goto	u1160
   664     0697                     u1161:
   665     0697  2EB2               	goto	l1324
   666     0698                     u1160:
   667     0698                     l1312:
   668                           
   669                           ;atividade7.c: 149:               if (tecla < 10) {
   670     0698  300A               	movlw	10
   671     0699  0259               	subwf	main@tecla,w
   672     069A  1803               	skipnc
   673     069B  2E9D               	goto	u1171
   674     069C  2E9E               	goto	u1170
   675     069D                     u1171:
   676     069D  2EA6               	goto	l1316
   677     069E                     u1170:
   678     069E                     l1314:
   679                           
   680                           ;atividade7.c: 150:                     lcd_data(tecla + '0');
   681     069E  0859               	movf	main@tecla,w
   682     069F  3E30               	addlw	48
   683     06A0  120A  118A  23D5  120A  118A  	fcall	_lcd_data
   684                           
   685                           ;atividade7.c: 151:               } else {
   686     06A5  2EAD               	goto	l1318
   687     06A6                     l1316:
   688                           
   689                           ;atividade7.c: 153:                     lcd_data(tecla - 10 + 'A');
   690     06A6  0859               	movf	main@tecla,w
   691     06A7  3E37               	addlw	55
   692     06A8  120A  118A  23D5  120A  118A  	fcall	_lcd_data
   693     06AD                     l1318:
   694                           
   695                           ;atividade7.c: 155:               cursor_pos++;
   696     06AD  3001               	movlw	1
   697     06AE  1283               	bcf	3,5	;RP0=0, select bank0
   698     06AF  1303               	bcf	3,6	;RP1=0, select bank0
   699     06B0  07E0               	addwf	main@cursor_pos,f
   700                           
   701                           ;atividade7.c: 156:                 break;
   702     06B1  2EC3               	goto	l1332
   703     06B2                     l1324:
   704                           
   705                           ;atividade7.c: 162:                     lcd_command(0xC0);
   706     06B2  30C0               	movlw	192
   707     06B3  120A  118A  23C1  120A  118A  	fcall	_lcd_command
   708     06B8                     l1326:
   709                           
   710                           ;atividade7.c: 163:                     cursor_pos = 0xC0;
   711     06B8  30C0               	movlw	192
   712     06B9  1283               	bcf	3,5	;RP0=0, select bank0
   713     06BA  1303               	bcf	3,6	;RP1=0, select bank0
   714     06BB  00E0               	movwf	main@cursor_pos
   715     06BC                     l1328:
   716                           
   717                           ;atividade7.c: 167:         }
   718     06BC  3001               	movlw	1
   719     06BD  07D7               	addwf	main@i,f
   720     06BE  1803               	skipnc
   721     06BF  0AD8               	incf	main@i+1,f
   722     06C0  3000               	movlw	0
   723     06C1  07D8               	addwf	main@i+1,f
   724     06C2  2E7A               	goto	l1304
   725     06C3                     l1332:
   726                           
   727                           ;atividade7.c: 168:         if (tecla != 0xFF) {
   728     06C3  1283               	bcf	3,5	;RP0=0, select bank0
   729     06C4  1303               	bcf	3,6	;RP1=0, select bank0
   730     06C5  0A59               	incf	main@tecla,w
   731     06C6  1903               	btfsc	3,2
   732     06C7  2EC9               	goto	u1181
   733     06C8  2ECA               	goto	u1180
   734     06C9                     u1181:
   735     06C9  2ED9               	goto	l1338
   736     06CA                     u1180:
   737     06CA                     l1334:
   738                           
   739                           ;atividade7.c: 169:             debounce();
   740     06CA  120A  118A  23A2  120A  118A  	fcall	_debounce
   741     06CF                     l1336:	
   742                           ;atividade7.c: 170:             while (teclado() != 0xFF);
   743                           
   744     06CF  120A  118A  2544  120A  118A  	fcall	_teclado
   745     06D4  3AFF               	xorlw	255
   746     06D5  1D03               	skipz
   747     06D6  2ED8               	goto	u1191
   748     06D7  2ED9               	goto	u1190
   749     06D8                     u1191:
   750     06D8  2ECF               	goto	l1336
   751     06D9                     u1190:
   752     06D9                     l1338:
   753                           
   754                           ;atividade7.c: 173:          lcd_initialise();
   755     06D9  120A  118A  23FD  120A  118A  	fcall	_lcd_initialise
   756     06DE                     l85:	
   757                           ;atividade7.c: 175:     while (1) {
   758                           
   759     06DE  120A  118A  2544  120A  118A  	fcall	_teclado
   760     06E3                     l1340:
   761                           
   762                           ;atividade7.c: 177:         atualiza_lcd();
   763     06E3  120A  118A  245E  120A  118A  	fcall	_atualiza_lcd
   764     06E8                     l1342:
   765                           
   766                           ;atividade7.c: 179:         debounce();
   767     06E8  120A  118A  23A2  120A  118A  	fcall	_debounce
   768     06ED                     l1344:	
   769                           ;atividade7.c: 180:         while (teclado() != 20);
   770                           
   771     06ED  120A  118A  2544  120A  118A  	fcall	_teclado
   772     06F2  3A14               	xorlw	20
   773     06F3  1D03               	skipz
   774     06F4  2EF6               	goto	u1201
   775     06F5  2EF7               	goto	u1200
   776     06F6                     u1201:
   777     06F6  2EED               	goto	l1344
   778     06F7                     u1200:
   779     06F7  2EDE               	goto	l85
   780     06F8  120A  118A  2800   	ljmp	start
   781     06FB                     __end_of_main:
   782                           
   783                           	psect	text1
   784     03FD                     __ptext1:	
   785 ;; *************** function _lcd_initialise *****************
   786 ;; Defined at:
   787 ;;		line 51 in file "atividade7.c"
   788 ;; Parameters:    Size  Location     Type
   789 ;;		None
   790 ;; Auto vars:     Size  Location     Type
   791 ;;		None
   792 ;; Return value:  Size  Location     Type
   793 ;;                  1    wreg      void 
   794 ;; Registers used:
   795 ;;		wreg, status,2, status,0, pclath, cstack
   796 ;; Tracked objects:
   797 ;;		On entry : 0/0
   798 ;;		On exit  : 0/0
   799 ;;		Unchanged: 0/0
   800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   801 ;;      Params:         0       0       0       0       0
   802 ;;      Locals:         0       0       0       0       0
   803 ;;      Temps:          0       0       0       0       0
   804 ;;      Totals:         0       0       0       0       0
   805 ;;Total ram usage:        0 bytes
   806 ;; Hardware stack levels used: 1
   807 ;; Hardware stack levels required when called: 1
   808 ;; This function calls:
   809 ;;		_lcd_command
   810 ;; This function is called by:
   811 ;;		_main
   812 ;; This function uses a non-reentrant model
   813 ;;
   814                           
   815     03FD                     _lcd_initialise:	
   816                           ;psect for function _lcd_initialise
   817                           
   818     03FD                     l1278:	
   819                           ;incstack = 0
   820                           ; Regs used in _lcd_initialise: [wreg+status,2+status,0+pclath+cstack]
   821                           
   822                           
   823                           ;atividade7.c: 52:     lcd_command(0x38);
   824     03FD  3038               	movlw	56
   825     03FE  120A  118A  23C1  120A  118A  	fcall	_lcd_command
   826                           
   827                           ;atividade7.c: 53:     lcd_command(0x06);
   828     0403  3006               	movlw	6
   829     0404  120A  118A  23C1  120A  118A  	fcall	_lcd_command
   830                           
   831                           ;atividade7.c: 54:     lcd_command(0x0C);
   832     0409  300C               	movlw	12
   833     040A  120A  118A  23C1  120A  118A  	fcall	_lcd_command
   834                           
   835                           ;atividade7.c: 55:     lcd_command(0x01);
   836     040F  3001               	movlw	1
   837     0410  120A  118A  23C1  120A  118A  	fcall	_lcd_command
   838     0415                     l39:
   839     0415  0008               	return
   840     0416                     __end_of_lcd_initialise:
   841                           
   842                           	psect	text2
   843     03A2                     __ptext2:	
   844 ;; *************** function _debounce *****************
   845 ;; Defined at:
   846 ;;		line 58 in file "atividade7.c"
   847 ;; Parameters:    Size  Location     Type
   848 ;;		None
   849 ;; Auto vars:     Size  Location     Type
   850 ;;		None
   851 ;; Return value:  Size  Location     Type
   852 ;;                  1    wreg      void 
   853 ;; Registers used:
   854 ;;		wreg
   855 ;; Tracked objects:
   856 ;;		On entry : 0/0
   857 ;;		On exit  : 0/0
   858 ;;		Unchanged: 0/0
   859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   860 ;;      Params:         0       0       0       0       0
   861 ;;      Locals:         0       0       0       0       0
   862 ;;      Temps:          3       0       0       0       0
   863 ;;      Totals:         3       0       0       0       0
   864 ;;Total ram usage:        3 bytes
   865 ;; Hardware stack levels used: 1
   866 ;; This function calls:
   867 ;;		Nothing
   868 ;; This function is called by:
   869 ;;		_main
   870 ;; This function uses a non-reentrant model
   871 ;;
   872                           
   873     03A2                     _debounce:	
   874                           ;psect for function _debounce
   875                           
   876     03A2                     l1280:	
   877                           ;incstack = 0
   878                           ; Regs used in _debounce: [wreg]
   879                           
   880                           
   881                           ;atividade7.c: 59:     _delay((unsigned long)((50)*(20000000/4000.0)));
   882     03A2  3002               	movlw	2
   883     03A3  00F2               	movwf	??_debounce+2
   884     03A4  3045               	movlw	69
   885     03A5  00F1               	movwf	??_debounce+1
   886     03A6  30A9               	movlw	169
   887     03A7  00F0               	movwf	??_debounce
   888     03A8                     u1217:
   889     03A8  0BF0               	decfsz	??_debounce,f
   890     03A9  2BA8               	goto	u1217
   891     03AA  0BF1               	decfsz	??_debounce+1,f
   892     03AB  2BA8               	goto	u1217
   893     03AC  0BF2               	decfsz	??_debounce+2,f
   894     03AD  2BA8               	goto	u1217
   895     03AE  2BAF               	nop2
   896     03AF                     l42:
   897     03AF  0008               	return
   898     03B0                     __end_of_debounce:
   899                           
   900                           	psect	text3
   901     045E                     __ptext3:	
   902 ;; *************** function _atualiza_lcd *****************
   903 ;; Defined at:
   904 ;;		line 93 in file "atividade7.c"
   905 ;; Parameters:    Size  Location     Type
   906 ;;		None
   907 ;; Auto vars:     Size  Location     Type
   908 ;;  buffer         16   36[BANK0 ] unsigned char [16]
   909 ;;  tecla_pressi    1   52[BANK0 ] unsigned char 
   910 ;; Return value:  Size  Location     Type
   911 ;;                  1    wreg      void 
   912 ;; Registers used:
   913 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   914 ;; Tracked objects:
   915 ;;		On entry : 0/0
   916 ;;		On exit  : 0/0
   917 ;;		Unchanged: 0/0
   918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   919 ;;      Params:         0       0       0       0       0
   920 ;;      Locals:         0      17       0       0       0
   921 ;;      Temps:          0       2       0       0       0
   922 ;;      Totals:         0      19       0       0       0
   923 ;;Total ram usage:       19 bytes
   924 ;; Hardware stack levels used: 1
   925 ;; Hardware stack levels required when called: 5
   926 ;; This function calls:
   927 ;;		_lcd_command
   928 ;;		_lcd_string
   929 ;;		_sprintf
   930 ;;		_teclado
   931 ;; This function is called by:
   932 ;;		_main
   933 ;; This function uses a non-reentrant model
   934 ;;
   935                           
   936     045E                     _atualiza_lcd:	
   937                           ;psect for function _atualiza_lcd
   938                           
   939     045E                     l1282:	
   940                           ;incstack = 0
   941                           ; Regs used in _atualiza_lcd: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   942                           
   943                           
   944                           ;atividade7.c: 95:      unsigned char tecla_pressionado = teclado();
   945     045E  120A  118A  2544  120A  118A  	fcall	_teclado
   946     0463  1283               	bcf	3,5	;RP0=0, select bank0
   947     0464  1303               	bcf	3,6	;RP1=0, select bank0
   948     0465  00D4               	movwf	atualiza_lcd@tecla_pressionado
   949     0466                     l1284:
   950                           
   951                           ;atividade7.c: 97:     char buffer[16];;atividade7.c: 98:     sprintf(buffer, "%d", tecl
      +                          a_pressionado);
   952     0466  3044               	movlw	(low (atualiza_lcd@buffer| 0))& (0+255)
   953     0467  00B1               	movwf	sprintf@s
   954     0468  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   955     0469  00B2               	movwf	sprintf@fmt
   956     046A  0854               	movf	atualiza_lcd@tecla_pressionado,w
   957     046B  00C2               	movwf	??_atualiza_lcd
   958     046C  01C3               	clrf	??_atualiza_lcd+1
   959     046D  0842               	movf	??_atualiza_lcd,w
   960     046E  00B3               	movwf	?_sprintf+2
   961     046F  0843               	movf	??_atualiza_lcd+1,w
   962     0470  00B4               	movwf	?_sprintf+3
   963     0471  120A  118A  2416  120A  118A  	fcall	_sprintf
   964     0476                     l1286:
   965                           
   966                           ;atividade7.c: 100:     lcd_command(0x80);
   967     0476  3080               	movlw	128
   968     0477  120A  118A  23C1  120A  118A  	fcall	_lcd_command
   969     047C                     l1288:
   970                           
   971                           ;atividade7.c: 102:     lcd_command(0xC0);
   972     047C  30C0               	movlw	192
   973     047D  120A  118A  23C1  120A  118A  	fcall	_lcd_command
   974     0482                     l1290:
   975                           
   976                           ;atividade7.c: 103:     lcd_string(buffer);
   977     0482  3044               	movlw	(low (atualiza_lcd@buffer| 0))& (0+255)
   978     0483  00F3               	movwf	lcd_string@str
   979     0484  120A  118A  23E9  120A  118A  	fcall	_lcd_string
   980     0489                     l67:
   981     0489  0008               	return
   982     048A                     __end_of_atualiza_lcd:
   983                           
   984                           	psect	text4
   985     0544                     __ptext4:	
   986 ;; *************** function _teclado *****************
   987 ;; Defined at:
   988 ;;		line 62 in file "atividade7.c"
   989 ;; Parameters:    Size  Location     Type
   990 ;;		None
   991 ;; Auto vars:     Size  Location     Type
   992 ;;  tecla           1    0[COMMON] unsigned char 
   993 ;; Return value:  Size  Location     Type
   994 ;;                  1    wreg      unsigned char 
   995 ;; Registers used:
   996 ;;		wreg, status,2, status,0
   997 ;; Tracked objects:
   998 ;;		On entry : 0/0
   999 ;;		On exit  : 0/0
  1000 ;;		Unchanged: 0/0
  1001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1002 ;;      Params:         0       0       0       0       0
  1003 ;;      Locals:         1       0       0       0       0
  1004 ;;      Temps:          0       0       0       0       0
  1005 ;;      Totals:         1       0       0       0       0
  1006 ;;Total ram usage:        1 bytes
  1007 ;; Hardware stack levels used: 1
  1008 ;; This function calls:
  1009 ;;		Nothing
  1010 ;; This function is called by:
  1011 ;;		_atualiza_lcd
  1012 ;;		_main
  1013 ;; This function uses a non-reentrant model
  1014 ;;
  1015                           
  1016     0544                     _teclado:	
  1017                           ;psect for function _teclado
  1018                           
  1019     0544                     l1222:	
  1020                           ;incstack = 0
  1021                           ; Regs used in _teclado: [wreg+status,2+status,0]
  1022                           
  1023                           
  1024                           ;atividade7.c: 63:     unsigned char tecla = 20;
  1025     0544  3014               	movlw	20
  1026     0545  00F0               	movwf	teclado@tecla
  1027                           
  1028                           ;atividade7.c: 65:   while(tecla == 20){
  1029     0546  2DB8               	goto	l1258
  1030     0547                     l46:
  1031                           
  1032                           ;atividade7.c: 66:     PORTCbits.RC0 = 0; PORTCbits.RC1 = 1; PORTCbits.RC2 = 1; PORTCbit
      +                          s.RC3 = 1;
  1033     0547  1283               	bcf	3,5	;RP0=0, select bank0
  1034     0548  1303               	bcf	3,6	;RP1=0, select bank0
  1035     0549  1007               	bcf	7,0	;volatile
  1036     054A  1487               	bsf	7,1	;volatile
  1037     054B  1507               	bsf	7,2	;volatile
  1038     054C  1587               	bsf	7,3	;volatile
  1039                           
  1040                           ;atividade7.c: 67:     if (PORTBbits.RB0 == 0) tecla = 0;
  1041     054D  1806               	btfsc	6,0	;volatile
  1042     054E  2D50               	goto	u981
  1043     054F  2D51               	goto	u980
  1044     0550                     u981:
  1045     0550  2D52               	goto	l1226
  1046     0551                     u980:
  1047     0551                     l1224:
  1048     0551  01F0               	clrf	teclado@tecla
  1049     0552                     l1226:
  1050                           
  1051                           ;atividade7.c: 68:     if (PORTBbits.RB1 == 0) tecla = 1;
  1052     0552  1886               	btfsc	6,1	;volatile
  1053     0553  2D55               	goto	u991
  1054     0554  2D56               	goto	u990
  1055     0555                     u991:
  1056     0555  2D58               	goto	l48
  1057     0556                     u990:
  1058     0556                     l1228:
  1059     0556  3001               	movlw	1
  1060     0557  00F0               	movwf	teclado@tecla
  1061     0558                     l48:
  1062                           
  1063                           ;atividade7.c: 69:     if (PORTBbits.RB2 == 0) tecla = 2;
  1064     0558  1906               	btfsc	6,2	;volatile
  1065     0559  2D5B               	goto	u1001
  1066     055A  2D5C               	goto	u1000
  1067     055B                     u1001:
  1068     055B  2D5E               	goto	l49
  1069     055C                     u1000:
  1070     055C                     l1230:
  1071     055C  3002               	movlw	2
  1072     055D  00F0               	movwf	teclado@tecla
  1073     055E                     l49:
  1074                           
  1075                           ;atividade7.c: 70:     if (PORTBbits.RB3 == 0) tecla = 3;
  1076     055E  1986               	btfsc	6,3	;volatile
  1077     055F  2D61               	goto	u1011
  1078     0560  2D62               	goto	u1010
  1079     0561                     u1011:
  1080     0561  2D64               	goto	l50
  1081     0562                     u1010:
  1082     0562                     l1232:
  1083     0562  3003               	movlw	3
  1084     0563  00F0               	movwf	teclado@tecla
  1085     0564                     l50:
  1086                           
  1087                           ;atividade7.c: 72:     PORTCbits.RC0 = 1; PORTCbits.RC1 = 0; PORTCbits.RC2 = 1; PORTCbit
      +                          s.RC3 = 1;
  1088     0564  1407               	bsf	7,0	;volatile
  1089     0565  1087               	bcf	7,1	;volatile
  1090     0566  1507               	bsf	7,2	;volatile
  1091     0567  1587               	bsf	7,3	;volatile
  1092                           
  1093                           ;atividade7.c: 73:     if (PORTBbits.RB0 == 0) tecla = 4;
  1094     0568  1806               	btfsc	6,0	;volatile
  1095     0569  2D6B               	goto	u1021
  1096     056A  2D6C               	goto	u1020
  1097     056B                     u1021:
  1098     056B  2D6E               	goto	l51
  1099     056C                     u1020:
  1100     056C                     l1234:
  1101     056C  3004               	movlw	4
  1102     056D  00F0               	movwf	teclado@tecla
  1103     056E                     l51:
  1104                           
  1105                           ;atividade7.c: 74:     if (PORTBbits.RB1 == 0) tecla = 5;
  1106     056E  1886               	btfsc	6,1	;volatile
  1107     056F  2D71               	goto	u1031
  1108     0570  2D72               	goto	u1030
  1109     0571                     u1031:
  1110     0571  2D74               	goto	l52
  1111     0572                     u1030:
  1112     0572                     l1236:
  1113     0572  3005               	movlw	5
  1114     0573  00F0               	movwf	teclado@tecla
  1115     0574                     l52:
  1116                           
  1117                           ;atividade7.c: 75:     if (PORTBbits.RB2 == 0) tecla = 6;
  1118     0574  1906               	btfsc	6,2	;volatile
  1119     0575  2D77               	goto	u1041
  1120     0576  2D78               	goto	u1040
  1121     0577                     u1041:
  1122     0577  2D7A               	goto	l53
  1123     0578                     u1040:
  1124     0578                     l1238:
  1125     0578  3006               	movlw	6
  1126     0579  00F0               	movwf	teclado@tecla
  1127     057A                     l53:
  1128                           
  1129                           ;atividade7.c: 76:     if (PORTBbits.RB3 == 0) tecla = 7;
  1130     057A  1986               	btfsc	6,3	;volatile
  1131     057B  2D7D               	goto	u1051
  1132     057C  2D7E               	goto	u1050
  1133     057D                     u1051:
  1134     057D  2D80               	goto	l54
  1135     057E                     u1050:
  1136     057E                     l1240:
  1137     057E  3007               	movlw	7
  1138     057F  00F0               	movwf	teclado@tecla
  1139     0580                     l54:
  1140                           
  1141                           ;atividade7.c: 78:     PORTCbits.RC0 = 1; PORTCbits.RC1 = 1; PORTCbits.RC2 = 0; PORTCbit
      +                          s.RC3 = 1;
  1142     0580  1407               	bsf	7,0	;volatile
  1143     0581  1487               	bsf	7,1	;volatile
  1144     0582  1107               	bcf	7,2	;volatile
  1145     0583  1587               	bsf	7,3	;volatile
  1146                           
  1147                           ;atividade7.c: 79:     if (PORTBbits.RB0 == 0) tecla = 8;
  1148     0584  1806               	btfsc	6,0	;volatile
  1149     0585  2D87               	goto	u1061
  1150     0586  2D88               	goto	u1060
  1151     0587                     u1061:
  1152     0587  2D8A               	goto	l55
  1153     0588                     u1060:
  1154     0588                     l1242:
  1155     0588  3008               	movlw	8
  1156     0589  00F0               	movwf	teclado@tecla
  1157     058A                     l55:
  1158                           
  1159                           ;atividade7.c: 80:     if (PORTBbits.RB1 == 0) tecla = 9;
  1160     058A  1886               	btfsc	6,1	;volatile
  1161     058B  2D8D               	goto	u1071
  1162     058C  2D8E               	goto	u1070
  1163     058D                     u1071:
  1164     058D  2D90               	goto	l56
  1165     058E                     u1070:
  1166     058E                     l1244:
  1167     058E  3009               	movlw	9
  1168     058F  00F0               	movwf	teclado@tecla
  1169     0590                     l56:
  1170                           
  1171                           ;atividade7.c: 81:     if (PORTBbits.RB2 == 0) tecla = 10;
  1172     0590  1906               	btfsc	6,2	;volatile
  1173     0591  2D93               	goto	u1081
  1174     0592  2D94               	goto	u1080
  1175     0593                     u1081:
  1176     0593  2D96               	goto	l57
  1177     0594                     u1080:
  1178     0594                     l1246:
  1179     0594  300A               	movlw	10
  1180     0595  00F0               	movwf	teclado@tecla
  1181     0596                     l57:
  1182                           
  1183                           ;atividade7.c: 82:     if (PORTBbits.RB3 == 0) tecla = 11;
  1184     0596  1986               	btfsc	6,3	;volatile
  1185     0597  2D99               	goto	u1091
  1186     0598  2D9A               	goto	u1090
  1187     0599                     u1091:
  1188     0599  2D9C               	goto	l58
  1189     059A                     u1090:
  1190     059A                     l1248:
  1191     059A  300B               	movlw	11
  1192     059B  00F0               	movwf	teclado@tecla
  1193     059C                     l58:
  1194                           
  1195                           ;atividade7.c: 84:     PORTCbits.RC0 = 1; PORTCbits.RC1 = 1; PORTCbits.RC2 = 1; PORTCbit
      +                          s.RC3 = 0;
  1196     059C  1407               	bsf	7,0	;volatile
  1197     059D  1487               	bsf	7,1	;volatile
  1198     059E  1507               	bsf	7,2	;volatile
  1199     059F  1187               	bcf	7,3	;volatile
  1200                           
  1201                           ;atividade7.c: 85:     if (PORTBbits.RB0 == 0) tecla = 12;
  1202     05A0  1806               	btfsc	6,0	;volatile
  1203     05A1  2DA3               	goto	u1101
  1204     05A2  2DA4               	goto	u1100
  1205     05A3                     u1101:
  1206     05A3  2DA6               	goto	l59
  1207     05A4                     u1100:
  1208     05A4                     l1250:
  1209     05A4  300C               	movlw	12
  1210     05A5  00F0               	movwf	teclado@tecla
  1211     05A6                     l59:
  1212                           
  1213                           ;atividade7.c: 86:     if (PORTBbits.RB1 == 0) tecla = 13;
  1214     05A6  1886               	btfsc	6,1	;volatile
  1215     05A7  2DA9               	goto	u1111
  1216     05A8  2DAA               	goto	u1110
  1217     05A9                     u1111:
  1218     05A9  2DAC               	goto	l60
  1219     05AA                     u1110:
  1220     05AA                     l1252:
  1221     05AA  300D               	movlw	13
  1222     05AB  00F0               	movwf	teclado@tecla
  1223     05AC                     l60:
  1224                           
  1225                           ;atividade7.c: 87:     if (PORTBbits.RB2 == 0) tecla = 14;
  1226     05AC  1906               	btfsc	6,2	;volatile
  1227     05AD  2DAF               	goto	u1121
  1228     05AE  2DB0               	goto	u1120
  1229     05AF                     u1121:
  1230     05AF  2DB2               	goto	l61
  1231     05B0                     u1120:
  1232     05B0                     l1254:
  1233     05B0  300E               	movlw	14
  1234     05B1  00F0               	movwf	teclado@tecla
  1235     05B2                     l61:
  1236                           
  1237                           ;atividade7.c: 88:     if (PORTBbits.RB3 == 0) tecla = 15;
  1238     05B2  1986               	btfsc	6,3	;volatile
  1239     05B3  2DB5               	goto	u1131
  1240     05B4  2DB6               	goto	u1130
  1241     05B5                     u1131:
  1242     05B5  2DB8               	goto	l1258
  1243     05B6                     u1130:
  1244     05B6                     l1256:
  1245     05B6  300F               	movlw	15
  1246     05B7  00F0               	movwf	teclado@tecla
  1247     05B8                     l1258:
  1248                           
  1249                           ;atividade7.c: 65:   while(tecla == 20){
  1250     05B8  3014               	movlw	20
  1251     05B9  0670               	xorwf	teclado@tecla,w
  1252     05BA  1903               	btfsc	3,2
  1253     05BB  2DBD               	goto	u1141
  1254     05BC  2DBE               	goto	u1140
  1255     05BD                     u1141:
  1256     05BD  2D47               	goto	l46
  1257     05BE                     u1140:
  1258     05BE                     l1260:
  1259                           
  1260                           ;atividade7.c: 90:     return tecla;
  1261     05BE  0870               	movf	teclado@tecla,w
  1262     05BF                     l64:
  1263     05BF  0008               	return
  1264     05C0                     __end_of_teclado:
  1265                           
  1266                           	psect	text5
  1267     0416                     __ptext5:	
  1268 ;; *************** function _sprintf *****************
  1269 ;; Defined at:
  1270 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_sprintf.c"
  1271 ;; Parameters:    Size  Location     Type
  1272 ;;  s               1   17[BANK0 ] PTR unsigned char 
  1273 ;;		 -> atualiza_lcd@buffer(16), 
  1274 ;;  fmt             1   18[BANK0 ] PTR const unsigned char 
  1275 ;;		 -> STR_1(3), 
  1276 ;; Auto vars:     Size  Location     Type
  1277 ;;  f              11   23[BANK0 ] struct _IO_FILE
  1278 ;;  ret             2    0        int 
  1279 ;;  ap              1   22[BANK0 ] PTR void [1]
  1280 ;;		 -> ?_sprintf(2), 
  1281 ;; Return value:  Size  Location     Type
  1282 ;;                  2   17[BANK0 ] int 
  1283 ;; Registers used:
  1284 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1285 ;; Tracked objects:
  1286 ;;		On entry : 0/0
  1287 ;;		On exit  : 0/0
  1288 ;;		Unchanged: 0/0
  1289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1290 ;;      Params:         0       4       0       0       0
  1291 ;;      Locals:         0      12       0       0       0
  1292 ;;      Temps:          0       1       0       0       0
  1293 ;;      Totals:         0      17       0       0       0
  1294 ;;Total ram usage:       17 bytes
  1295 ;; Hardware stack levels used: 1
  1296 ;; Hardware stack levels required when called: 4
  1297 ;; This function calls:
  1298 ;;		_vfprintf
  1299 ;; This function is called by:
  1300 ;;		_atualiza_lcd
  1301 ;; This function uses a non-reentrant model
  1302 ;;
  1303                           
  1304     0416                     _sprintf:	
  1305                           ;psect for function _sprintf
  1306                           
  1307     0416                     l1264:	
  1308                           ;incstack = 0
  1309                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1310                           
  1311     0416  3033               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  1312     0417  1283               	bcf	3,5	;RP0=0, select bank0
  1313     0418  1303               	bcf	3,6	;RP1=0, select bank0
  1314     0419  00B6               	movwf	sprintf@ap
  1315     041A                     l1266:
  1316     041A  0831               	movf	sprintf@s,w
  1317     041B  00B7               	movwf	sprintf@f
  1318     041C  3000               	movlw	0
  1319     041D  00B8               	movwf	sprintf@f+1
  1320     041E                     l1268:
  1321     041E  01B9               	clrf	sprintf@f+2
  1322     041F  01BA               	clrf	sprintf@f+3
  1323     0420                     l1270:
  1324     0420  01C0               	clrf	sprintf@f+9
  1325     0421  01C1               	clrf	sprintf@f+10
  1326     0422                     l1272:
  1327     0422  3037               	movlw	low sprintf@f
  1328     0423  00AD               	movwf	vfprintf@fp
  1329     0424  3000               	movlw	high sprintf@f
  1330     0425  00AE               	movwf	vfprintf@fp+1
  1331     0426  0832               	movf	sprintf@fmt,w
  1332     0427  00AF               	movwf	vfprintf@fmt
  1333     0428  3036               	movlw	(low (sprintf@ap| 0))& (0+255)
  1334     0429  00B0               	movwf	vfprintf@ap
  1335     042A  120A  118A  2439  120A  118A  	fcall	_vfprintf
  1336     042F                     l1274:
  1337     042F  1283               	bcf	3,5	;RP0=0, select bank0
  1338     0430  1303               	bcf	3,6	;RP1=0, select bank0
  1339     0431  0839               	movf	sprintf@f+2,w
  1340     0432  0731               	addwf	sprintf@s,w
  1341     0433  00B5               	movwf	??_sprintf
  1342     0434  0835               	movf	??_sprintf,w
  1343     0435  0084               	movwf	4
  1344     0436  1383               	bcf	3,7	;select IRP bank0
  1345     0437  0180               	clrf	0
  1346     0438                     l642:
  1347     0438  0008               	return
  1348     0439                     __end_of_sprintf:
  1349                           
  1350                           	psect	text6
  1351     0439                     __ptext6:	
  1352 ;; *************** function _vfprintf *****************
  1353 ;; Defined at:
  1354 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  1355 ;; Parameters:    Size  Location     Type
  1356 ;;  fp              2   13[BANK0 ] PTR struct _IO_FILE
  1357 ;;		 -> sprintf@f(11), 
  1358 ;;  fmt             1   15[BANK0 ] PTR const unsigned char 
  1359 ;;		 -> STR_1(3), 
  1360 ;;  ap              1   16[BANK0 ] PTR PTR void 
  1361 ;;		 -> sprintf@ap(1), 
  1362 ;; Auto vars:     Size  Location     Type
  1363 ;;  cfmt            1   13[COMMON] PTR unsigned char 
  1364 ;;		 -> STR_1(3), 
  1365 ;; Return value:  Size  Location     Type
  1366 ;;                  2   13[BANK0 ] int 
  1367 ;; Registers used:
  1368 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1369 ;; Tracked objects:
  1370 ;;		On entry : 0/0
  1371 ;;		On exit  : 0/0
  1372 ;;		Unchanged: 0/0
  1373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1374 ;;      Params:         0       4       0       0       0
  1375 ;;      Locals:         1       0       0       0       0
  1376 ;;      Temps:          0       0       0       0       0
  1377 ;;      Totals:         1       4       0       0       0
  1378 ;;Total ram usage:        5 bytes
  1379 ;; Hardware stack levels used: 1
  1380 ;; Hardware stack levels required when called: 3
  1381 ;; This function calls:
  1382 ;;		_vfpfcnvrt
  1383 ;; This function is called by:
  1384 ;;		_sprintf
  1385 ;; This function uses a non-reentrant model
  1386 ;;
  1387                           
  1388     0439                     _vfprintf:	
  1389                           ;psect for function _vfprintf
  1390                           
  1391     0439                     l1196:	
  1392                           ;incstack = 0
  1393                           ; Regs used in _vfprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1394                           
  1395                           
  1396                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1397     0439  1283               	bcf	3,5	;RP0=0, select bank0
  1398     043A  1303               	bcf	3,6	;RP1=0, select bank0
  1399     043B  082F               	movf	vfprintf@fmt,w
  1400     043C  00FD               	movwf	vfprintf@cfmt
  1401                           
  1402                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1403     043D  2C4D               	goto	l1200
  1404     043E                     l1198:
  1405                           
  1406                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1407     043E  1283               	bcf	3,5	;RP0=0, select bank0
  1408     043F  1303               	bcf	3,6	;RP1=0, select bank0
  1409     0440  082D               	movf	vfprintf@fp,w
  1410     0441  00A0               	movwf	vfpfcnvrt@fp
  1411     0442  082E               	movf	vfprintf@fp+1,w
  1412     0443  00A1               	movwf	vfpfcnvrt@fp+1
  1413     0444  307D               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  1414     0445  00A2               	movwf	vfpfcnvrt@fmt
  1415     0446  0830               	movf	vfprintf@ap,w
  1416     0447  00A3               	movwf	vfpfcnvrt@ap
  1417     0448  120A  118A  26FB  120A  118A  	fcall	_vfpfcnvrt
  1418     044D                     l1200:
  1419                           
  1420                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1421     044D  087D               	movf	vfprintf@cfmt,w
  1422     044E  0084               	movwf	4
  1423     044F  120A  118A  2003  120A  118A  	fcall	stringdir
  1424     0454  3A00               	xorlw	0
  1425     0455  1D03               	skipz
  1426     0456  2C58               	goto	u961
  1427     0457  2C59               	goto	u960
  1428     0458                     u961:
  1429     0458  2C3E               	goto	l1198
  1430     0459                     u960:
  1431     0459                     l1202:
  1432                           
  1433                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1434     0459  1283               	bcf	3,5	;RP0=0, select bank0
  1435     045A  1303               	bcf	3,6	;RP1=0, select bank0
  1436     045B  01AD               	clrf	?_vfprintf
  1437     045C  01AE               	clrf	?_vfprintf+1
  1438     045D                     l686:
  1439     045D  0008               	return
  1440     045E                     __end_of_vfprintf:
  1441                           
  1442                           	psect	text7
  1443     06FB                     __ptext7:	
  1444 ;; *************** function _vfpfcnvrt *****************
  1445 ;; Defined at:
  1446 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  1447 ;; Parameters:    Size  Location     Type
  1448 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  1449 ;;		 -> sprintf@f(11), 
  1450 ;;  fmt             1    2[BANK0 ] PTR PTR unsigned char 
  1451 ;;		 -> vfprintf@cfmt(1), 
  1452 ;;  ap              1    3[BANK0 ] PTR PTR void 
  1453 ;;		 -> sprintf@ap(1), 
  1454 ;; Auto vars:     Size  Location     Type
  1455 ;;  convarg         4    8[BANK0 ] struct .
  1456 ;;  c               1   12[BANK0 ] unsigned char 
  1457 ;;  cp              1    7[BANK0 ] PTR unsigned char 
  1458 ;;		 -> STR_1(3), 
  1459 ;;  done            1    6[BANK0 ] _Bool 
  1460 ;; Return value:  Size  Location     Type
  1461 ;;                  1    wreg      void 
  1462 ;; Registers used:
  1463 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1464 ;; Tracked objects:
  1465 ;;		On entry : 0/0
  1466 ;;		On exit  : 0/0
  1467 ;;		Unchanged: 0/0
  1468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1469 ;;      Params:         0       4       0       0       0
  1470 ;;      Locals:         0       7       0       0       0
  1471 ;;      Temps:          0       2       0       0       0
  1472 ;;      Totals:         0      13       0       0       0
  1473 ;;Total ram usage:       13 bytes
  1474 ;; Hardware stack levels used: 1
  1475 ;; Hardware stack levels required when called: 2
  1476 ;; This function calls:
  1477 ;;		___awdiv
  1478 ;;		___awmod
  1479 ;;		_abs
  1480 ;;		_fputc
  1481 ;; This function is called by:
  1482 ;;		_vfprintf
  1483 ;; This function uses a non-reentrant model
  1484 ;;
  1485                           
  1486     06FB                     _vfpfcnvrt:	
  1487                           ;psect for function _vfpfcnvrt
  1488                           
  1489     06FB                     l1136:	
  1490                           ;incstack = 0
  1491                           ; Regs used in _vfpfcnvrt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1492                           
  1493                           
  1494                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  1495     06FB  1283               	bcf	3,5	;RP0=0, select bank0
  1496     06FC  1303               	bcf	3,6	;RP1=0, select bank0
  1497     06FD  0822               	movf	vfpfcnvrt@fmt,w
  1498     06FE  0084               	movwf	4
  1499     06FF  0800               	movf	0,w
  1500     0700  0084               	movwf	4
  1501     0701  120A  118A  2003  120A  118A  	fcall	stringdir
  1502     0706  3A25               	xorlw	37
  1503     0707  1D03               	skipz
  1504     0708  2F0A               	goto	u861
  1505     0709  2F0B               	goto	u860
  1506     070A                     u861:
  1507     070A  2FC7               	goto	l1182
  1508     070B                     u860:
  1509     070B                     l1138:
  1510                           
  1511                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1512     070B  0822               	movf	vfpfcnvrt@fmt,w
  1513     070C  0084               	movwf	4
  1514     070D  3001               	movlw	1
  1515     070E  0780               	addwf	0,f
  1516     070F                     l1140:
  1517                           
  1518                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1519     070F  01DA               	clrf	_width
  1520     0710  01DB               	clrf	_width+1
  1521     0711  3000               	movlw	0
  1522     0712  00DE               	movwf	_flags
  1523     0713                     l1142:
  1524                           
  1525                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1526     0713  30FF               	movlw	255
  1527     0714  00DC               	movwf	_prec
  1528     0715  30FF               	movlw	255
  1529     0716  00DD               	movwf	_prec+1
  1530     0717                     l1144:
  1531                           
  1532                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  1533     0717  0822               	movf	vfpfcnvrt@fmt,w
  1534     0718  0084               	movwf	4
  1535     0719  0800               	movf	0,w
  1536     071A  00A7               	movwf	vfpfcnvrt@cp
  1537     071B                     l1146:
  1538                           
  1539                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1540     071B  0827               	movf	vfpfcnvrt@cp,w
  1541     071C  0084               	movwf	4
  1542     071D  120A  118A  2003  120A  118A  	fcall	stringdir
  1543     0722  3A64               	xorlw	100
  1544     0723  1903               	skipnz
  1545     0724  2F26               	goto	u871
  1546     0725  2F27               	goto	u870
  1547     0726                     u871:
  1548     0726  2F33               	goto	l1150
  1549     0727                     u870:
  1550     0727                     l1148:
  1551     0727  0827               	movf	vfpfcnvrt@cp,w
  1552     0728  0084               	movwf	4
  1553     0729  120A  118A  2003  120A  118A  	fcall	stringdir
  1554     072E  3A69               	xorlw	105
  1555     072F  1D03               	skipz
  1556     0730  2F32               	goto	u881
  1557     0731  2F33               	goto	u880
  1558     0732                     u881:
  1559     0732  2FC0               	goto	l1178
  1560     0733                     u880:
  1561     0733                     l1150:
  1562                           
  1563                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1564     0733  0823               	movf	vfpfcnvrt@ap,w
  1565     0734  0084               	movwf	4
  1566     0735  1383               	bcf	3,7	;select IRP bank0
  1567     0736  0800               	movf	0,w
  1568     0737  00FF               	movwf	btemp+1
  1569     0738  3002               	movlw	2
  1570     0739  0780               	addwf	0,f
  1571     073A  087F               	movf	btemp+1,w
  1572     073B  0084               	movwf	4
  1573     073C  0800               	movf	0,w
  1574     073D  00A8               	movwf	vfpfcnvrt@convarg
  1575     073E  0A84               	incf	4,f
  1576     073F  0800               	movf	0,w
  1577     0740  00A9               	movwf	vfpfcnvrt@convarg+1
  1578     0741                     l1152:
  1579                           
  1580                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  1581     0741  0822               	movf	vfpfcnvrt@fmt,w
  1582     0742  0084               	movwf	4
  1583     0743  0827               	movf	vfpfcnvrt@cp,w
  1584     0744  3E01               	addlw	1
  1585     0745  0080               	movwf	0
  1586     0746                     l1154:
  1587                           
  1588                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  1589     0746  3020               	movlw	32
  1590     0747  00AC               	movwf	vfpfcnvrt@c
  1591     0748                     l1156:
  1592                           
  1593                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  1594     0748  1BA9               	btfsc	vfpfcnvrt@convarg+1,7
  1595     0749  2F4B               	goto	u891
  1596     074A  2F4D               	goto	u890
  1597     074B                     u891:
  1598     074B  3001               	movlw	1
  1599     074C  2F4E               	goto	u900
  1600     074D                     u890:
  1601     074D  3000               	movlw	0
  1602     074E                     u900:
  1603     074E  00A6               	movwf	vfpfcnvrt@done
  1604     074F                     l1158:
  1605                           
  1606                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  1607     074F  3001               	movlw	1
  1608     0750  02AC               	subwf	vfpfcnvrt@c,f
  1609     0751  082C               	movf	vfpfcnvrt@c,w
  1610     0752  3EA0               	addlw	(low (_dbuf| 0))& (0+255)
  1611     0753  0084               	movwf	4
  1612     0754  300A               	movlw	10
  1613     0755  00F0               	movwf	___awmod@divisor
  1614     0756  3000               	movlw	0
  1615     0757  00F1               	movwf	___awmod@divisor+1
  1616     0758  0829               	movf	vfpfcnvrt@convarg+1,w
  1617     0759  00F3               	movwf	___awmod@dividend+1
  1618     075A  0828               	movf	vfpfcnvrt@convarg,w
  1619     075B  00F2               	movwf	___awmod@dividend
  1620     075C  120A  118A  248A  120A  118A  	fcall	___awmod
  1621     0761  0871               	movf	?___awmod+1,w
  1622     0762  00F7               	movwf	abs@a+1
  1623     0763  0870               	movf	?___awmod,w
  1624     0764  00F6               	movwf	abs@a
  1625     0765  120A  118A  23B0  120A  118A  	fcall	_abs
  1626     076A  0876               	movf	?_abs,w
  1627     076B  3E30               	addlw	48
  1628     076C  1383               	bcf	3,7	;select IRP bank1
  1629     076D  0080               	movwf	0
  1630     076E                     l1160:
  1631                           
  1632                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  1633     076E  300A               	movlw	10
  1634     076F  00F0               	movwf	___awdiv@divisor
  1635     0770  3000               	movlw	0
  1636     0771  00F1               	movwf	___awdiv@divisor+1
  1637     0772  1283               	bcf	3,5	;RP0=0, select bank0
  1638     0773  1303               	bcf	3,6	;RP1=0, select bank0
  1639     0774  0829               	movf	vfpfcnvrt@convarg+1,w
  1640     0775  00F3               	movwf	___awdiv@dividend+1
  1641     0776  0828               	movf	vfpfcnvrt@convarg,w
  1642     0777  00F2               	movwf	___awdiv@dividend
  1643     0778  120A  118A  24E1  120A  118A  	fcall	___awdiv
  1644     077D  0871               	movf	?___awdiv+1,w
  1645     077E  1283               	bcf	3,5	;RP0=0, select bank0
  1646     077F  1303               	bcf	3,6	;RP1=0, select bank0
  1647     0780  00A9               	movwf	vfpfcnvrt@convarg+1
  1648     0781  0870               	movf	?___awdiv,w
  1649     0782  00A8               	movwf	vfpfcnvrt@convarg
  1650     0783                     l1162:
  1651                           
  1652                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  1653     0783  0828               	movf	vfpfcnvrt@convarg,w
  1654     0784  0429               	iorwf	vfpfcnvrt@convarg+1,w
  1655     0785  1903               	btfsc	3,2
  1656     0786  2F88               	goto	u911
  1657     0787  2F89               	goto	u910
  1658     0788                     u911:
  1659     0788  2F8E               	goto	l1166
  1660     0789                     u910:
  1661     0789                     l1164:
  1662     0789  082C               	movf	vfpfcnvrt@c,w
  1663     078A  1D03               	btfss	3,2
  1664     078B  2F8D               	goto	u921
  1665     078C  2F8E               	goto	u920
  1666     078D                     u921:
  1667     078D  2F4F               	goto	l1158
  1668     078E                     u920:
  1669     078E                     l1166:
  1670                           
  1671                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  1672     078E  082C               	movf	vfpfcnvrt@c,w
  1673     078F  1903               	btfsc	3,2
  1674     0790  2F92               	goto	u931
  1675     0791  2F93               	goto	u930
  1676     0792                     u931:
  1677     0792  2FB9               	goto	l1176
  1678     0793                     u930:
  1679     0793                     l1168:
  1680     0793  0826               	movf	vfpfcnvrt@done,w
  1681     0794  1903               	btfsc	3,2
  1682     0795  2F97               	goto	u941
  1683     0796  2F98               	goto	u940
  1684     0797                     u941:
  1685     0797  2FB9               	goto	l1176
  1686     0798                     u940:
  1687     0798                     l1170:
  1688                           
  1689                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  1690     0798  3001               	movlw	1
  1691     0799  02AC               	subwf	vfpfcnvrt@c,f
  1692     079A  082C               	movf	vfpfcnvrt@c,w
  1693     079B  3EA0               	addlw	(low (_dbuf| 0))& (0+255)
  1694     079C  0084               	movwf	4
  1695     079D  302D               	movlw	45
  1696     079E  1383               	bcf	3,7	;select IRP bank1
  1697     079F  0080               	movwf	0
  1698     07A0  2FB9               	goto	l1176
  1699     07A1                     l1172:
  1700                           
  1701                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  1702     07A1  082C               	movf	vfpfcnvrt@c,w
  1703     07A2  3EA0               	addlw	(low (_dbuf| 0))& (0+255)
  1704     07A3  0084               	movwf	4
  1705     07A4  1383               	bcf	3,7	;select IRP bank1
  1706     07A5  0800               	movf	0,w
  1707     07A6  00A4               	movwf	??_vfpfcnvrt
  1708     07A7  01A5               	clrf	??_vfpfcnvrt+1
  1709     07A8  0824               	movf	??_vfpfcnvrt,w
  1710     07A9  00F0               	movwf	fputc@c
  1711     07AA  0825               	movf	??_vfpfcnvrt+1,w
  1712     07AB  00F1               	movwf	fputc@c+1
  1713     07AC  0820               	movf	vfpfcnvrt@fp,w
  1714     07AD  00F2               	movwf	fputc@fp
  1715     07AE  0821               	movf	vfpfcnvrt@fp+1,w
  1716     07AF  00F3               	movwf	fputc@fp+1
  1717     07B0  120A  118A  25C0  120A  118A  	fcall	_fputc
  1718     07B5                     l1174:
  1719     07B5  3001               	movlw	1
  1720     07B6  1283               	bcf	3,5	;RP0=0, select bank0
  1721     07B7  1303               	bcf	3,6	;RP1=0, select bank0
  1722     07B8  07AC               	addwf	vfpfcnvrt@c,f
  1723     07B9                     l1176:
  1724                           
  1725                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  1726     07B9  3020               	movlw	32
  1727     07BA  062C               	xorwf	vfpfcnvrt@c,w
  1728     07BB  1D03               	btfss	3,2
  1729     07BC  2FBE               	goto	u951
  1730     07BD  2FBF               	goto	u950
  1731     07BE                     u951:
  1732     07BE  2FA1               	goto	l1172
  1733     07BF                     u950:
  1734     07BF  2FE0               	goto	l680
  1735     07C0                     l1178:
  1736                           
  1737                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1738     07C0  1283               	bcf	3,5	;RP0=0, select bank0
  1739     07C1  1303               	bcf	3,6	;RP1=0, select bank0
  1740     07C2  0822               	movf	vfpfcnvrt@fmt,w
  1741     07C3  0084               	movwf	4
  1742     07C4  3001               	movlw	1
  1743     07C5  0780               	addwf	0,f
  1744     07C6  2FE0               	goto	l680
  1745     07C7                     l1182:
  1746                           
  1747                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1748     07C7  0822               	movf	vfpfcnvrt@fmt,w
  1749     07C8  0084               	movwf	4
  1750     07C9  0800               	movf	0,w
  1751     07CA  0084               	movwf	4
  1752     07CB  120A  118A  2003  120A  118A  	fcall	stringdir
  1753     07D0  00A4               	movwf	??_vfpfcnvrt
  1754     07D1  01A5               	clrf	??_vfpfcnvrt+1
  1755     07D2  0824               	movf	??_vfpfcnvrt,w
  1756     07D3  00F0               	movwf	fputc@c
  1757     07D4  0825               	movf	??_vfpfcnvrt+1,w
  1758     07D5  00F1               	movwf	fputc@c+1
  1759     07D6  0820               	movf	vfpfcnvrt@fp,w
  1760     07D7  00F2               	movwf	fputc@fp
  1761     07D8  0821               	movf	vfpfcnvrt@fp+1,w
  1762     07D9  00F3               	movwf	fputc@fp+1
  1763     07DA  120A  118A  25C0  120A  118A  	fcall	_fputc
  1764     07DF  2FC0               	goto	l1178
  1765     07E0                     l680:
  1766     07E0  0008               	return
  1767     07E1                     __end_of_vfpfcnvrt:
  1768                           
  1769                           	psect	text8
  1770     05C0                     __ptext8:	
  1771 ;; *************** function _fputc *****************
  1772 ;; Defined at:
  1773 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_fputc.c"
  1774 ;; Parameters:    Size  Location     Type
  1775 ;;  c               2    0[COMMON] int 
  1776 ;;  fp              2    2[COMMON] PTR struct _IO_FILE
  1777 ;;		 -> sprintf@f(11), 
  1778 ;; Auto vars:     Size  Location     Type
  1779 ;;		None
  1780 ;; Return value:  Size  Location     Type
  1781 ;;                  2    0[COMMON] int 
  1782 ;; Registers used:
  1783 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1784 ;; Tracked objects:
  1785 ;;		On entry : 0/0
  1786 ;;		On exit  : 0/0
  1787 ;;		Unchanged: 0/0
  1788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1789 ;;      Params:         4       0       0       0       0
  1790 ;;      Locals:         0       0       0       0       0
  1791 ;;      Temps:          9       0       0       0       0
  1792 ;;      Totals:        13       0       0       0       0
  1793 ;;Total ram usage:       13 bytes
  1794 ;; Hardware stack levels used: 1
  1795 ;; Hardware stack levels required when called: 1
  1796 ;; This function calls:
  1797 ;;		_putch
  1798 ;; This function is called by:
  1799 ;;		_vfpfcnvrt
  1800 ;; This function uses a non-reentrant model
  1801 ;;
  1802                           
  1803     05C0                     _fputc:	
  1804                           ;psect for function _fputc
  1805                           
  1806     05C0                     l1114:	
  1807                           ;incstack = 0
  1808                           ; Regs used in _fputc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1809                           
  1810     05C0  0872               	movf	fputc@fp,w
  1811     05C1  0473               	iorwf	fputc@fp+1,w
  1812     05C2  1903               	btfsc	3,2
  1813     05C3  2DC5               	goto	u801
  1814     05C4  2DC6               	goto	u800
  1815     05C5                     u801:
  1816     05C5  2DCC               	goto	l1118
  1817     05C6                     u800:
  1818     05C6                     l1116:
  1819     05C6  0872               	movf	fputc@fp,w
  1820     05C7  0473               	iorwf	fputc@fp+1,w
  1821     05C8  1D03               	btfss	3,2
  1822     05C9  2DCB               	goto	u811
  1823     05CA  2DCC               	goto	u810
  1824     05CB                     u811:
  1825     05CB  2DD3               	goto	l1120
  1826     05CC                     u810:
  1827     05CC                     l1118:
  1828     05CC  0870               	movf	fputc@c,w
  1829     05CD  120A  118A  2397  120A  118A  	fcall	_putch
  1830     05D2  2E59               	goto	l705
  1831     05D3                     l1120:
  1832     05D3  0872               	movf	fputc@fp,w
  1833     05D4  3E09               	addlw	9
  1834     05D5  00F4               	movwf	??_fputc
  1835     05D6  0873               	movf	fputc@fp+1,w
  1836     05D7  1803               	skipnc
  1837     05D8  3E01               	addlw	1
  1838     05D9  3E00               	addlw	0
  1839     05DA  00F5               	movwf	??_fputc+1
  1840     05DB  0874               	movf	??_fputc,w
  1841     05DC  0084               	movwf	4
  1842     05DD  1783               	bsf	3,7
  1843     05DE  1C75               	btfss	??_fputc+1,0
  1844     05DF  1383               	bcf	3,7
  1845     05E0  0800               	movf	0,w
  1846     05E1  00F6               	movwf	??_fputc+2
  1847     05E2  0A84               	incf	4,f
  1848     05E3  0800               	movf	0,w
  1849     05E4  00F7               	movwf	??_fputc+3
  1850     05E5  0876               	movf	??_fputc+2,w
  1851     05E6  0477               	iorwf	??_fputc+3,w
  1852     05E7  1903               	btfsc	3,2
  1853     05E8  2DEA               	goto	u821
  1854     05E9  2DEB               	goto	u820
  1855     05EA                     u821:
  1856     05EA  2E1D               	goto	l1124
  1857     05EB                     u820:
  1858     05EB                     l1122:
  1859     05EB  0872               	movf	fputc@fp,w
  1860     05EC  3E09               	addlw	9
  1861     05ED  00F4               	movwf	??_fputc
  1862     05EE  0873               	movf	fputc@fp+1,w
  1863     05EF  1803               	skipnc
  1864     05F0  3E01               	addlw	1
  1865     05F1  3E00               	addlw	0
  1866     05F2  00F5               	movwf	??_fputc+1
  1867     05F3  0874               	movf	??_fputc,w
  1868     05F4  0084               	movwf	4
  1869     05F5  1783               	bsf	3,7
  1870     05F6  1C75               	btfss	??_fputc+1,0
  1871     05F7  1383               	bcf	3,7
  1872     05F8  0800               	movf	0,w
  1873     05F9  00F6               	movwf	??_fputc+2
  1874     05FA  0A84               	incf	4,f
  1875     05FB  0800               	movf	0,w
  1876     05FC  00F7               	movwf	??_fputc+3
  1877     05FD  0872               	movf	fputc@fp,w
  1878     05FE  3E02               	addlw	2
  1879     05FF  00F8               	movwf	??_fputc+4
  1880     0600  0873               	movf	fputc@fp+1,w
  1881     0601  1803               	skipnc
  1882     0602  3E01               	addlw	1
  1883     0603  3E00               	addlw	0
  1884     0604  00F9               	movwf	??_fputc+5
  1885     0605  0878               	movf	??_fputc+4,w
  1886     0606  0084               	movwf	4
  1887     0607  1783               	bsf	3,7
  1888     0608  1C79               	btfss	??_fputc+5,0
  1889     0609  1383               	bcf	3,7
  1890     060A  0800               	movf	0,w
  1891     060B  00FA               	movwf	??_fputc+6
  1892     060C  0A84               	incf	4,f
  1893     060D  0800               	movf	0,w
  1894     060E  00FB               	movwf	??_fputc+7
  1895     060F  087B               	movf	??_fputc+7,w
  1896     0610  3A80               	xorlw	128
  1897     0611  00FC               	movwf	??_fputc+8
  1898     0612  0877               	movf	??_fputc+3,w
  1899     0613  3A80               	xorlw	128
  1900     0614  027C               	subwf	??_fputc+8,w
  1901     0615  1D03               	skipz
  1902     0616  2E19               	goto	u835
  1903     0617  0876               	movf	??_fputc+2,w
  1904     0618  027A               	subwf	??_fputc+6,w
  1905     0619                     u835:
  1906     0619  1803               	skipnc
  1907     061A  2E1C               	goto	u831
  1908     061B  2E1D               	goto	u830
  1909     061C                     u831:
  1910     061C  2E59               	goto	l705
  1911     061D                     u830:
  1912     061D                     l1124:
  1913     061D  0872               	movf	fputc@fp,w
  1914     061E  0084               	movwf	4
  1915     061F  1783               	bsf	3,7
  1916     0620  1C73               	btfss	fputc@fp+1,0
  1917     0621  1383               	bcf	3,7
  1918     0622  0800               	movf	0,w
  1919     0623  00F4               	movwf	??_fputc
  1920     0624  0A84               	incf	4,f
  1921     0625  0800               	movf	0,w
  1922     0626  00F5               	movwf	??_fputc+1
  1923     0627  0872               	movf	fputc@fp,w
  1924     0628  3E02               	addlw	2
  1925     0629  00F6               	movwf	??_fputc+2
  1926     062A  0873               	movf	fputc@fp+1,w
  1927     062B  1803               	skipnc
  1928     062C  3E01               	addlw	1
  1929     062D  3E00               	addlw	0
  1930     062E  00F7               	movwf	??_fputc+3
  1931     062F  0876               	movf	??_fputc+2,w
  1932     0630  0084               	movwf	4
  1933     0631  1783               	bsf	3,7
  1934     0632  1C77               	btfss	??_fputc+3,0
  1935     0633  1383               	bcf	3,7
  1936     0634  0800               	movf	0,w
  1937     0635  0774               	addwf	??_fputc,w
  1938     0636  00F9               	movwf	??_fputc+5
  1939     0637  0875               	movf	??_fputc+1,w
  1940     0638  00F8               	movwf	??_fputc+4
  1941     0639  1803               	skipnc
  1942     063A  0AF8               	incf	??_fputc+4,f
  1943     063B  1F80               	btfss	0,7
  1944     063C  2E3E               	goto	u840
  1945     063D  03F8               	decf	??_fputc+4,f
  1946     063E                     u840:
  1947     063E  0878               	movf	??_fputc+4,w
  1948     063F  00FA               	movwf	??_fputc+6
  1949     0640  0879               	movf	??_fputc+5,w
  1950     0641  0084               	movwf	4
  1951     0642  1783               	bsf	3,7
  1952     0643  1C7A               	btfss	??_fputc+6,0
  1953     0644  1383               	bcf	3,7
  1954     0645  0870               	movf	fputc@c,w
  1955     0646  0080               	movwf	0
  1956     0647  0872               	movf	fputc@fp,w
  1957     0648  3E02               	addlw	2
  1958     0649  00F4               	movwf	??_fputc
  1959     064A  0873               	movf	fputc@fp+1,w
  1960     064B  1803               	skipnc
  1961     064C  3E01               	addlw	1
  1962     064D  3E00               	addlw	0
  1963     064E  00F5               	movwf	??_fputc+1
  1964     064F  0874               	movf	??_fputc,w
  1965     0650  0084               	movwf	4
  1966     0651  1783               	bsf	3,7
  1967     0652  1C75               	btfss	??_fputc+1,0
  1968     0653  1383               	bcf	3,7
  1969     0654  3001               	movlw	1
  1970     0655  0780               	addwf	0,f
  1971     0656  0A84               	incf	4,f
  1972     0657  1803               	skipnc
  1973     0658  0A80               	incf	0,f
  1974     0659                     l705:
  1975     0659  0008               	return
  1976     065A                     __end_of_fputc:
  1977                           
  1978                           	psect	text9
  1979     0397                     __ptext9:	
  1980 ;; *************** function _putch *****************
  1981 ;; Defined at:
  1982 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\putch.c"
  1983 ;; Parameters:    Size  Location     Type
  1984 ;;  c               1    wreg     unsigned char 
  1985 ;; Auto vars:     Size  Location     Type
  1986 ;;  c               1    0[COMMON] unsigned char 
  1987 ;; Return value:  Size  Location     Type
  1988 ;;                  1    wreg      void 
  1989 ;; Registers used:
  1990 ;;		wreg
  1991 ;; Tracked objects:
  1992 ;;		On entry : 0/0
  1993 ;;		On exit  : 0/0
  1994 ;;		Unchanged: 0/0
  1995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1996 ;;      Params:         0       0       0       0       0
  1997 ;;      Locals:         0       0       0       0       0
  1998 ;;      Temps:          0       0       0       0       0
  1999 ;;      Totals:         0       0       0       0       0
  2000 ;;Total ram usage:        0 bytes
  2001 ;; Hardware stack levels used: 1
  2002 ;; This function calls:
  2003 ;;		Nothing
  2004 ;; This function is called by:
  2005 ;;		_fputc
  2006 ;; This function uses a non-reentrant model
  2007 ;;
  2008                           
  2009     0397                     _putch:	
  2010                           ;psect for function _putch
  2011                           
  2012     0397                     l716:	
  2013                           ;incstack = 0
  2014                           ; Regs used in _putch: [wreg]
  2015                           
  2016     0397  0008               	return
  2017     0398                     __end_of_putch:
  2018                           
  2019                           	psect	text10
  2020     03B0                     __ptext10:	
  2021 ;; *************** function _abs *****************
  2022 ;; Defined at:
  2023 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\abs.c"
  2024 ;; Parameters:    Size  Location     Type
  2025 ;;  a               2    6[COMMON] int 
  2026 ;; Auto vars:     Size  Location     Type
  2027 ;;		None
  2028 ;; Return value:  Size  Location     Type
  2029 ;;                  2    6[COMMON] int 
  2030 ;; Registers used:
  2031 ;;		wreg, status,2, status,0
  2032 ;; Tracked objects:
  2033 ;;		On entry : 0/0
  2034 ;;		On exit  : 0/0
  2035 ;;		Unchanged: 0/0
  2036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2037 ;;      Params:         2       0       0       0       0
  2038 ;;      Locals:         0       0       0       0       0
  2039 ;;      Temps:          2       0       0       0       0
  2040 ;;      Totals:         4       0       0       0       0
  2041 ;;Total ram usage:        4 bytes
  2042 ;; Hardware stack levels used: 1
  2043 ;; This function calls:
  2044 ;;		Nothing
  2045 ;; This function is called by:
  2046 ;;		_vfpfcnvrt
  2047 ;; This function uses a non-reentrant model
  2048 ;;
  2049                           
  2050     03B0                     _abs:	
  2051                           ;psect for function _abs
  2052                           
  2053     03B0                     l1128:	
  2054                           ;incstack = 0
  2055                           ; Regs used in _abs: [wreg+status,2+status,0]
  2056                           
  2057     03B0  1BF7               	btfsc	abs@a+1,7
  2058     03B1  2BB3               	goto	u851
  2059     03B2  2BB4               	goto	u850
  2060     03B3                     u851:
  2061     03B3  2BB5               	goto	l1132
  2062     03B4                     u850:
  2063     03B4                     l1130:
  2064     03B4  2BC0               	goto	l693
  2065     03B5                     l1132:
  2066     03B5  0976               	comf	abs@a,w
  2067     03B6  00F8               	movwf	??_abs
  2068     03B7  0977               	comf	abs@a+1,w
  2069     03B8  00F9               	movwf	??_abs+1
  2070     03B9  0AF8               	incf	??_abs,f
  2071     03BA  1903               	skipnz
  2072     03BB  0AF9               	incf	??_abs+1,f
  2073     03BC  0878               	movf	??_abs,w
  2074     03BD  00F6               	movwf	?_abs
  2075     03BE  0879               	movf	??_abs+1,w
  2076     03BF  00F7               	movwf	?_abs+1
  2077     03C0                     l693:
  2078     03C0  0008               	return
  2079     03C1                     __end_of_abs:
  2080                           
  2081                           	psect	text11
  2082     048A                     __ptext11:	
  2083 ;; *************** function ___awmod *****************
  2084 ;; Defined at:
  2085 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awmod.c"
  2086 ;; Parameters:    Size  Location     Type
  2087 ;;  divisor         2    0[COMMON] int 
  2088 ;;  dividend        2    2[COMMON] int 
  2089 ;; Auto vars:     Size  Location     Type
  2090 ;;  sign            1    5[COMMON] unsigned char 
  2091 ;;  counter         1    4[COMMON] unsigned char 
  2092 ;; Return value:  Size  Location     Type
  2093 ;;                  2    0[COMMON] int 
  2094 ;; Registers used:
  2095 ;;		wreg, status,2, status,0
  2096 ;; Tracked objects:
  2097 ;;		On entry : 0/0
  2098 ;;		On exit  : 0/0
  2099 ;;		Unchanged: 0/0
  2100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2101 ;;      Params:         4       0       0       0       0
  2102 ;;      Locals:         2       0       0       0       0
  2103 ;;      Temps:          0       0       0       0       0
  2104 ;;      Totals:         6       0       0       0       0
  2105 ;;Total ram usage:        6 bytes
  2106 ;; Hardware stack levels used: 1
  2107 ;; This function calls:
  2108 ;;		Nothing
  2109 ;; This function is called by:
  2110 ;;		_vfpfcnvrt
  2111 ;; This function uses a non-reentrant model
  2112 ;;
  2113                           
  2114     048A                     ___awmod:	
  2115                           ;psect for function ___awmod
  2116                           
  2117     048A                     l1076:	
  2118                           ;incstack = 0
  2119                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2120                           
  2121     048A  01F5               	clrf	___awmod@sign
  2122     048B                     l1078:
  2123     048B  1FF3               	btfss	___awmod@dividend+1,7
  2124     048C  2C8E               	goto	u711
  2125     048D  2C8F               	goto	u710
  2126     048E                     u711:
  2127     048E  2C96               	goto	l1084
  2128     048F                     u710:
  2129     048F                     l1080:
  2130     048F  09F2               	comf	___awmod@dividend,f
  2131     0490  09F3               	comf	___awmod@dividend+1,f
  2132     0491  0AF2               	incf	___awmod@dividend,f
  2133     0492  1903               	skipnz
  2134     0493  0AF3               	incf	___awmod@dividend+1,f
  2135     0494                     l1082:
  2136     0494  3001               	movlw	1
  2137     0495  00F5               	movwf	___awmod@sign
  2138     0496                     l1084:
  2139     0496  1FF1               	btfss	___awmod@divisor+1,7
  2140     0497  2C99               	goto	u721
  2141     0498  2C9A               	goto	u720
  2142     0499                     u721:
  2143     0499  2C9F               	goto	l1088
  2144     049A                     u720:
  2145     049A                     l1086:
  2146     049A  09F0               	comf	___awmod@divisor,f
  2147     049B  09F1               	comf	___awmod@divisor+1,f
  2148     049C  0AF0               	incf	___awmod@divisor,f
  2149     049D  1903               	skipnz
  2150     049E  0AF1               	incf	___awmod@divisor+1,f
  2151     049F                     l1088:
  2152     049F  0870               	movf	___awmod@divisor,w
  2153     04A0  0471               	iorwf	___awmod@divisor+1,w
  2154     04A1  1903               	btfsc	3,2
  2155     04A2  2CA4               	goto	u731
  2156     04A3  2CA5               	goto	u730
  2157     04A4                     u731:
  2158     04A4  2CD2               	goto	l1106
  2159     04A5                     u730:
  2160     04A5                     l1090:
  2161     04A5  3001               	movlw	1
  2162     04A6  00F4               	movwf	___awmod@counter
  2163     04A7  2CB1               	goto	l1096
  2164     04A8                     l1092:
  2165     04A8  3001               	movlw	1
  2166     04A9                     u745:
  2167     04A9  1003               	clrc
  2168     04AA  0DF0               	rlf	___awmod@divisor,f
  2169     04AB  0DF1               	rlf	___awmod@divisor+1,f
  2170     04AC  3EFF               	addlw	-1
  2171     04AD  1D03               	skipz
  2172     04AE  2CA9               	goto	u745
  2173     04AF                     l1094:
  2174     04AF  3001               	movlw	1
  2175     04B0  07F4               	addwf	___awmod@counter,f
  2176     04B1                     l1096:
  2177     04B1  1FF1               	btfss	___awmod@divisor+1,7
  2178     04B2  2CB4               	goto	u751
  2179     04B3  2CB5               	goto	u750
  2180     04B4                     u751:
  2181     04B4  2CA8               	goto	l1092
  2182     04B5                     u750:
  2183     04B5                     l1098:
  2184     04B5  0871               	movf	___awmod@divisor+1,w
  2185     04B6  0273               	subwf	___awmod@dividend+1,w
  2186     04B7  1D03               	skipz
  2187     04B8  2CBB               	goto	u765
  2188     04B9  0870               	movf	___awmod@divisor,w
  2189     04BA  0272               	subwf	___awmod@dividend,w
  2190     04BB                     u765:
  2191     04BB  1C03               	skipc
  2192     04BC  2CBE               	goto	u761
  2193     04BD  2CBF               	goto	u760
  2194     04BE                     u761:
  2195     04BE  2CC5               	goto	l1102
  2196     04BF                     u760:
  2197     04BF                     l1100:
  2198     04BF  0870               	movf	___awmod@divisor,w
  2199     04C0  02F2               	subwf	___awmod@dividend,f
  2200     04C1  0871               	movf	___awmod@divisor+1,w
  2201     04C2  1C03               	skipc
  2202     04C3  03F3               	decf	___awmod@dividend+1,f
  2203     04C4  02F3               	subwf	___awmod@dividend+1,f
  2204     04C5                     l1102:
  2205     04C5  3001               	movlw	1
  2206     04C6                     u775:
  2207     04C6  1003               	clrc
  2208     04C7  0CF1               	rrf	___awmod@divisor+1,f
  2209     04C8  0CF0               	rrf	___awmod@divisor,f
  2210     04C9  3EFF               	addlw	-1
  2211     04CA  1D03               	skipz
  2212     04CB  2CC6               	goto	u775
  2213     04CC                     l1104:
  2214     04CC  3001               	movlw	1
  2215     04CD  02F4               	subwf	___awmod@counter,f
  2216     04CE  1D03               	btfss	3,2
  2217     04CF  2CD1               	goto	u781
  2218     04D0  2CD2               	goto	u780
  2219     04D1                     u781:
  2220     04D1  2CB5               	goto	l1098
  2221     04D2                     u780:
  2222     04D2                     l1106:
  2223     04D2  0875               	movf	___awmod@sign,w
  2224     04D3  1903               	btfsc	3,2
  2225     04D4  2CD6               	goto	u791
  2226     04D5  2CD7               	goto	u790
  2227     04D6                     u791:
  2228     04D6  2CDC               	goto	l1110
  2229     04D7                     u790:
  2230     04D7                     l1108:
  2231     04D7  09F2               	comf	___awmod@dividend,f
  2232     04D8  09F3               	comf	___awmod@dividend+1,f
  2233     04D9  0AF2               	incf	___awmod@dividend,f
  2234     04DA  1903               	skipnz
  2235     04DB  0AF3               	incf	___awmod@dividend+1,f
  2236     04DC                     l1110:
  2237     04DC  0873               	movf	___awmod@dividend+1,w
  2238     04DD  00F1               	movwf	?___awmod+1
  2239     04DE  0872               	movf	___awmod@dividend,w
  2240     04DF  00F0               	movwf	?___awmod
  2241     04E0                     l345:
  2242     04E0  0008               	return
  2243     04E1                     __end_of___awmod:
  2244                           
  2245                           	psect	text12
  2246     04E1                     __ptext12:	
  2247 ;; *************** function ___awdiv *****************
  2248 ;; Defined at:
  2249 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awdiv.c"
  2250 ;; Parameters:    Size  Location     Type
  2251 ;;  divisor         2    0[COMMON] int 
  2252 ;;  dividend        2    2[COMMON] int 
  2253 ;; Auto vars:     Size  Location     Type
  2254 ;;  quotient        2    6[COMMON] int 
  2255 ;;  sign            1    5[COMMON] unsigned char 
  2256 ;;  counter         1    4[COMMON] unsigned char 
  2257 ;; Return value:  Size  Location     Type
  2258 ;;                  2    0[COMMON] int 
  2259 ;; Registers used:
  2260 ;;		wreg, status,2, status,0
  2261 ;; Tracked objects:
  2262 ;;		On entry : 0/0
  2263 ;;		On exit  : 0/0
  2264 ;;		Unchanged: 0/0
  2265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2266 ;;      Params:         4       0       0       0       0
  2267 ;;      Locals:         4       0       0       0       0
  2268 ;;      Temps:          0       0       0       0       0
  2269 ;;      Totals:         8       0       0       0       0
  2270 ;;Total ram usage:        8 bytes
  2271 ;; Hardware stack levels used: 1
  2272 ;; This function calls:
  2273 ;;		Nothing
  2274 ;; This function is called by:
  2275 ;;		_vfpfcnvrt
  2276 ;; This function uses a non-reentrant model
  2277 ;;
  2278                           
  2279     04E1                     ___awdiv:	
  2280                           ;psect for function ___awdiv
  2281                           
  2282     04E1                     l1032:	
  2283                           ;incstack = 0
  2284                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2285                           
  2286     04E1  01F5               	clrf	___awdiv@sign
  2287     04E2                     l1034:
  2288     04E2  1FF1               	btfss	___awdiv@divisor+1,7
  2289     04E3  2CE5               	goto	u611
  2290     04E4  2CE6               	goto	u610
  2291     04E5                     u611:
  2292     04E5  2CED               	goto	l1040
  2293     04E6                     u610:
  2294     04E6                     l1036:
  2295     04E6  09F0               	comf	___awdiv@divisor,f
  2296     04E7  09F1               	comf	___awdiv@divisor+1,f
  2297     04E8  0AF0               	incf	___awdiv@divisor,f
  2298     04E9  1903               	skipnz
  2299     04EA  0AF1               	incf	___awdiv@divisor+1,f
  2300     04EB                     l1038:
  2301     04EB  3001               	movlw	1
  2302     04EC  00F5               	movwf	___awdiv@sign
  2303     04ED                     l1040:
  2304     04ED  1FF3               	btfss	___awdiv@dividend+1,7
  2305     04EE  2CF0               	goto	u621
  2306     04EF  2CF1               	goto	u620
  2307     04F0                     u621:
  2308     04F0  2CF8               	goto	l1046
  2309     04F1                     u620:
  2310     04F1                     l1042:
  2311     04F1  09F2               	comf	___awdiv@dividend,f
  2312     04F2  09F3               	comf	___awdiv@dividend+1,f
  2313     04F3  0AF2               	incf	___awdiv@dividend,f
  2314     04F4  1903               	skipnz
  2315     04F5  0AF3               	incf	___awdiv@dividend+1,f
  2316     04F6                     l1044:
  2317     04F6  3001               	movlw	1
  2318     04F7  06F5               	xorwf	___awdiv@sign,f
  2319     04F8                     l1046:
  2320     04F8  01F6               	clrf	___awdiv@quotient
  2321     04F9  01F7               	clrf	___awdiv@quotient+1
  2322     04FA                     l1048:
  2323     04FA  0870               	movf	___awdiv@divisor,w
  2324     04FB  0471               	iorwf	___awdiv@divisor+1,w
  2325     04FC  1903               	btfsc	3,2
  2326     04FD  2CFF               	goto	u631
  2327     04FE  2D00               	goto	u630
  2328     04FF                     u631:
  2329     04FF  2D35               	goto	l1068
  2330     0500                     u630:
  2331     0500                     l1050:
  2332     0500  3001               	movlw	1
  2333     0501  00F4               	movwf	___awdiv@counter
  2334     0502  2D0C               	goto	l1056
  2335     0503                     l1052:
  2336     0503  3001               	movlw	1
  2337     0504                     u645:
  2338     0504  1003               	clrc
  2339     0505  0DF0               	rlf	___awdiv@divisor,f
  2340     0506  0DF1               	rlf	___awdiv@divisor+1,f
  2341     0507  3EFF               	addlw	-1
  2342     0508  1D03               	skipz
  2343     0509  2D04               	goto	u645
  2344     050A                     l1054:
  2345     050A  3001               	movlw	1
  2346     050B  07F4               	addwf	___awdiv@counter,f
  2347     050C                     l1056:
  2348     050C  1FF1               	btfss	___awdiv@divisor+1,7
  2349     050D  2D0F               	goto	u651
  2350     050E  2D10               	goto	u650
  2351     050F                     u651:
  2352     050F  2D03               	goto	l1052
  2353     0510                     u650:
  2354     0510                     l1058:
  2355     0510  3001               	movlw	1
  2356     0511                     u665:
  2357     0511  1003               	clrc
  2358     0512  0DF6               	rlf	___awdiv@quotient,f
  2359     0513  0DF7               	rlf	___awdiv@quotient+1,f
  2360     0514  3EFF               	addlw	-1
  2361     0515  1D03               	skipz
  2362     0516  2D11               	goto	u665
  2363     0517  0871               	movf	___awdiv@divisor+1,w
  2364     0518  0273               	subwf	___awdiv@dividend+1,w
  2365     0519  1D03               	skipz
  2366     051A  2D1D               	goto	u675
  2367     051B  0870               	movf	___awdiv@divisor,w
  2368     051C  0272               	subwf	___awdiv@dividend,w
  2369     051D                     u675:
  2370     051D  1C03               	skipc
  2371     051E  2D20               	goto	u671
  2372     051F  2D21               	goto	u670
  2373     0520                     u671:
  2374     0520  2D28               	goto	l1064
  2375     0521                     u670:
  2376     0521                     l1060:
  2377     0521  0870               	movf	___awdiv@divisor,w
  2378     0522  02F2               	subwf	___awdiv@dividend,f
  2379     0523  0871               	movf	___awdiv@divisor+1,w
  2380     0524  1C03               	skipc
  2381     0525  03F3               	decf	___awdiv@dividend+1,f
  2382     0526  02F3               	subwf	___awdiv@dividend+1,f
  2383     0527                     l1062:
  2384     0527  1476               	bsf	___awdiv@quotient,0
  2385     0528                     l1064:
  2386     0528  3001               	movlw	1
  2387     0529                     u685:
  2388     0529  1003               	clrc
  2389     052A  0CF1               	rrf	___awdiv@divisor+1,f
  2390     052B  0CF0               	rrf	___awdiv@divisor,f
  2391     052C  3EFF               	addlw	-1
  2392     052D  1D03               	skipz
  2393     052E  2D29               	goto	u685
  2394     052F                     l1066:
  2395     052F  3001               	movlw	1
  2396     0530  02F4               	subwf	___awdiv@counter,f
  2397     0531  1D03               	btfss	3,2
  2398     0532  2D34               	goto	u691
  2399     0533  2D35               	goto	u690
  2400     0534                     u691:
  2401     0534  2D10               	goto	l1058
  2402     0535                     u690:
  2403     0535                     l1068:
  2404     0535  0875               	movf	___awdiv@sign,w
  2405     0536  1903               	btfsc	3,2
  2406     0537  2D39               	goto	u701
  2407     0538  2D3A               	goto	u700
  2408     0539                     u701:
  2409     0539  2D3F               	goto	l1072
  2410     053A                     u700:
  2411     053A                     l1070:
  2412     053A  09F6               	comf	___awdiv@quotient,f
  2413     053B  09F7               	comf	___awdiv@quotient+1,f
  2414     053C  0AF6               	incf	___awdiv@quotient,f
  2415     053D  1903               	skipnz
  2416     053E  0AF7               	incf	___awdiv@quotient+1,f
  2417     053F                     l1072:
  2418     053F  0877               	movf	___awdiv@quotient+1,w
  2419     0540  00F1               	movwf	?___awdiv+1
  2420     0541  0876               	movf	___awdiv@quotient,w
  2421     0542  00F0               	movwf	?___awdiv
  2422     0543                     l332:
  2423     0543  0008               	return
  2424     0544                     __end_of___awdiv:
  2425                           
  2426                           	psect	text13
  2427     03E9                     __ptext13:	
  2428 ;; *************** function _lcd_string *****************
  2429 ;; Defined at:
  2430 ;;		line 45 in file "atividade7.c"
  2431 ;; Parameters:    Size  Location     Type
  2432 ;;  str             1    3[COMMON] PTR const unsigned char 
  2433 ;;		 -> atualiza_lcd@buffer(16), 
  2434 ;; Auto vars:     Size  Location     Type
  2435 ;;		None
  2436 ;; Return value:  Size  Location     Type
  2437 ;;                  1    wreg      void 
  2438 ;; Registers used:
  2439 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2440 ;; Tracked objects:
  2441 ;;		On entry : 0/0
  2442 ;;		On exit  : 0/0
  2443 ;;		Unchanged: 0/0
  2444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2445 ;;      Params:         1       0       0       0       0
  2446 ;;      Locals:         0       0       0       0       0
  2447 ;;      Temps:          0       0       0       0       0
  2448 ;;      Totals:         1       0       0       0       0
  2449 ;;Total ram usage:        1 bytes
  2450 ;; Hardware stack levels used: 1
  2451 ;; Hardware stack levels required when called: 1
  2452 ;; This function calls:
  2453 ;;		_lcd_data
  2454 ;; This function is called by:
  2455 ;;		_atualiza_lcd
  2456 ;; This function uses a non-reentrant model
  2457 ;;
  2458                           
  2459     03E9                     _lcd_string:	
  2460                           ;psect for function _lcd_string
  2461                           
  2462     03E9                     l1214:	
  2463                           ;incstack = 0
  2464                           ; Regs used in _lcd_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2465                           
  2466                           
  2467                           ;atividade7.c: 46:     while (*str) {
  2468     03E9  2BF4               	goto	l1220
  2469     03EA                     l1216:
  2470                           
  2471                           ;atividade7.c: 47:         lcd_data(*str++);
  2472     03EA  0873               	movf	lcd_string@str,w
  2473     03EB  0084               	movwf	4
  2474     03EC  0800               	movf	0,w
  2475     03ED  120A  118A  23D5  120A  118A  	fcall	_lcd_data
  2476     03F2                     l1218:
  2477     03F2  3001               	movlw	1
  2478     03F3  07F3               	addwf	lcd_string@str,f
  2479     03F4                     l1220:
  2480                           
  2481                           ;atividade7.c: 46:     while (*str) {
  2482     03F4  0873               	movf	lcd_string@str,w
  2483     03F5  0084               	movwf	4
  2484     03F6  1383               	bcf	3,7	;select IRP bank0
  2485     03F7  0800               	movf	0,w
  2486     03F8  1D03               	btfss	3,2
  2487     03F9  2BFB               	goto	u971
  2488     03FA  2BFC               	goto	u970
  2489     03FB                     u971:
  2490     03FB  2BEA               	goto	l1216
  2491     03FC                     u970:
  2492     03FC                     l36:
  2493     03FC  0008               	return
  2494     03FD                     __end_of_lcd_string:
  2495                           
  2496                           	psect	text14
  2497     03D5                     __ptext14:	
  2498 ;; *************** function _lcd_data *****************
  2499 ;; Defined at:
  2500 ;;		line 29 in file "atividade7.c"
  2501 ;; Parameters:    Size  Location     Type
  2502 ;;  data            1    wreg     unsigned char 
  2503 ;; Auto vars:     Size  Location     Type
  2504 ;;  data            1    2[COMMON] unsigned char 
  2505 ;; Return value:  Size  Location     Type
  2506 ;;                  1    wreg      void 
  2507 ;; Registers used:
  2508 ;;		wreg
  2509 ;; Tracked objects:
  2510 ;;		On entry : 0/0
  2511 ;;		On exit  : 0/0
  2512 ;;		Unchanged: 0/0
  2513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2514 ;;      Params:         0       0       0       0       0
  2515 ;;      Locals:         1       0       0       0       0
  2516 ;;      Temps:          2       0       0       0       0
  2517 ;;      Totals:         3       0       0       0       0
  2518 ;;Total ram usage:        3 bytes
  2519 ;; Hardware stack levels used: 1
  2520 ;; This function calls:
  2521 ;;		Nothing
  2522 ;; This function is called by:
  2523 ;;		_lcd_string
  2524 ;;		_main
  2525 ;; This function uses a non-reentrant model
  2526 ;;
  2527                           
  2528     03D5                     _lcd_data:	
  2529                           ;psect for function _lcd_data
  2530                           
  2531                           
  2532                           ;incstack = 0
  2533                           ; Regs used in _lcd_data: [wreg]
  2534                           ;lcd_data@data stored from wreg
  2535     03D5  00F2               	movwf	lcd_data@data
  2536     03D6                     l1188:
  2537                           
  2538                           ;atividade7.c: 30:     PORTD = data;
  2539     03D6  0872               	movf	lcd_data@data,w
  2540     03D7  1283               	bcf	3,5	;RP0=0, select bank0
  2541     03D8  1303               	bcf	3,6	;RP1=0, select bank0
  2542     03D9  0088               	movwf	8	;volatile
  2543     03DA                     l1190:
  2544                           
  2545                           ;atividade7.c: 31:     PORTEbits.RE0 = 1;
  2546     03DA  1409               	bsf	9,0	;volatile
  2547     03DB                     l1192:
  2548                           
  2549                           ;atividade7.c: 32:     PORTEbits.RE1 = 1;
  2550     03DB  1489               	bsf	9,1	;volatile
  2551                           
  2552                           ;atividade7.c: 33:     _delay((unsigned long)((5)*(20000000/4000.0)));
  2553     03DC  3021               	movlw	33
  2554     03DD  00F1               	movwf	??_lcd_data+1
  2555     03DE  3076               	movlw	118
  2556     03DF  00F0               	movwf	??_lcd_data
  2557     03E0                     u1227:
  2558     03E0  0BF0               	decfsz	??_lcd_data,f
  2559     03E1  2BE0               	goto	u1227
  2560     03E2  0BF1               	decfsz	??_lcd_data+1,f
  2561     03E3  2BE0               	goto	u1227
  2562     03E4  0000               	nop
  2563     03E5                     l1194:
  2564                           
  2565                           ;atividade7.c: 34:     PORTEbits.RE1 = 0;
  2566     03E5  1283               	bcf	3,5	;RP0=0, select bank0
  2567     03E6  1303               	bcf	3,6	;RP1=0, select bank0
  2568     03E7  1089               	bcf	9,1	;volatile
  2569     03E8                     l27:
  2570     03E8  0008               	return
  2571     03E9                     __end_of_lcd_data:
  2572                           
  2573                           	psect	text15
  2574     03C1                     __ptext15:	
  2575 ;; *************** function _lcd_command *****************
  2576 ;; Defined at:
  2577 ;;		line 37 in file "atividade7.c"
  2578 ;; Parameters:    Size  Location     Type
  2579 ;;  cmd             1    wreg     unsigned char 
  2580 ;; Auto vars:     Size  Location     Type
  2581 ;;  cmd             1    2[COMMON] unsigned char 
  2582 ;; Return value:  Size  Location     Type
  2583 ;;                  1    wreg      void 
  2584 ;; Registers used:
  2585 ;;		wreg
  2586 ;; Tracked objects:
  2587 ;;		On entry : 0/0
  2588 ;;		On exit  : 0/0
  2589 ;;		Unchanged: 0/0
  2590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2591 ;;      Params:         0       0       0       0       0
  2592 ;;      Locals:         1       0       0       0       0
  2593 ;;      Temps:          2       0       0       0       0
  2594 ;;      Totals:         3       0       0       0       0
  2595 ;;Total ram usage:        3 bytes
  2596 ;; Hardware stack levels used: 1
  2597 ;; This function calls:
  2598 ;;		Nothing
  2599 ;; This function is called by:
  2600 ;;		_lcd_initialise
  2601 ;;		_atualiza_lcd
  2602 ;;		_main
  2603 ;; This function uses a non-reentrant model
  2604 ;;
  2605                           
  2606     03C1                     _lcd_command:	
  2607                           ;psect for function _lcd_command
  2608                           
  2609                           
  2610                           ;incstack = 0
  2611                           ; Regs used in _lcd_command: [wreg]
  2612                           ;lcd_command@cmd stored from wreg
  2613     03C1  00F2               	movwf	lcd_command@cmd
  2614     03C2                     l1206:
  2615                           
  2616                           ;atividade7.c: 38:     PORTD = cmd;
  2617     03C2  0872               	movf	lcd_command@cmd,w
  2618     03C3  1283               	bcf	3,5	;RP0=0, select bank0
  2619     03C4  1303               	bcf	3,6	;RP1=0, select bank0
  2620     03C5  0088               	movwf	8	;volatile
  2621     03C6                     l1208:
  2622                           
  2623                           ;atividade7.c: 39:     PORTEbits.RE0 = 0;
  2624     03C6  1009               	bcf	9,0	;volatile
  2625     03C7                     l1210:
  2626                           
  2627                           ;atividade7.c: 40:     PORTEbits.RE1 = 1;
  2628     03C7  1489               	bsf	9,1	;volatile
  2629                           
  2630                           ;atividade7.c: 41:     _delay((unsigned long)((5)*(20000000/4000.0)));
  2631     03C8  3021               	movlw	33
  2632     03C9  00F1               	movwf	??_lcd_command+1
  2633     03CA  3076               	movlw	118
  2634     03CB  00F0               	movwf	??_lcd_command
  2635     03CC                     u1237:
  2636     03CC  0BF0               	decfsz	??_lcd_command,f
  2637     03CD  2BCC               	goto	u1237
  2638     03CE  0BF1               	decfsz	??_lcd_command+1,f
  2639     03CF  2BCC               	goto	u1237
  2640     03D0  0000               	nop
  2641     03D1                     l1212:
  2642                           
  2643                           ;atividade7.c: 42:     PORTEbits.RE1 = 0;
  2644     03D1  1283               	bcf	3,5	;RP0=0, select bank0
  2645     03D2  1303               	bcf	3,6	;RP1=0, select bank0
  2646     03D3  1089               	bcf	9,1	;volatile
  2647     03D4                     l30:
  2648     03D4  0008               	return
  2649     03D5                     __end_of_lcd_command:
  2650     0002                     ___latbits      equ	2
  2651     007E                     btemp           set	126	;btemp
  2652     007E                     wtemp0          set	126
  2653                           
  2654                           	psect	config
  2655                           
  2656                           ;Config register CONFIG @ 0x2007
  2657                           ;	Oscillator Selection bits
  2658                           ;	FOSC = HS, HS oscillator
  2659                           ;	Watchdog Timer Enable bit
  2660                           ;	WDTE = OFF, WDT disabled
  2661                           ;	Power-up Timer Enable bit
  2662                           ;	PWRTE = OFF, PWRT disabled
  2663                           ;	FLASH Program Memory Code Protection bits
  2664                           ;	CP = OFF, Code protection off
  2665                           ;	Brown-out Reset Enable bit
  2666                           ;	BOREN = OFF, BOR disabled
  2667                           ;	Low Voltage In-Circuit Serial Programming Enable bit
  2668                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  2669                           ;	Data EE Memory Code Protection
  2670                           ;	CPD = OFF, Code Protection off
  2671                           ;	FLASH Program Memory Write Enable
  2672                           ;	WRT = OFF, Unprotected program memory may not be written to by EECON control
  2673                           ;	In-Circuit Debugger Mode bit
  2674                           ;	DEBUG = 0x1, unprogrammed default
  2675     2007                     	org	8199
  2676     2007  3D3A               	dw	15674

Data Sizes:
    Strings     3
    Constant    0
    Data        2
    BSS         38
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     58      66
    BANK1            80      0      32
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> atualiza_lcd@buffer(BANK0[16]), 

    f$.$source	PTR const unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> atualiza_lcd@buffer(BANK0[16]), 

    fputc@fp$.$source	PTR const unsigned char  size(1) Largest target is 0

    lcd_string@str	PTR const unsigned char  size(1) Largest target is 16
		 -> atualiza_lcd@buffer(BANK0[16]), 

    S584$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> atualiza_lcd@buffer(BANK0[16]), 

    S584$source	PTR const unsigned char  size(1) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 16
		 -> atualiza_lcd@buffer(BANK0[16]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMMON[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 


Critical Paths under _main in COMMON

    _lcd_initialise->_lcd_command
    _sprintf->_vfprintf
    _vfpfcnvrt->_fputc
    _abs->___awmod
    _lcd_string->_lcd_data

Critical Paths under _main in BANK0

    _main->_atualiza_lcd
    _atualiza_lcd->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    2304
                                             53 BANK0      5     5      0
                       _atualiza_lcd
                           _debounce
                        _lcd_command
                           _lcd_data
                     _lcd_initialise
                            _teclado
 ---------------------------------------------------------------------------------
 (1) _lcd_initialise                                       0     0      0      29
                        _lcd_command
 ---------------------------------------------------------------------------------
 (1) _debounce                                             3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _atualiza_lcd                                        19    19      0    1998
                                             34 BANK0     19    19      0
                        _lcd_command
                         _lcd_string
                            _sprintf
                            _teclado
 ---------------------------------------------------------------------------------
 (1) _teclado                                              1     1      0      61
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             19    15      4    1760
                                             17 BANK0     17    13      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             5     1      4    1559
                                             13 COMMON     1     1      0
                                             13 BANK0      4     0      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           13     9      4    1434
                                              0 BANK0     13     9      4
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                               13     9      4     230
                                              0 COMMON    13     9      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2      67
                                              6 COMMON     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     298
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     302
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _lcd_string                                           1     0      1      75
                                              3 COMMON     1     0      1
                           _lcd_data
 ---------------------------------------------------------------------------------
 (1) _lcd_data                                             3     3      0      29
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _lcd_command                                          3     3      0      29
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _atualiza_lcd
     _lcd_command
     _lcd_string
       _lcd_data
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch
     _teclado
   _debounce
   _lcd_command
   _lcd_data
   _lcd_initialise
     _lcd_command
   _teclado

Address spaces:
Name               Size   Autos  Total    Usage
BANK3               96      0       0      0.0%
BITBANK3            96      0       0      0.0%
BANK2               96      0       0      0.0%
BITBANK2            96      0       0      0.0%
BANK1               80      0      32     40.0%
BITBANK1            80      0       0      0.0%
BANK0               80     58      66     82.5%
BITBANK0            80      0       0      0.0%
COMMON              14     14      14    100.0%
BITCOMMON           14      0       0      0.0%
DATA                 0      0     112      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Tue Dec 10 01:15:49 2024

                            pc 0002                   lcd_data@data 0072                             l30 03D4  
                           l50 0564                             l42 03AF                             l27 03E8  
                           l51 056E                             l36 03FC                             l60 05AC  
                           l52 0574                             l61 05B2                             l53 057A  
                           l54 0580                             l46 0547                             l55 058A  
                           l39 0415                             l64 05BF                             l56 0590  
                           l48 0558                             l57 0596                             l49 055E  
                           l58 059C                             l59 05A6                             l67 0489  
                           l85 06DE                   ___awdiv@sign 0075                             fsr 0004  
                          l332 0543                            l345 04E0                            l705 0659  
                          l642 0438                            l716 0397                            l680 07E0  
                          l693 03C0                            l686 045D                            u610 04E6  
                          u611 04E5                            u700 053A                            u620 04F1  
                          u701 0539                            u621 04F0                            u630 0500  
                          u710 048F                            u631 04FF                            u711 048E  
                          u720 049A                            u800 05C6                            u721 0499  
                          u801 05C5                            u650 0510                            u730 04A5  
                          u810 05CC                            u651 050F                            u731 04A4  
                          u811 05CB                            u820 05EB                            u900 074E  
                          u645 0504                            u821 05EA                            u670 0521  
                          u750 04B5                            u830 061D                            u910 0789  
                          u671 0520                            u751 04B4                            u831 061C  
                          u911 0788                            u760 04BF                            u840 063E  
                          u920 078E                            u665 0511                            u761 04BE  
                          u745 04A9                            u921 078D                            u690 0535  
                          u850 03B4                            u930 0793                            u691 0534  
                          u675 051D                            u851 03B3                            u835 0619  
                          u931 0792                            u780 04D2                            u940 0798  
                          u860 070B                            u685 0529                            u781 04D1  
                          u765 04BB                            u941 0797                            u861 070A  
                          u790 04D7                            u950 07BF                            u870 0727  
                          u791 04D6                            u775 04C6                            u951 07BE  
                          u871 0726                            u880 0733                            u960 0459  
                          u881 0732                            u961 0458                            u970 03FC  
                          u890 074D                            u971 03FB                            u891 074B  
                          u980 0551                            u981 0550                            u990 0556  
                          u991 0555                            _abs 03B0                            fsr0 0004  
                          indf 0000                   ___awmod@sign 0075                           l1100 04BF  
                         l1110 04DC                           l1102 04C5                           l1040 04ED  
                         l1032 04E1                           l1104 04CC                           l1120 05D3  
                         l1200 044D                           l1210 03C7                           l1050 0500  
                         l1042 04F1                           l1034 04E2                           l1106 04D2  
                         l1130 03B4                           l1122 05EB                           l1114 05C0  
                         l1202 0459                           ?_abs 0076                           l1212 03D1  
                         l1220 03F4                           l1060 0521                           l1052 0503  
                         l1044 04F6                           l1036 04E6                           l1108 04D7  
                         l1132 03B5                           l1124 061D                           l1116 05C6  
                         l1140 070F                           l1300 066B                           l1206 03C2  
                         l1214 03E9                           l1070 053A                           l1062 0527  
                         l1054 050A                           l1046 04F8                           l1038 04EB  
                         l1118 05CC                           l1150 0733                           l1142 0713  
                         l1230 055C                           l1222 0544                           l1310 0690  
                         l1302 0673                           l1208 03C6                           l1216 03EA  
                         l1072 053F                           l1064 0528                           l1056 050C  
                         l1048 04FA                           l1080 048F                           l1128 03B0  
                         l1160 076E                           l1152 0741                           l1144 0717  
                         l1136 06FB                           l1240 057E                           l1232 0562  
                         l1224 0551                           l1312 0698                           l1304 067A  
                         l1218 03F2                           l1066 052F                           l1058 0510  
                         l1090 04A5                           l1082 0494                           l1170 0798  
                         l1162 0783                           l1154 0746                           l1146 071B  
                         l1138 070B                           l1250 05A4                           l1242 0588  
                         l1234 056C                           l1226 0552                           l1314 069E  
                         l1068 0535                           l1092 04A8                           l1084 0496  
                         l1076 048A                           l1172 07A1                           l1164 0789  
                         l1156 0748                           l1148 0727                           l1260 05BE  
                         l1252 05AA                           l1244 058E                           l1236 0572  
                         l1228 0556                           l1340 06E3                           l1316 06A6  
                         l1324 06B2                           l1332 06C3                           l1308 0688  
                         l1190 03DA                           l1094 04AF                           l1086 049A  
                         l1078 048B                           l1174 07B5                           l1166 078E  
                         l1158 074F                           l1182 07C7                           l1270 0420  
                         l1254 05B0                           l1246 0594                           l1238 0578  
                         l1342 06E8                           l1334 06CA                           l1326 06B8  
                         l1318 06AD                           l1192 03DB                           l1096 04B1  
                         l1088 049F                           l1168 0793                           l1176 07B9  
                         l1272 0422                           l1264 0416                           l1256 05B6  
                         l1248 059A                           l1280 03A2                           l1344 06ED  
                         l1336 06CF                           l1328 06BC                           l1194 03E5  
                         l1098 04B5                           l1178 07C0                           l1274 042F  
                         l1266 041A                           l1258 05B8                           l1290 0482  
                         l1282 045E                           l1338 06D9                           l1188 03D6  
                         l1196 0439                           l1268 041E                           l1284 0466  
                         l1292 065A                           l1198 043E                           l1286 0476  
                         l1278 03FD                           l1294 065F                           l1288 047C  
                         l1296 0661                           l1298 0666                           STR_1 0009  
                         u1000 055C                           u1001 055B                           u1010 0562  
                         u1011 0561                           u1100 05A4                           u1020 056C  
                         u1101 05A3                           u1021 056B                           u1110 05AA  
                         u1030 0572                           u1111 05A9                           u1031 0571  
                         u1120 05B0                           u1040 0578                           u1200 06F7  
                         u1121 05AF                           u1041 0577                           u1201 06F6  
                         u1130 05B6                           u1050 057E                           u1131 05B5  
                         u1051 057D                           u1140 05BE                           u1060 0588  
                         u1141 05BD                           u1061 0587                           u1070 058E  
                         u1150 0687                           u1071 058D                           u1151 0686  
                         u1080 0594                           u1160 0698                           u1081 0593  
                         u1217 03A8                           u1161 0697                           u1090 059A  
                         u1170 069E                           u1227 03E0                           u1091 0599  
                         u1171 069D                           u1155 0683                           u1180 06CA  
                         u1237 03CC                           u1181 06C9                           u1190 06D9  
                         u1191 06D8                           abs@a 0076                           _dbuf 00A0  
                         _main 065A                           _prec 005C                           btemp 007E  
                         start 0000                  ?_atualiza_lcd 0070                          ??_abs 0078  
                        ?_main 0070                __end_of___awdiv 0544                __end_of___awmod 04E1  
              ___awdiv@divisor 0070                ___awdiv@counter 0074                   vfpfcnvrt@fmt 0022  
                        _PORTD 0008                          _TRISB 0086                          _TRISC 0087  
                        _TRISD 0088                          _TRISE 0089                          _flags 005E  
                        _fputc 05C0                          _width 005A                          _putch 0397  
                        main@i 0057                __end_of_teclado 05C0                          pclath 000A  
               _tecla_anterior 0061                          status 0003                          wtemp0 007E  
              __end_of_sprintf 0439                 ??_atualiza_lcd 0042                __initialization 07E1  
                 __end_of_main 06FB                         ??_main 0055                 lcd_command@cmd 0072  
                       ?_fputc 0070               ___awdiv@dividend 0072                         ?_putch 0070  
                vfpfcnvrt@done 0026               __end_of_debounce 03B0               __end_of_lcd_data 03E9  
                 vfprintf@cfmt 007D                      ??___awdiv 0074                      ??___awmod 0074  
            _tecla_pressionada 005F               ___awdiv@quotient 0076                ___awmod@divisor 0070  
              ___awmod@counter 0074                         fputc@c 0070                      ??_teclado 0070  
                       putch@c 0070               __end_of_vfprintf 045E               ??_lcd_initialise 0073  
                    ??_sprintf 0035                  lcd_string@str 0073        __end_of__initialization 07FC  
               __pcstackCOMMON 0070                   __pidataBANK0 0398                  __end_of_fputc 065A  
                __end_of_putch 0398           __end_of_atualiza_lcd 048A                        ??_fputc 0074  
                      ??_putch 0070                     __pbssBANK0 005A                     __pbssBANK1 00A0  
           atualiza_lcd@buffer 0044                     __pmaintext 065A                      ?_debounce 0070  
                    ?_lcd_data 0070                     _lcd_string 03E9                     __stringtab 0003  
               main@cursor_pos 0060                        ___awdiv 04E1                        ___awmod 048A  
                    ?_vfprintf 002D                        __ptext1 03FD                        __ptext2 03A2  
                      __ptext3 045E                        __ptext4 0544                        __ptext5 0416  
                      __ptext6 0439                        __ptext7 06FB                        __ptext8 05C0  
                      __ptext9 0397               ___awmod@dividend 0072                     ??_debounce 0070  
                      _teclado 0544                     ??_lcd_data 0070                        _sprintf 0416  
                      clrloop0 039B           end_of_initialization 07FC                        fputc@fp 0072  
            __end_of_vfpfcnvrt 07E1               vfpfcnvrt@convarg 0028                     ??_vfprintf 007D  
                    _PORTBbits 0006                      _PORTCbits 0007                      _PORTEbits 0009  
                  ?_lcd_string 0073                  ??_lcd_command 0070                   _atualiza_lcd 045E  
                  vfpfcnvrt@ap 0023                    vfpfcnvrt@cp 0027                    vfpfcnvrt@fp 0020  
          start_initialization 07E1                    __end_of_abs 03C1                    vfprintf@fmt 002F  
          __end_of_lcd_command 03D5                    __pdataBANK0 0060                      ___latbits 0002  
                __pcstackBANK0 0020                       ?___awdiv 0070                       ?___awmod 0070  
                    __pstrings 0003                   teclado@tecla 0070                       ?_teclado 0070  
                     ?_sprintf 0031                      clear_ram0 039A                    _lcd_command 03C1  
                    _vfpfcnvrt 06FB                    __stringbase 0008                      main@tecla 0059  
                 ??_lcd_string 0074                     vfpfcnvrt@c 002C                     vfprintf@ap 0030  
                   vfprintf@fp 002D                     ?_vfpfcnvrt 0020             __end_of_lcd_string 03FD  
           __end_of__stringtab 0009                     sprintf@fmt 0032                       _debounce 03A2  
                     __ptext10 03B0                       __ptext11 048A                       __ptext12 04E1  
                     __ptext13 03E9                       __ptext14 03D5                       __ptext15 03C1  
atualiza_lcd@tecla_pressionado 0054                       _lcd_data 03D5                 _lcd_initialise 03FD  
                     _vfprintf 0439                      sprintf@ap 0036         __end_of_lcd_initialise 0416  
                    stringcode 0003                    ??_vfpfcnvrt 0024                       sprintf@f 0037  
                     sprintf@s 0031                       stringdir 0003                       stringtab 0003  
              ?_lcd_initialise 0070                   ?_lcd_command 0070  
