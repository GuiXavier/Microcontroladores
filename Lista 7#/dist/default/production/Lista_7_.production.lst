

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Sun Dec 08 23:41:01 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F877
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,space=0,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    14                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2,group=3
    19                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2,group=1
    20                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2,group=1
    21                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2,group=1
    22                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2,group=2
    23                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2,group=1
    24                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2,group=1
    25                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2,group=3
    26                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2,group=3
    27                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2,group=3
    28                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2,group=3
    29                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2,group=2
    30                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2,group=2
    31                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2
    34                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    35                           	dabs	1,0x7E,2
    36     0000                     
    37                           ; Generated 12/10/2023 GMT
    38                           ; 
    39                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution. Publication is not required when
    53                           ;        this file is used in an embedded application.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC16F877 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71     0004                     fsr             equ	4
    72     0004                     fsr0            equ	4
    73     0000                     indf            equ	0
    74     0000                     indf0           equ	0
    75     0002                     pc              equ	2
    76     0002                     pcl             equ	2
    77     000A                     pclath          equ	10
    78     0003                     status          equ	3
    79     0000                     INDF            equ	0	;# 
    80     0001                     TMR0            equ	1	;# 
    81     0002                     PCL             equ	2	;# 
    82     0003                     STATUS          equ	3	;# 
    83     0004                     FSR             equ	4	;# 
    84     0005                     PORTA           equ	5	;# 
    85     0006                     PORTB           equ	6	;# 
    86     0007                     PORTC           equ	7	;# 
    87     0008                     PORTD           equ	8	;# 
    88     0009                     PORTE           equ	9	;# 
    89     000A                     PCLATH          equ	10	;# 
    90     000B                     INTCON          equ	11	;# 
    91     000C                     PIR1            equ	12	;# 
    92     000D                     PIR2            equ	13	;# 
    93     000E                     TMR1            equ	14	;# 
    94     000E                     TMR1L           equ	14	;# 
    95     000F                     TMR1H           equ	15	;# 
    96     0010                     T1CON           equ	16	;# 
    97     0011                     TMR2            equ	17	;# 
    98     0012                     T2CON           equ	18	;# 
    99     0013                     SSPBUF          equ	19	;# 
   100     0014                     SSPCON          equ	20	;# 
   101     0015                     CCPR1           equ	21	;# 
   102     0015                     CCPR1L          equ	21	;# 
   103     0016                     CCPR1H          equ	22	;# 
   104     0017                     CCP1CON         equ	23	;# 
   105     0018                     RCSTA           equ	24	;# 
   106     0019                     TXREG           equ	25	;# 
   107     001A                     RCREG           equ	26	;# 
   108     001B                     CCPR2           equ	27	;# 
   109     001B                     CCPR2L          equ	27	;# 
   110     001C                     CCPR2H          equ	28	;# 
   111     001D                     CCP2CON         equ	29	;# 
   112     001E                     ADRESH          equ	30	;# 
   113     001F                     ADCON0          equ	31	;# 
   114     0081                     OPTION_REG      equ	129	;# 
   115     0085                     TRISA           equ	133	;# 
   116     0086                     TRISB           equ	134	;# 
   117     0087                     TRISC           equ	135	;# 
   118     0088                     TRISD           equ	136	;# 
   119     0089                     TRISE           equ	137	;# 
   120     008C                     PIE1            equ	140	;# 
   121     008D                     PIE2            equ	141	;# 
   122     008E                     PCON            equ	142	;# 
   123     0091                     SSPCON2         equ	145	;# 
   124     0092                     PR2             equ	146	;# 
   125     0093                     SSPADD          equ	147	;# 
   126     0094                     SSPSTAT         equ	148	;# 
   127     0098                     TXSTA           equ	152	;# 
   128     0099                     SPBRG           equ	153	;# 
   129     009E                     ADRESL          equ	158	;# 
   130     009F                     ADCON1          equ	159	;# 
   131     010C                     EEDATA          equ	268	;# 
   132     010D                     EEADR           equ	269	;# 
   133     010E                     EEDATH          equ	270	;# 
   134     010F                     EEADRH          equ	271	;# 
   135     018C                     EECON1          equ	396	;# 
   136     018D                     EECON2          equ	397	;# 
   137     0000                     INDF            equ	0	;# 
   138     0001                     TMR0            equ	1	;# 
   139     0002                     PCL             equ	2	;# 
   140     0003                     STATUS          equ	3	;# 
   141     0004                     FSR             equ	4	;# 
   142     0005                     PORTA           equ	5	;# 
   143     0006                     PORTB           equ	6	;# 
   144     0007                     PORTC           equ	7	;# 
   145     0008                     PORTD           equ	8	;# 
   146     0009                     PORTE           equ	9	;# 
   147     000A                     PCLATH          equ	10	;# 
   148     000B                     INTCON          equ	11	;# 
   149     000C                     PIR1            equ	12	;# 
   150     000D                     PIR2            equ	13	;# 
   151     000E                     TMR1            equ	14	;# 
   152     000E                     TMR1L           equ	14	;# 
   153     000F                     TMR1H           equ	15	;# 
   154     0010                     T1CON           equ	16	;# 
   155     0011                     TMR2            equ	17	;# 
   156     0012                     T2CON           equ	18	;# 
   157     0013                     SSPBUF          equ	19	;# 
   158     0014                     SSPCON          equ	20	;# 
   159     0015                     CCPR1           equ	21	;# 
   160     0015                     CCPR1L          equ	21	;# 
   161     0016                     CCPR1H          equ	22	;# 
   162     0017                     CCP1CON         equ	23	;# 
   163     0018                     RCSTA           equ	24	;# 
   164     0019                     TXREG           equ	25	;# 
   165     001A                     RCREG           equ	26	;# 
   166     001B                     CCPR2           equ	27	;# 
   167     001B                     CCPR2L          equ	27	;# 
   168     001C                     CCPR2H          equ	28	;# 
   169     001D                     CCP2CON         equ	29	;# 
   170     001E                     ADRESH          equ	30	;# 
   171     001F                     ADCON0          equ	31	;# 
   172     0081                     OPTION_REG      equ	129	;# 
   173     0085                     TRISA           equ	133	;# 
   174     0086                     TRISB           equ	134	;# 
   175     0087                     TRISC           equ	135	;# 
   176     0088                     TRISD           equ	136	;# 
   177     0089                     TRISE           equ	137	;# 
   178     008C                     PIE1            equ	140	;# 
   179     008D                     PIE2            equ	141	;# 
   180     008E                     PCON            equ	142	;# 
   181     0091                     SSPCON2         equ	145	;# 
   182     0092                     PR2             equ	146	;# 
   183     0093                     SSPADD          equ	147	;# 
   184     0094                     SSPSTAT         equ	148	;# 
   185     0098                     TXSTA           equ	152	;# 
   186     0099                     SPBRG           equ	153	;# 
   187     009E                     ADRESL          equ	158	;# 
   188     009F                     ADCON1          equ	159	;# 
   189     010C                     EEDATA          equ	268	;# 
   190     010D                     EEADR           equ	269	;# 
   191     010E                     EEDATH          equ	270	;# 
   192     010F                     EEADRH          equ	271	;# 
   193     018C                     EECON1          equ	396	;# 
   194     018D                     EECON2          equ	397	;# 
   195                           
   196                           	psect	idataBANK0
   197     0246                     __pidataBANK0:
   198                           
   199                           ;initializer for _tecla_anterior
   200     0246  34FF               	retlw	255
   201     0006                     _PORTBbits      set	6
   202     0007                     _PORTCbits      set	7
   203     0009                     _PORTEbits      set	9
   204     0008                     _PORTD          set	8
   205     0086                     _TRISB          set	134
   206     0087                     _TRISC          set	135
   207     0088                     _TRISD          set	136
   208     0089                     _TRISE          set	137
   209                           
   210                           	psect	strings
   211     0003                     __pstrings:
   212     0003                     stringtab:
   213     0003                     __stringtab:
   214                           
   215                           ;	String table - string pointers are 1 byte each
   216     0003  1BFF               	btfsc	btemp+1,7
   217     0004  280D               	ljmp	stringcode
   218     0005  1383               	bcf	3,7
   219     0006  187F               	btfsc	btemp+1,0
   220     0007  1783               	bsf	3,7
   221     0008  0800               	movf	0,w
   222     0009  0A84               	incf	4,f
   223     000A  1903               	skipnz
   224     000B  0AFF               	incf	btemp+1,f
   225     000C  0008               	return
   226     000D                     stringcode:
   227     000D                     stringdir:
   228     000D  3000               	movlw	high stringdir
   229     000E  008A               	movwf	10
   230     000F  0804               	movf	4,w
   231     0010  0A84               	incf	4,f
   232     0011  0782               	addwf	2,f
   233     0012                     __stringbase:
   234     0012  3400               	retlw	0
   235     0013                     __end_of__stringtab:
   236     0013                     STR_2:
   237     0013  3443               	retlw	67	;'C'
   238     0014  346F               	retlw	111	;'o'
   239     0015  346E               	retlw	110	;'n'
   240     0016  3474               	retlw	116	;'t'
   241     0017  3461               	retlw	97	;'a'
   242     0018  3464               	retlw	100	;'d'
   243     0019  346F               	retlw	111	;'o'
   244     001A  3472               	retlw	114	;'r'
   245     001B  3420               	retlw	32	;' '
   246     001C  3463               	retlw	99	;'c'
   247     001D  346C               	retlw	108	;'l'
   248     001E  3469               	retlw	105	;'i'
   249     001F  3471               	retlw	113	;'q'
   250     0020  3475               	retlw	117	;'u'
   251     0021  3465               	retlw	101	;'e'
   252     0022  3473               	retlw	115	;'s'
   253     0023  3400               	retlw	0
   254     0024                     STR_1:
   255     0024  344E               	retlw	78	;'N'
   256     0025  343A               	retlw	58	;':'
   257     0026  3425               	retlw	37	;'%'
   258     0027  3430               	retlw	48	;'0'
   259     0028  3434               	retlw	52	;'4'
   260     0029  3464               	retlw	100	;'d'
   261     002A  3400               	retlw	0
   262                           
   263                           	psect	cinit
   264     07EC                     start_initialization:	
   265                           ; #config settings
   266                           
   267     07EC                     __initialization:
   268                           
   269                           ; Initialize objects allocated to BANK0
   270     07EC  120A  118A  2246  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   271     07F1  00EF               	movwf	__pdataBANK0& (0+127)
   272                           
   273                           ; Clear objects allocated to BANK1
   274     07F2  1383               	bcf	3,7	;select IRP bank0
   275     07F3  30A0               	movlw	low __pbssBANK1
   276     07F4  0084               	movwf	4
   277     07F5  30C6               	movlw	low (__pbssBANK1+38)
   278     07F6  120A  118A  2247  120A  118A  	fcall	clear_ram0
   279                           
   280                           ; Clear objects allocated to BANK0
   281     07FB  01EE               	clrf	__pbssBANK0& (0+127)
   282     07FC                     end_of_initialization:	
   283                           ;End of C runtime variable initialization code
   284                           
   285     07FC                     __end_of__initialization:
   286     07FC  0183               	clrf	3
   287     07FD  120A  118A  2BA1   	ljmp	_main	;jump to C main() function
   288                           
   289                           	psect	bssBANK0
   290     006E                     __pbssBANK0:
   291     006E                     _flags:
   292     006E                     	ds	1
   293                           
   294                           	psect	dataBANK0
   295     006F                     __pdataBANK0:
   296     006F                     _tecla_anterior:
   297     006F                     	ds	1
   298                           
   299                           	psect	bssBANK1
   300     00A0                     __pbssBANK1:
   301     00A0                     _width:
   302     00A0                     	ds	2
   303     00A2                     _prec:
   304     00A2                     	ds	2
   305     00A4                     _contador:
   306     00A4                     	ds	2
   307     00A6                     _dbuf:
   308     00A6                     	ds	32
   309                           
   310                           	psect	clrtext
   311     0247                     clear_ram0:	
   312                           ;	Called with FSR containing the base address, and
   313                           ;	W with the last address+1
   314                           
   315     0247  0064               	clrwdt	;clear the watchdog before getting into this loop
   316     0248                     clrloop0:
   317     0248  0180               	clrf	0	;clear RAM location pointed to by FSR
   318     0249  0A84               	incf	4,f	;increment pointer
   319     024A  0604               	xorwf	4,w	;XOR with final address
   320     024B  1903               	btfsc	3,2	;have we reached the end yet?
   321     024C  3400               	retlw	0	;all done for this memory range, return
   322     024D  0604               	xorwf	4,w	;XOR again to restore value
   323     024E  2A48               	goto	clrloop0	;do the next byte
   324                           
   325                           	psect	cstackCOMMON
   326     0070                     __pcstackCOMMON:
   327     0070                     ?_putch:
   328     0070                     ?_lcd_data:	
   329                           ; 1 bytes @ 0x0
   330                           
   331     0070                     ?_lcd_command:	
   332                           ; 1 bytes @ 0x0
   333                           
   334     0070                     ?_lcd_initialise:	
   335                           ; 1 bytes @ 0x0
   336                           
   337     0070                     ?_debounce:	
   338                           ; 1 bytes @ 0x0
   339                           
   340     0070                     ?_teclado:	
   341                           ; 1 bytes @ 0x0
   342                           
   343     0070                     ?_atualiza_lcd:	
   344                           ; 1 bytes @ 0x0
   345                           
   346     0070                     ?_main:	
   347                           ; 1 bytes @ 0x0
   348                           
   349     0070                     ?_fputc:	
   350                           ; 1 bytes @ 0x0
   351                           
   352     0070                     ?___wmul:	
   353                           ; 2 bytes @ 0x0
   354                           
   355     0070                     ?___awdiv:	
   356                           ; 2 bytes @ 0x0
   357                           
   358     0070                     ?___awmod:	
   359                           ; 2 bytes @ 0x0
   360                           
   361     0070                     teclado@tecla:	
   362                           ; 2 bytes @ 0x0
   363                           
   364     0070                     putch@c:	
   365                           ; 1 bytes @ 0x0
   366                           
   367     0070                     ___wmul@multiplier:	
   368                           ; 1 bytes @ 0x0
   369                           
   370     0070                     ___awdiv@divisor:	
   371                           ; 2 bytes @ 0x0
   372                           
   373     0070                     ___awmod@divisor:	
   374                           ; 2 bytes @ 0x0
   375                           
   376     0070                     fputc@c:	
   377                           ; 2 bytes @ 0x0
   378                           
   379     0070                     ??_putch:	
   380                           ; 2 bytes @ 0x0
   381                           
   382     0070                     ??_lcd_data:	
   383                           ; 1 bytes @ 0x0
   384                           
   385     0070                     ??_lcd_command:	
   386                           ; 1 bytes @ 0x0
   387                           
   388     0070                     ??_debounce:	
   389                           ; 1 bytes @ 0x0
   390                           
   391     0070                     ??_teclado:	
   392                           ; 1 bytes @ 0x0
   393                           
   394                           
   395                           ; 1 bytes @ 0x0
   396     0070                     	ds	2
   397     0072                     lcd_data@data:
   398     0072                     lcd_command@cmd:	
   399                           ; 1 bytes @ 0x2
   400                           
   401     0072                     ___wmul@multiplicand:	
   402                           ; 1 bytes @ 0x2
   403                           
   404     0072                     ___awdiv@dividend:	
   405                           ; 2 bytes @ 0x2
   406                           
   407     0072                     ___awmod@dividend:	
   408                           ; 2 bytes @ 0x2
   409                           
   410     0072                     fputc@fp:	
   411                           ; 2 bytes @ 0x2
   412                           
   413                           
   414                           ; 2 bytes @ 0x2
   415     0072                     	ds	1
   416     0073                     ?_lcd_string:
   417     0073                     lcd_string@str:	
   418                           ; 1 bytes @ 0x3
   419                           
   420     0073                     ??_lcd_initialise:	
   421                           ; 2 bytes @ 0x3
   422                           
   423                           
   424                           ; 1 bytes @ 0x3
   425     0073                     	ds	1
   426     0074                     ___awdiv@counter:
   427     0074                     ___awmod@counter:	
   428                           ; 1 bytes @ 0x4
   429                           
   430     0074                     ___wmul@product:	
   431                           ; 1 bytes @ 0x4
   432                           
   433     0074                     ??_fputc:	
   434                           ; 2 bytes @ 0x4
   435                           
   436     0074                     ??___wmul:	
   437                           ; 1 bytes @ 0x4
   438                           
   439     0074                     ??___awdiv:	
   440                           ; 1 bytes @ 0x4
   441                           
   442     0074                     ??___awmod:	
   443                           ; 1 bytes @ 0x4
   444                           
   445                           
   446                           ; 1 bytes @ 0x4
   447     0074                     	ds	1
   448     0075                     ___awdiv@sign:
   449     0075                     ___awmod@sign:	
   450                           ; 1 bytes @ 0x5
   451                           
   452     0075                     ??_lcd_string:	
   453                           ; 1 bytes @ 0x5
   454                           
   455                           
   456                           ; 1 bytes @ 0x5
   457     0075                     	ds	1
   458     0076                     ?_abs:
   459     0076                     ?_read_prec_or_width:	
   460                           ; 2 bytes @ 0x6
   461                           
   462     0076                     read_prec_or_width@fmt:	
   463                           ; 2 bytes @ 0x6
   464                           
   465     0076                     ___awdiv@quotient:	
   466                           ; 1 bytes @ 0x6
   467                           
   468     0076                     abs@a:	
   469                           ; 2 bytes @ 0x6
   470                           
   471                           
   472                           ; 2 bytes @ 0x6
   473     0076                     	ds	1
   474     0077                     read_prec_or_width@ap:
   475                           
   476                           ; 1 bytes @ 0x7
   477     0077                     	ds	1
   478     0078                     read_prec_or_width@c:
   479     0078                     ??_abs:	
   480                           ; 1 bytes @ 0x8
   481                           
   482     0078                     ??_read_prec_or_width:	
   483                           ; 1 bytes @ 0x8
   484                           
   485                           
   486                           ; 1 bytes @ 0x8
   487     0078                     	ds	1
   488     0079                     read_prec_or_width@n:
   489                           
   490                           ; 2 bytes @ 0x9
   491     0079                     	ds	4
   492     007D                     ??_pad:
   493                           
   494                           ; 1 bytes @ 0xD
   495     007D                     	ds	1
   496     007E                     ??_vfprintf:
   497     007E                     ??_atualiza_lcd:	
   498                           ; 1 bytes @ 0xE
   499                           
   500     007E                     ??_main:	
   501                           ; 1 bytes @ 0xE
   502                           
   503     007E                     ??_dtoa:	
   504                           ; 1 bytes @ 0xE
   505                           
   506                           
   507                           	psect	cstackBANK0
   508     0020                     __pcstackBANK0:	
   509                           ; 1 bytes @ 0xE
   510                           
   511     0020                     ?_fputs:
   512     0020                     fputs@s:	
   513                           ; 2 bytes @ 0x0
   514                           
   515                           
   516                           ; 1 bytes @ 0x0
   517     0020                     	ds	1
   518     0021                     fputs@fp:
   519                           
   520                           ; 2 bytes @ 0x1
   521     0021                     	ds	2
   522     0023                     ??_fputs:
   523                           
   524                           ; 1 bytes @ 0x3
   525     0023                     	ds	2
   526     0025                     fputs@c:
   527                           
   528                           ; 1 bytes @ 0x5
   529     0025                     	ds	1
   530     0026                     fputs@i:
   531                           
   532                           ; 2 bytes @ 0x6
   533     0026                     	ds	2
   534     0028                     ?_pad:
   535     0028                     pad@fp:	
   536                           ; 1 bytes @ 0x8
   537                           
   538                           
   539                           ; 2 bytes @ 0x8
   540     0028                     	ds	2
   541     002A                     pad@buf:
   542                           
   543                           ; 1 bytes @ 0xA
   544     002A                     	ds	1
   545     002B                     pad@p:
   546                           
   547                           ; 2 bytes @ 0xB
   548     002B                     	ds	2
   549     002D                     pad@i:
   550                           
   551                           ; 2 bytes @ 0xD
   552     002D                     	ds	2
   553     002F                     ?_dtoa:
   554     002F                     dtoa@fp:	
   555                           ; 1 bytes @ 0xF
   556                           
   557                           
   558                           ; 2 bytes @ 0xF
   559     002F                     	ds	2
   560     0031                     dtoa@d:
   561                           
   562                           ; 2 bytes @ 0x11
   563     0031                     	ds	2
   564     0033                     _dtoa$660:
   565                           
   566                           ; 2 bytes @ 0x13
   567     0033                     	ds	2
   568     0035                     dtoa@p:
   569                           
   570                           ; 1 bytes @ 0x15
   571     0035                     	ds	1
   572     0036                     dtoa@w:
   573                           
   574                           ; 2 bytes @ 0x16
   575     0036                     	ds	2
   576     0038                     dtoa@s:
   577                           
   578                           ; 1 bytes @ 0x18
   579     0038                     	ds	1
   580     0039                     dtoa@i:
   581                           
   582                           ; 2 bytes @ 0x19
   583     0039                     	ds	2
   584     003B                     ?_vfpfcnvrt:
   585     003B                     vfpfcnvrt@fp:	
   586                           ; 1 bytes @ 0x1B
   587                           
   588                           
   589                           ; 2 bytes @ 0x1B
   590     003B                     	ds	2
   591     003D                     vfpfcnvrt@fmt:
   592                           
   593                           ; 1 bytes @ 0x1D
   594     003D                     	ds	1
   595     003E                     vfpfcnvrt@ap:
   596                           
   597                           ; 1 bytes @ 0x1E
   598     003E                     	ds	1
   599     003F                     ??_vfpfcnvrt:
   600                           
   601                           ; 1 bytes @ 0x1F
   602     003F                     	ds	2
   603     0041                     vfpfcnvrt@convarg:
   604                           
   605                           ; 4 bytes @ 0x21
   606     0041                     	ds	4
   607     0045                     vfpfcnvrt@done:
   608                           
   609                           ; 1 bytes @ 0x25
   610     0045                     	ds	1
   611     0046                     vfpfcnvrt@cp:
   612                           
   613                           ; 1 bytes @ 0x26
   614     0046                     	ds	1
   615     0047                     ?_vfprintf:
   616     0047                     vfprintf@fp:	
   617                           ; 2 bytes @ 0x27
   618                           
   619                           
   620                           ; 2 bytes @ 0x27
   621     0047                     	ds	2
   622     0049                     vfprintf@fmt:
   623                           
   624                           ; 1 bytes @ 0x29
   625     0049                     	ds	1
   626     004A                     vfprintf@ap:
   627                           
   628                           ; 1 bytes @ 0x2A
   629     004A                     	ds	1
   630     004B                     vfprintf@cfmt:
   631                           
   632                           ; 1 bytes @ 0x2B
   633     004B                     	ds	1
   634     004C                     ?_sprintf:
   635     004C                     sprintf@s:	
   636                           ; 2 bytes @ 0x2C
   637                           
   638                           
   639                           ; 1 bytes @ 0x2C
   640     004C                     	ds	1
   641     004D                     sprintf@fmt:
   642                           
   643                           ; 1 bytes @ 0x2D
   644     004D                     	ds	3
   645     0050                     ??_sprintf:
   646                           
   647                           ; 1 bytes @ 0x30
   648     0050                     	ds	1
   649     0051                     sprintf@ap:
   650                           
   651                           ; 1 bytes @ 0x31
   652     0051                     	ds	1
   653     0052                     sprintf@f:
   654                           
   655                           ; 11 bytes @ 0x32
   656     0052                     	ds	11
   657     005D                     atualiza_lcd@buffer:
   658                           
   659                           ; 16 bytes @ 0x3D
   660     005D                     	ds	16
   661     006D                     main@tecla:
   662                           
   663                           ; 1 bytes @ 0x4D
   664     006D                     	ds	1
   665                           
   666                           	psect	maintext
   667     03A1                     __pmaintext:	
   668 ;;
   669 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   670 ;;
   671 ;; *************** function _main *****************
   672 ;; Defined at:
   673 ;;		line 102 in file "atividade7.c"
   674 ;; Parameters:    Size  Location     Type
   675 ;;		None
   676 ;; Auto vars:     Size  Location     Type
   677 ;;  tecla           1   77[BANK0 ] unsigned char 
   678 ;; Return value:  Size  Location     Type
   679 ;;                  1    wreg      void 
   680 ;; Registers used:
   681 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   682 ;; Tracked objects:
   683 ;;		On entry : B00/0
   684 ;;		On exit  : 0/0
   685 ;;		Unchanged: 0/0
   686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   687 ;;      Params:         0       0       0       0       0
   688 ;;      Locals:         0       1       0       0       0
   689 ;;      Temps:          0       0       0       0       0
   690 ;;      Totals:         0       1       0       0       0
   691 ;;Total ram usage:        1 bytes
   692 ;; Hardware stack levels required when called: 9
   693 ;; This function calls:
   694 ;;		_atualiza_lcd
   695 ;;		_debounce
   696 ;;		_lcd_initialise
   697 ;;		_teclado
   698 ;; This function is called by:
   699 ;;		Startup code after reset
   700 ;; This function uses a non-reentrant model
   701 ;;
   702                           
   703     03A1                     _main:	
   704                           ;psect for function _main
   705                           
   706     03A1                     l1468:	
   707                           ;incstack = 0
   708 ;; hardware stack exceeded
   709                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   710                           
   711                           
   712                           ;atividade7.c: 103:     TRISE = 0x00;
   713     03A1  1683               	bsf	3,5	;RP0=1, select bank1
   714     03A2  1303               	bcf	3,6	;RP1=0, select bank1
   715     03A3  0189               	clrf	9	;volatile
   716                           
   717                           ;atividade7.c: 104:     TRISD = 0x00;
   718     03A4  0188               	clrf	8	;volatile
   719                           
   720                           ;atividade7.c: 105:     TRISC = 0x00;
   721     03A5  0187               	clrf	7	;volatile
   722     03A6                     l1470:
   723                           
   724                           ;atividade7.c: 106:     TRISB = 0xFF;
   725     03A6  30FF               	movlw	255
   726     03A7  0086               	movwf	6	;volatile
   727     03A8                     l1472:
   728                           
   729                           ;atividade7.c: 107:     lcd_initialise();
   730     03A8  120A  118A  2296  120A  118A  	fcall	_lcd_initialise
   731     03AD                     l1474:
   732                           
   733                           ;atividade7.c: 108:     atualiza_lcd();
   734     03AD  120A  118A  236B  120A  118A  	fcall	_atualiza_lcd
   735     03B2                     l1476:
   736                           
   737                           ;atividade7.c: 111:         unsigned char tecla = teclado();
   738     03B2  120A  118A  2552  120A  118A  	fcall	_teclado
   739     03B7  1283               	bcf	3,5	;RP0=0, select bank0
   740     03B8  1303               	bcf	3,6	;RP1=0, select bank0
   741     03B9  00ED               	movwf	main@tecla
   742     03BA                     l1478:
   743                           
   744                           ;atividade7.c: 113:         if (tecla != 0xFF) {
   745     03BA  0A6D               	incf	main@tecla,w
   746     03BB  1903               	btfsc	3,2
   747     03BC  2BBE               	goto	u1431
   748     03BD  2BBF               	goto	u1430
   749     03BE                     u1431:
   750     03BE  2BB2               	goto	l1476
   751     03BF                     u1430:
   752     03BF                     l1480:
   753                           
   754                           ;atividade7.c: 114:             debounce();
   755     03BF  120A  118A  224F  120A  118A  	fcall	_debounce
   756     03C4                     l1482:
   757                           
   758                           ;atividade7.c: 116:             if (tecla == 9) {
   759     03C4  3009               	movlw	9
   760     03C5  1283               	bcf	3,5	;RP0=0, select bank0
   761     03C6  1303               	bcf	3,6	;RP1=0, select bank0
   762     03C7  066D               	xorwf	main@tecla,w
   763     03C8  1D03               	btfss	3,2
   764     03C9  2BCB               	goto	u1441
   765     03CA  2BCC               	goto	u1440
   766     03CB                     u1441:
   767     03CB  2BD5               	goto	l1486
   768     03CC                     u1440:
   769     03CC                     l1484:
   770                           
   771                           ;atividade7.c: 117:                 contador++;
   772     03CC  3001               	movlw	1
   773     03CD  1683               	bsf	3,5	;RP0=1, select bank1
   774     03CE  1303               	bcf	3,6	;RP1=0, select bank1
   775     03CF  07A4               	addwf	_contador^(0+128),f
   776     03D0  1803               	skipnc
   777     03D1  0AA5               	incf	(_contador+1)^(0+128),f
   778     03D2  3000               	movlw	0
   779     03D3  07A5               	addwf	(_contador+1)^(0+128),f
   780                           
   781                           ;atividade7.c: 118:             }
   782     03D4  2BDF               	goto	l1490
   783     03D5                     l1486:
   784     03D5  3008               	movlw	8
   785     03D6  066D               	xorwf	main@tecla,w
   786     03D7  1D03               	btfss	3,2
   787     03D8  2BDA               	goto	u1451
   788     03D9  2BDB               	goto	u1450
   789     03DA                     u1451:
   790     03DA  2BDF               	goto	l1490
   791     03DB                     u1450:
   792     03DB                     l1488:
   793                           
   794                           ;atividade7.c: 120:                 contador = 0;
   795     03DB  1683               	bsf	3,5	;RP0=1, select bank1
   796     03DC  1303               	bcf	3,6	;RP1=0, select bank1
   797     03DD  01A4               	clrf	_contador^(0+128)
   798     03DE  01A5               	clrf	(_contador+1)^(0+128)
   799     03DF                     l1490:
   800                           
   801                           ;atividade7.c: 127:             atualiza_lcd();
   802     03DF  120A  118A  236B  120A  118A  	fcall	_atualiza_lcd
   803     03E4                     l1492:	
   804                           ;atividade7.c: 129:             while (teclado() != 0xFF);
   805                           
   806     03E4  120A  118A  2552  120A  118A  	fcall	_teclado
   807     03E9  3AFF               	xorlw	255
   808     03EA  1D03               	skipz
   809     03EB  2BED               	goto	u1461
   810     03EC  2BEE               	goto	u1460
   811     03ED                     u1461:
   812     03ED  2BE4               	goto	l1492
   813     03EE                     u1460:
   814     03EE  2BB2               	goto	l1476
   815     03EF  120A  118A  2800   	ljmp	start
   816     03F2                     __end_of_main:
   817                           
   818                           	psect	text1
   819     0552                     __ptext1:	
   820 ;; *************** function _teclado *****************
   821 ;; Defined at:
   822 ;;		line 62 in file "atividade7.c"
   823 ;; Parameters:    Size  Location     Type
   824 ;;		None
   825 ;; Auto vars:     Size  Location     Type
   826 ;;  tecla           1    0[COMMON] unsigned char 
   827 ;; Return value:  Size  Location     Type
   828 ;;                  1    wreg      unsigned char 
   829 ;; Registers used:
   830 ;;		wreg, status,2
   831 ;; Tracked objects:
   832 ;;		On entry : 0/0
   833 ;;		On exit  : 0/0
   834 ;;		Unchanged: 0/0
   835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   836 ;;      Params:         0       0       0       0       0
   837 ;;      Locals:         1       0       0       0       0
   838 ;;      Temps:          0       0       0       0       0
   839 ;;      Totals:         1       0       0       0       0
   840 ;;Total ram usage:        1 bytes
   841 ;; Hardware stack levels used: 1
   842 ;; This function calls:
   843 ;;		Nothing
   844 ;; This function is called by:
   845 ;;		_main
   846 ;; This function uses a non-reentrant model
   847 ;;
   848                           
   849     0552                     _teclado:	
   850                           ;psect for function _teclado
   851                           
   852     0552                     l1420:	
   853                           ;incstack = 0
   854                           ; Regs used in _teclado: [wreg+status,2]
   855                           
   856                           
   857                           ;atividade7.c: 63:     unsigned char tecla = 0xFF;
   858     0552  30FF               	movlw	255
   859     0553  00F0               	movwf	teclado@tecla
   860                           
   861                           ;atividade7.c: 65:     PORTCbits.RC0 = 0; PORTCbits.RC1 = 1; PORTCbits.RC2 = 1; PORTCbit
      +                          s.RC3 = 1;
   862     0554  1283               	bcf	3,5	;RP0=0, select bank0
   863     0555  1303               	bcf	3,6	;RP1=0, select bank0
   864     0556  1007               	bcf	7,0	;volatile
   865     0557  1487               	bsf	7,1	;volatile
   866     0558  1507               	bsf	7,2	;volatile
   867     0559  1587               	bsf	7,3	;volatile
   868                           
   869                           ;atividade7.c: 66:     if (PORTBbits.RB0 == 0) tecla = 0;
   870     055A  1806               	btfsc	6,0	;volatile
   871     055B  2D5D               	goto	u1271
   872     055C  2D5E               	goto	u1270
   873     055D                     u1271:
   874     055D  2D5F               	goto	l1424
   875     055E                     u1270:
   876     055E                     l1422:
   877     055E  01F0               	clrf	teclado@tecla
   878     055F                     l1424:
   879                           
   880                           ;atividade7.c: 67:     if (PORTBbits.RB1 == 0) tecla = 1;
   881     055F  1886               	btfsc	6,1	;volatile
   882     0560  2D62               	goto	u1281
   883     0561  2D63               	goto	u1280
   884     0562                     u1281:
   885     0562  2D65               	goto	l46
   886     0563                     u1280:
   887     0563                     l1426:
   888     0563  3001               	movlw	1
   889     0564  00F0               	movwf	teclado@tecla
   890     0565                     l46:
   891                           
   892                           ;atividade7.c: 68:     if (PORTBbits.RB2 == 0) tecla = 2;
   893     0565  1906               	btfsc	6,2	;volatile
   894     0566  2D68               	goto	u1291
   895     0567  2D69               	goto	u1290
   896     0568                     u1291:
   897     0568  2D6B               	goto	l47
   898     0569                     u1290:
   899     0569                     l1428:
   900     0569  3002               	movlw	2
   901     056A  00F0               	movwf	teclado@tecla
   902     056B                     l47:
   903                           
   904                           ;atividade7.c: 69:     if (PORTBbits.RB3 == 0) tecla = 3;
   905     056B  1986               	btfsc	6,3	;volatile
   906     056C  2D6E               	goto	u1301
   907     056D  2D6F               	goto	u1300
   908     056E                     u1301:
   909     056E  2D71               	goto	l48
   910     056F                     u1300:
   911     056F                     l1430:
   912     056F  3003               	movlw	3
   913     0570  00F0               	movwf	teclado@tecla
   914     0571                     l48:
   915                           
   916                           ;atividade7.c: 71:     PORTCbits.RC0 = 1; PORTCbits.RC1 = 0; PORTCbits.RC2 = 1; PORTCbit
      +                          s.RC3 = 1;
   917     0571  1407               	bsf	7,0	;volatile
   918     0572  1087               	bcf	7,1	;volatile
   919     0573  1507               	bsf	7,2	;volatile
   920     0574  1587               	bsf	7,3	;volatile
   921                           
   922                           ;atividade7.c: 72:     if (PORTBbits.RB0 == 0) tecla = 4;
   923     0575  1806               	btfsc	6,0	;volatile
   924     0576  2D78               	goto	u1311
   925     0577  2D79               	goto	u1310
   926     0578                     u1311:
   927     0578  2D7B               	goto	l49
   928     0579                     u1310:
   929     0579                     l1432:
   930     0579  3004               	movlw	4
   931     057A  00F0               	movwf	teclado@tecla
   932     057B                     l49:
   933                           
   934                           ;atividade7.c: 73:     if (PORTBbits.RB1 == 0) tecla = 5;
   935     057B  1886               	btfsc	6,1	;volatile
   936     057C  2D7E               	goto	u1321
   937     057D  2D7F               	goto	u1320
   938     057E                     u1321:
   939     057E  2D81               	goto	l50
   940     057F                     u1320:
   941     057F                     l1434:
   942     057F  3005               	movlw	5
   943     0580  00F0               	movwf	teclado@tecla
   944     0581                     l50:
   945                           
   946                           ;atividade7.c: 74:     if (PORTBbits.RB2 == 0) tecla = 6;
   947     0581  1906               	btfsc	6,2	;volatile
   948     0582  2D84               	goto	u1331
   949     0583  2D85               	goto	u1330
   950     0584                     u1331:
   951     0584  2D87               	goto	l51
   952     0585                     u1330:
   953     0585                     l1436:
   954     0585  3006               	movlw	6
   955     0586  00F0               	movwf	teclado@tecla
   956     0587                     l51:
   957                           
   958                           ;atividade7.c: 75:     if (PORTBbits.RB3 == 0) tecla = 7;
   959     0587  1986               	btfsc	6,3	;volatile
   960     0588  2D8A               	goto	u1341
   961     0589  2D8B               	goto	u1340
   962     058A                     u1341:
   963     058A  2D8D               	goto	l52
   964     058B                     u1340:
   965     058B                     l1438:
   966     058B  3007               	movlw	7
   967     058C  00F0               	movwf	teclado@tecla
   968     058D                     l52:
   969                           
   970                           ;atividade7.c: 77:     PORTCbits.RC0 = 1; PORTCbits.RC1 = 1; PORTCbits.RC2 = 0; PORTCbit
      +                          s.RC3 = 1;
   971     058D  1407               	bsf	7,0	;volatile
   972     058E  1487               	bsf	7,1	;volatile
   973     058F  1107               	bcf	7,2	;volatile
   974     0590  1587               	bsf	7,3	;volatile
   975                           
   976                           ;atividade7.c: 78:     if (PORTBbits.RB0 == 0) tecla = 8;
   977     0591  1806               	btfsc	6,0	;volatile
   978     0592  2D94               	goto	u1351
   979     0593  2D95               	goto	u1350
   980     0594                     u1351:
   981     0594  2D97               	goto	l53
   982     0595                     u1350:
   983     0595                     l1440:
   984     0595  3008               	movlw	8
   985     0596  00F0               	movwf	teclado@tecla
   986     0597                     l53:
   987                           
   988                           ;atividade7.c: 79:     if (PORTBbits.RB1 == 0) tecla = 9;
   989     0597  1886               	btfsc	6,1	;volatile
   990     0598  2D9A               	goto	u1361
   991     0599  2D9B               	goto	u1360
   992     059A                     u1361:
   993     059A  2D9D               	goto	l54
   994     059B                     u1360:
   995     059B                     l1442:
   996     059B  3009               	movlw	9
   997     059C  00F0               	movwf	teclado@tecla
   998     059D                     l54:
   999                           
  1000                           ;atividade7.c: 80:     if (PORTBbits.RB2 == 0) tecla = 10;
  1001     059D  1906               	btfsc	6,2	;volatile
  1002     059E  2DA0               	goto	u1371
  1003     059F  2DA1               	goto	u1370
  1004     05A0                     u1371:
  1005     05A0  2DA3               	goto	l55
  1006     05A1                     u1370:
  1007     05A1                     l1444:
  1008     05A1  300A               	movlw	10
  1009     05A2  00F0               	movwf	teclado@tecla
  1010     05A3                     l55:
  1011                           
  1012                           ;atividade7.c: 81:     if (PORTBbits.RB3 == 0) tecla = 11;
  1013     05A3  1986               	btfsc	6,3	;volatile
  1014     05A4  2DA6               	goto	u1381
  1015     05A5  2DA7               	goto	u1380
  1016     05A6                     u1381:
  1017     05A6  2DA9               	goto	l56
  1018     05A7                     u1380:
  1019     05A7                     l1446:
  1020     05A7  300B               	movlw	11
  1021     05A8  00F0               	movwf	teclado@tecla
  1022     05A9                     l56:
  1023                           
  1024                           ;atividade7.c: 83:     PORTCbits.RC0 = 1; PORTCbits.RC1 = 1; PORTCbits.RC2 = 1; PORTCbit
      +                          s.RC3 = 0;
  1025     05A9  1407               	bsf	7,0	;volatile
  1026     05AA  1487               	bsf	7,1	;volatile
  1027     05AB  1507               	bsf	7,2	;volatile
  1028     05AC  1187               	bcf	7,3	;volatile
  1029                           
  1030                           ;atividade7.c: 84:     if (PORTBbits.RB0 == 0) tecla = 12;
  1031     05AD  1806               	btfsc	6,0	;volatile
  1032     05AE  2DB0               	goto	u1391
  1033     05AF  2DB1               	goto	u1390
  1034     05B0                     u1391:
  1035     05B0  2DB3               	goto	l57
  1036     05B1                     u1390:
  1037     05B1                     l1448:
  1038     05B1  300C               	movlw	12
  1039     05B2  00F0               	movwf	teclado@tecla
  1040     05B3                     l57:
  1041                           
  1042                           ;atividade7.c: 85:     if (PORTBbits.RB1 == 0) tecla = 13;
  1043     05B3  1886               	btfsc	6,1	;volatile
  1044     05B4  2DB6               	goto	u1401
  1045     05B5  2DB7               	goto	u1400
  1046     05B6                     u1401:
  1047     05B6  2DB9               	goto	l58
  1048     05B7                     u1400:
  1049     05B7                     l1450:
  1050     05B7  300D               	movlw	13
  1051     05B8  00F0               	movwf	teclado@tecla
  1052     05B9                     l58:
  1053                           
  1054                           ;atividade7.c: 86:     if (PORTBbits.RB2 == 0) tecla = 14;
  1055     05B9  1906               	btfsc	6,2	;volatile
  1056     05BA  2DBC               	goto	u1411
  1057     05BB  2DBD               	goto	u1410
  1058     05BC                     u1411:
  1059     05BC  2DBF               	goto	l59
  1060     05BD                     u1410:
  1061     05BD                     l1452:
  1062     05BD  300E               	movlw	14
  1063     05BE  00F0               	movwf	teclado@tecla
  1064     05BF                     l59:
  1065                           
  1066                           ;atividade7.c: 87:     if (PORTBbits.RB3 == 0) tecla = 15;
  1067     05BF  1986               	btfsc	6,3	;volatile
  1068     05C0  2DC2               	goto	u1421
  1069     05C1  2DC3               	goto	u1420
  1070     05C2                     u1421:
  1071     05C2  2DC5               	goto	l1456
  1072     05C3                     u1420:
  1073     05C3                     l1454:
  1074     05C3  300F               	movlw	15
  1075     05C4  00F0               	movwf	teclado@tecla
  1076     05C5                     l1456:
  1077                           
  1078                           ;atividade7.c: 89:     return tecla;
  1079     05C5  0870               	movf	teclado@tecla,w
  1080     05C6                     l61:
  1081     05C6  0008               	return
  1082     05C7                     __end_of_teclado:
  1083                           
  1084                           	psect	text2
  1085     0296                     __ptext2:	
  1086 ;; *************** function _lcd_initialise *****************
  1087 ;; Defined at:
  1088 ;;		line 51 in file "atividade7.c"
  1089 ;; Parameters:    Size  Location     Type
  1090 ;;		None
  1091 ;; Auto vars:     Size  Location     Type
  1092 ;;		None
  1093 ;; Return value:  Size  Location     Type
  1094 ;;                  1    wreg      void 
  1095 ;; Registers used:
  1096 ;;		wreg, status,2, status,0, pclath, cstack
  1097 ;; Tracked objects:
  1098 ;;		On entry : 0/0
  1099 ;;		On exit  : 0/0
  1100 ;;		Unchanged: 0/0
  1101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1102 ;;      Params:         0       0       0       0       0
  1103 ;;      Locals:         0       0       0       0       0
  1104 ;;      Temps:          0       0       0       0       0
  1105 ;;      Totals:         0       0       0       0       0
  1106 ;;Total ram usage:        0 bytes
  1107 ;; Hardware stack levels used: 1
  1108 ;; Hardware stack levels required when called: 1
  1109 ;; This function calls:
  1110 ;;		_lcd_command
  1111 ;; This function is called by:
  1112 ;;		_main
  1113 ;; This function uses a non-reentrant model
  1114 ;;
  1115                           
  1116     0296                     _lcd_initialise:	
  1117                           ;psect for function _lcd_initialise
  1118                           
  1119     0296                     l1416:	
  1120                           ;incstack = 0
  1121                           ; Regs used in _lcd_initialise: [wreg+status,2+status,0+pclath+cstack]
  1122                           
  1123                           
  1124                           ;atividade7.c: 52:     lcd_command(0x38);
  1125     0296  3038               	movlw	56
  1126     0297  120A  118A  226E  120A  118A  	fcall	_lcd_command
  1127                           
  1128                           ;atividade7.c: 53:     lcd_command(0x06);
  1129     029C  3006               	movlw	6
  1130     029D  120A  118A  226E  120A  118A  	fcall	_lcd_command
  1131                           
  1132                           ;atividade7.c: 54:     lcd_command(0x0C);
  1133     02A2  300C               	movlw	12
  1134     02A3  120A  118A  226E  120A  118A  	fcall	_lcd_command
  1135                           
  1136                           ;atividade7.c: 55:     lcd_command(0x01);
  1137     02A8  3001               	movlw	1
  1138     02A9  120A  118A  226E  120A  118A  	fcall	_lcd_command
  1139     02AE                     l39:
  1140     02AE  0008               	return
  1141     02AF                     __end_of_lcd_initialise:
  1142                           
  1143                           	psect	text3
  1144     024F                     __ptext3:	
  1145 ;; *************** function _debounce *****************
  1146 ;; Defined at:
  1147 ;;		line 58 in file "atividade7.c"
  1148 ;; Parameters:    Size  Location     Type
  1149 ;;		None
  1150 ;; Auto vars:     Size  Location     Type
  1151 ;;		None
  1152 ;; Return value:  Size  Location     Type
  1153 ;;                  1    wreg      void 
  1154 ;; Registers used:
  1155 ;;		wreg
  1156 ;; Tracked objects:
  1157 ;;		On entry : 0/0
  1158 ;;		On exit  : 0/0
  1159 ;;		Unchanged: 0/0
  1160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1161 ;;      Params:         0       0       0       0       0
  1162 ;;      Locals:         0       0       0       0       0
  1163 ;;      Temps:          3       0       0       0       0
  1164 ;;      Totals:         3       0       0       0       0
  1165 ;;Total ram usage:        3 bytes
  1166 ;; Hardware stack levels used: 1
  1167 ;; This function calls:
  1168 ;;		Nothing
  1169 ;; This function is called by:
  1170 ;;		_main
  1171 ;; This function uses a non-reentrant model
  1172 ;;
  1173                           
  1174     024F                     _debounce:	
  1175                           ;psect for function _debounce
  1176                           
  1177     024F                     l1418:	
  1178                           ;incstack = 0
  1179                           ; Regs used in _debounce: [wreg]
  1180                           
  1181                           
  1182                           ;atividade7.c: 59:     _delay((unsigned long)((50)*(20000000/4000.0)));
  1183     024F  3002               	movlw	2
  1184     0250  00F2               	movwf	??_debounce+2
  1185     0251  3045               	movlw	69
  1186     0252  00F1               	movwf	??_debounce+1
  1187     0253  30A9               	movlw	169
  1188     0254  00F0               	movwf	??_debounce
  1189     0255                     u1477:
  1190     0255  0BF0               	decfsz	??_debounce,f
  1191     0256  2A55               	goto	u1477
  1192     0257  0BF1               	decfsz	??_debounce+1,f
  1193     0258  2A55               	goto	u1477
  1194     0259  0BF2               	decfsz	??_debounce+2,f
  1195     025A  2A55               	goto	u1477
  1196     025B  2A5C               	nop2
  1197     025C                     l42:
  1198     025C  0008               	return
  1199     025D                     __end_of_debounce:
  1200                           
  1201                           	psect	text4
  1202     036B                     __ptext4:	
  1203 ;; *************** function _atualiza_lcd *****************
  1204 ;; Defined at:
  1205 ;;		line 92 in file "atividade7.c"
  1206 ;; Parameters:    Size  Location     Type
  1207 ;;		None
  1208 ;; Auto vars:     Size  Location     Type
  1209 ;;  buffer         16   61[BANK0 ] unsigned char [16]
  1210 ;; Return value:  Size  Location     Type
  1211 ;;                  1    wreg      void 
  1212 ;; Registers used:
  1213 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1214 ;; Tracked objects:
  1215 ;;		On entry : 0/0
  1216 ;;		On exit  : 0/0
  1217 ;;		Unchanged: 0/0
  1218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1219 ;;      Params:         0       0       0       0       0
  1220 ;;      Locals:         0      16       0       0       0
  1221 ;;      Temps:          0       0       0       0       0
  1222 ;;      Totals:         0      16       0       0       0
  1223 ;;Total ram usage:       16 bytes
  1224 ;; Hardware stack levels used: 1
  1225 ;; Hardware stack levels required when called: 8
  1226 ;; This function calls:
  1227 ;;		_lcd_command
  1228 ;;		_lcd_string
  1229 ;;		_sprintf
  1230 ;; This function is called by:
  1231 ;;		_main
  1232 ;; This function uses a non-reentrant model
  1233 ;;
  1234                           
  1235     036B                     _atualiza_lcd:	
  1236                           ;psect for function _atualiza_lcd
  1237                           
  1238     036B                     l1460:	
  1239                           ;incstack = 0
  1240 ;; hardware stack exceeded
  1241                           ; Regs used in _atualiza_lcd: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1242                           
  1243                           
  1244                           ;atividade7.c: 93:     char buffer[16];;atividade7.c: 94:     sprintf(buffer, "N:%04d", 
      +                          contador);
  1245     036B  305D               	movlw	(low (atualiza_lcd@buffer| 0))& (0+255)
  1246     036C  1283               	bcf	3,5	;RP0=0, select bank0
  1247     036D  1303               	bcf	3,6	;RP1=0, select bank0
  1248     036E  00CC               	movwf	sprintf@s
  1249     036F  3012               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1250     0370  00CD               	movwf	sprintf@fmt
  1251     0371  1683               	bsf	3,5	;RP0=1, select bank1
  1252     0372  1303               	bcf	3,6	;RP1=0, select bank1
  1253     0373  0825               	movf	(_contador+1)^(0+128),w
  1254     0374  1283               	bcf	3,5	;RP0=0, select bank0
  1255     0375  1303               	bcf	3,6	;RP1=0, select bank0
  1256     0376  00CF               	movwf	?_sprintf+3
  1257     0377  1683               	bsf	3,5	;RP0=1, select bank1
  1258     0378  1303               	bcf	3,6	;RP1=0, select bank1
  1259     0379  0824               	movf	_contador^(0+128),w
  1260     037A  1283               	bcf	3,5	;RP0=0, select bank0
  1261     037B  1303               	bcf	3,6	;RP1=0, select bank0
  1262     037C  00CE               	movwf	?_sprintf+2
  1263     037D  120A  118A  22D2  120A  118A  	fcall	_sprintf
  1264     0382                     l1462:
  1265                           
  1266                           ;atividade7.c: 96:     lcd_command(0x80);
  1267     0382  3080               	movlw	128
  1268     0383  120A  118A  226E  120A  118A  	fcall	_lcd_command
  1269     0388                     l1464:
  1270                           
  1271                           ;atividade7.c: 97:     lcd_string("Contador cliques");
  1272     0388  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1273     0389  00F3               	movwf	lcd_string@str
  1274     038A  3080               	movlw	128
  1275     038B  00F4               	movwf	lcd_string@str+1
  1276     038C  120A  118A  231A  120A  118A  	fcall	_lcd_string
  1277                           
  1278                           ;atividade7.c: 98:     lcd_command(0xC0);
  1279     0391  30C0               	movlw	192
  1280     0392  120A  118A  226E  120A  118A  	fcall	_lcd_command
  1281     0397                     l1466:
  1282                           
  1283                           ;atividade7.c: 99:     lcd_string(buffer);
  1284     0397  305D               	movlw	(low (atualiza_lcd@buffer| 0))& (0+255)
  1285     0398  00F3               	movwf	lcd_string@str
  1286     0399  3000               	movlw	0
  1287     039A  00F4               	movwf	lcd_string@str+1
  1288     039B  120A  118A  231A  120A  118A  	fcall	_lcd_string
  1289     03A0                     l64:
  1290     03A0  0008               	return
  1291     03A1                     __end_of_atualiza_lcd:
  1292                           
  1293                           	psect	text5
  1294     02D2                     __ptext5:	
  1295 ;; *************** function _sprintf *****************
  1296 ;; Defined at:
  1297 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_sprintf.c"
  1298 ;; Parameters:    Size  Location     Type
  1299 ;;  s               1   44[BANK0 ] PTR unsigned char 
  1300 ;;		 -> atualiza_lcd@buffer(16), 
  1301 ;;  fmt             1   45[BANK0 ] PTR const unsigned char 
  1302 ;;		 -> STR_1(7), 
  1303 ;; Auto vars:     Size  Location     Type
  1304 ;;  f              11   50[BANK0 ] struct _IO_FILE
  1305 ;;  ret             2    0        int 
  1306 ;;  ap              1   49[BANK0 ] PTR void [1]
  1307 ;;		 -> ?_sprintf(2), 
  1308 ;; Return value:  Size  Location     Type
  1309 ;;                  2   44[BANK0 ] int 
  1310 ;; Registers used:
  1311 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1312 ;; Tracked objects:
  1313 ;;		On entry : 0/0
  1314 ;;		On exit  : 0/0
  1315 ;;		Unchanged: 0/0
  1316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1317 ;;      Params:         0       4       0       0       0
  1318 ;;      Locals:         0      12       0       0       0
  1319 ;;      Temps:          0       1       0       0       0
  1320 ;;      Totals:         0      17       0       0       0
  1321 ;;Total ram usage:       17 bytes
  1322 ;; Hardware stack levels used: 1
  1323 ;; Hardware stack levels required when called: 7
  1324 ;; This function calls:
  1325 ;;		_vfprintf
  1326 ;; This function is called by:
  1327 ;;		_atualiza_lcd
  1328 ;; This function uses a non-reentrant model
  1329 ;;
  1330                           
  1331     02D2                     _sprintf:	
  1332                           ;psect for function _sprintf
  1333                           
  1334     02D2                     l1402:	
  1335                           ;incstack = 0
  1336 ;; hardware stack exceeded
  1337                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1338                           
  1339     02D2  304E               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  1340     02D3  1283               	bcf	3,5	;RP0=0, select bank0
  1341     02D4  1303               	bcf	3,6	;RP1=0, select bank0
  1342     02D5  00D1               	movwf	sprintf@ap
  1343     02D6                     l1404:
  1344     02D6  084C               	movf	sprintf@s,w
  1345     02D7  00D2               	movwf	sprintf@f
  1346     02D8  3000               	movlw	0
  1347     02D9  00D3               	movwf	sprintf@f+1
  1348     02DA                     l1406:
  1349     02DA  01D4               	clrf	sprintf@f+2
  1350     02DB  01D5               	clrf	sprintf@f+3
  1351     02DC                     l1408:
  1352     02DC  01DB               	clrf	sprintf@f+9
  1353     02DD  01DC               	clrf	sprintf@f+10
  1354     02DE                     l1410:
  1355     02DE  3052               	movlw	low sprintf@f
  1356     02DF  00C7               	movwf	vfprintf@fp
  1357     02E0  3000               	movlw	high sprintf@f
  1358     02E1  00C8               	movwf	vfprintf@fp+1
  1359     02E2  084D               	movf	sprintf@fmt,w
  1360     02E3  00C9               	movwf	vfprintf@fmt
  1361     02E4  3051               	movlw	(low (sprintf@ap| 0))& (0+255)
  1362     02E5  00CA               	movwf	vfprintf@ap
  1363     02E6  120A  118A  22AF  120A  118A  	fcall	_vfprintf
  1364     02EB                     l1412:
  1365     02EB  1283               	bcf	3,5	;RP0=0, select bank0
  1366     02EC  1303               	bcf	3,6	;RP1=0, select bank0
  1367     02ED  0854               	movf	sprintf@f+2,w
  1368     02EE  074C               	addwf	sprintf@s,w
  1369     02EF  00D0               	movwf	??_sprintf
  1370     02F0  0850               	movf	??_sprintf,w
  1371     02F1  0084               	movwf	4
  1372     02F2  1383               	bcf	3,7	;select IRP bank0
  1373     02F3  0180               	clrf	0
  1374     02F4                     l628:
  1375     02F4  0008               	return
  1376     02F5                     __end_of_sprintf:
  1377                           
  1378                           	psect	text6
  1379     02AF                     __ptext6:	
  1380 ;; *************** function _vfprintf *****************
  1381 ;; Defined at:
  1382 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  1383 ;; Parameters:    Size  Location     Type
  1384 ;;  fp              2   39[BANK0 ] PTR struct _IO_FILE
  1385 ;;		 -> sprintf@f(11), 
  1386 ;;  fmt             1   41[BANK0 ] PTR const unsigned char 
  1387 ;;		 -> STR_1(7), 
  1388 ;;  ap              1   42[BANK0 ] PTR PTR void 
  1389 ;;		 -> sprintf@ap(1), 
  1390 ;; Auto vars:     Size  Location     Type
  1391 ;;  cfmt            1   43[BANK0 ] PTR unsigned char 
  1392 ;;		 -> STR_1(7), 
  1393 ;; Return value:  Size  Location     Type
  1394 ;;                  2   39[BANK0 ] int 
  1395 ;; Registers used:
  1396 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1397 ;; Tracked objects:
  1398 ;;		On entry : 0/0
  1399 ;;		On exit  : 0/0
  1400 ;;		Unchanged: 0/0
  1401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1402 ;;      Params:         0       4       0       0       0
  1403 ;;      Locals:         0       1       0       0       0
  1404 ;;      Temps:          0       0       0       0       0
  1405 ;;      Totals:         0       5       0       0       0
  1406 ;;Total ram usage:        5 bytes
  1407 ;; Hardware stack levels used: 1
  1408 ;; Hardware stack levels required when called: 6
  1409 ;; This function calls:
  1410 ;;		_vfpfcnvrt
  1411 ;; This function is called by:
  1412 ;;		_sprintf
  1413 ;; This function uses a non-reentrant model
  1414 ;;
  1415                           
  1416     02AF                     _vfprintf:	
  1417                           ;psect for function _vfprintf
  1418                           
  1419     02AF                     l1376:	
  1420                           ;incstack = 0
  1421 ;; hardware stack exceeded
  1422                           ; Regs used in _vfprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1423                           
  1424                           
  1425                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1426     02AF  1283               	bcf	3,5	;RP0=0, select bank0
  1427     02B0  1303               	bcf	3,6	;RP1=0, select bank0
  1428     02B1  0849               	movf	vfprintf@fmt,w
  1429     02B2  00CB               	movwf	vfprintf@cfmt
  1430                           
  1431                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1432     02B3  2AC1               	goto	l1380
  1433     02B4                     l1378:
  1434                           
  1435                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1436     02B4  0847               	movf	vfprintf@fp,w
  1437     02B5  00BB               	movwf	vfpfcnvrt@fp
  1438     02B6  0848               	movf	vfprintf@fp+1,w
  1439     02B7  00BC               	movwf	vfpfcnvrt@fp+1
  1440     02B8  304B               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  1441     02B9  00BD               	movwf	vfpfcnvrt@fmt
  1442     02BA  084A               	movf	vfprintf@ap,w
  1443     02BB  00BE               	movwf	vfpfcnvrt@ap
  1444     02BC  120A  118A  2661  120A  118A  	fcall	_vfpfcnvrt
  1445     02C1                     l1380:
  1446                           
  1447                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1448     02C1  1283               	bcf	3,5	;RP0=0, select bank0
  1449     02C2  1303               	bcf	3,6	;RP1=0, select bank0
  1450     02C3  084B               	movf	vfprintf@cfmt,w
  1451     02C4  0084               	movwf	4
  1452     02C5  120A  118A  200D  120A  118A  	fcall	stringdir
  1453     02CA  3A00               	xorlw	0
  1454     02CB  1D03               	skipz
  1455     02CC  2ACE               	goto	u1251
  1456     02CD  2ACF               	goto	u1250
  1457     02CE                     u1251:
  1458     02CE  2AB4               	goto	l1378
  1459     02CF                     u1250:
  1460     02CF                     l1382:
  1461                           
  1462                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1463     02CF  01C7               	clrf	?_vfprintf
  1464     02D0  01C8               	clrf	?_vfprintf+1
  1465     02D1                     l698:
  1466     02D1  0008               	return
  1467     02D2                     __end_of_vfprintf:
  1468                           
  1469                           	psect	text7
  1470     0661                     __ptext7:	
  1471 ;; *************** function _vfpfcnvrt *****************
  1472 ;; Defined at:
  1473 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  1474 ;; Parameters:    Size  Location     Type
  1475 ;;  fp              2   27[BANK0 ] PTR struct _IO_FILE
  1476 ;;		 -> sprintf@f(11), 
  1477 ;;  fmt             1   29[BANK0 ] PTR PTR unsigned char 
  1478 ;;		 -> vfprintf@cfmt(1), 
  1479 ;;  ap              1   30[BANK0 ] PTR PTR void 
  1480 ;;		 -> sprintf@ap(1), 
  1481 ;; Auto vars:     Size  Location     Type
  1482 ;;  convarg         4   33[BANK0 ] struct .
  1483 ;;  cp              1   38[BANK0 ] PTR unsigned char 
  1484 ;;		 -> STR_1(7), 
  1485 ;;  done            1   37[BANK0 ] _Bool 
  1486 ;;  c               1    0        unsigned char 
  1487 ;; Return value:  Size  Location     Type
  1488 ;;                  1    wreg      void 
  1489 ;; Registers used:
  1490 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1491 ;; Tracked objects:
  1492 ;;		On entry : 0/0
  1493 ;;		On exit  : 0/0
  1494 ;;		Unchanged: 0/0
  1495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1496 ;;      Params:         0       4       0       0       0
  1497 ;;      Locals:         0       6       0       0       0
  1498 ;;      Temps:          0       2       0       0       0
  1499 ;;      Totals:         0      12       0       0       0
  1500 ;;Total ram usage:       12 bytes
  1501 ;; Hardware stack levels used: 1
  1502 ;; Hardware stack levels required when called: 5
  1503 ;; This function calls:
  1504 ;;		_dtoa
  1505 ;;		_fputc
  1506 ;;		_read_prec_or_width
  1507 ;; This function is called by:
  1508 ;;		_vfprintf
  1509 ;; This function uses a non-reentrant model
  1510 ;;
  1511                           
  1512     0661                     _vfpfcnvrt:	
  1513                           ;psect for function _vfpfcnvrt
  1514                           
  1515     0661                     l1318:	
  1516                           ;incstack = 0
  1517 ;; hardware stack exceeded
  1518                           ; Regs used in _vfpfcnvrt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1519                           
  1520                           
  1521                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  1522     0661  1283               	bcf	3,5	;RP0=0, select bank0
  1523     0662  1303               	bcf	3,6	;RP1=0, select bank0
  1524     0663  083D               	movf	vfpfcnvrt@fmt,w
  1525     0664  0084               	movwf	4
  1526     0665  1383               	bcf	3,7	;select IRP bank0
  1527     0666  0800               	movf	0,w
  1528     0667  0084               	movwf	4
  1529     0668  120A  118A  200D  120A  118A  	fcall	stringdir
  1530     066D  3A25               	xorlw	37
  1531     066E  1D03               	skipz
  1532     066F  2E71               	goto	u1201
  1533     0670  2E72               	goto	u1200
  1534     0671                     u1201:
  1535     0671  2F07               	goto	l1362
  1536     0672                     u1200:
  1537     0672                     l1320:
  1538                           
  1539                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1540     0672  083D               	movf	vfpfcnvrt@fmt,w
  1541     0673  0084               	movwf	4
  1542     0674  3001               	movlw	1
  1543     0675  0780               	addwf	0,f
  1544     0676                     l1322:
  1545                           
  1546                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1547     0676  1683               	bsf	3,5	;RP0=1, select bank1
  1548     0677  1303               	bcf	3,6	;RP1=0, select bank1
  1549     0678  01A0               	clrf	_width^(0+128)
  1550     0679  01A1               	clrf	(_width+1)^(0+128)
  1551     067A  3000               	movlw	0
  1552     067B  1283               	bcf	3,5	;RP0=0, select bank0
  1553     067C  1303               	bcf	3,6	;RP1=0, select bank0
  1554     067D  00EE               	movwf	_flags
  1555     067E                     l1324:
  1556                           
  1557                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1558     067E  30FF               	movlw	255
  1559     067F  1683               	bsf	3,5	;RP0=1, select bank1
  1560     0680  1303               	bcf	3,6	;RP1=0, select bank1
  1561     0681  00A2               	movwf	_prec^(0+128)
  1562     0682  30FF               	movlw	255
  1563     0683  00A3               	movwf	(_prec^(0+128)+1)
  1564     0684                     l1326:
  1565                           
  1566                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
  1567     0684  1283               	bcf	3,5	;RP0=0, select bank0
  1568     0685  1303               	bcf	3,6	;RP1=0, select bank0
  1569     0686  01C5               	clrf	vfpfcnvrt@done
  1570                           
  1571                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  1572     0687  2E9E               	goto	l1334
  1573     0688                     l684:	
  1574                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1219:            
      +                               case '0' :
  1575                           
  1576                           
  1577                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
  1578     0688  14EE               	bsf	_flags,1
  1579     0689                     l1328:
  1580                           
  1581                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1221:            
      +                                   ++*fmt;
  1582     0689  083D               	movf	vfpfcnvrt@fmt,w
  1583     068A  0084               	movwf	4
  1584     068B  3001               	movlw	1
  1585     068C  0780               	addwf	0,f
  1586                           
  1587                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1222:            
      +                                   break;
  1588     068D  2E9E               	goto	l1334
  1589     068E                     l686:	
  1590                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1242:            
      +                               default:
  1591                           
  1592                           
  1593                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
  1594     068E  3001               	movlw	1
  1595     068F  00C5               	movwf	vfpfcnvrt@done
  1596                           
  1597                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
  1598     0690  2E9E               	goto	l1334
  1599     0691                     l1332:
  1600     0691  083D               	movf	vfpfcnvrt@fmt,w
  1601     0692  0084               	movwf	4
  1602     0693  0800               	movf	0,w
  1603     0694  0084               	movwf	4
  1604     0695  120A  118A  200D  120A  118A  	fcall	stringdir
  1605                           
  1606                           ; Switch size 1, requested type "simple"
  1607                           ; Number of cases is 1, Range of values is 48 to 48
  1608                           ; switch strategies available:
  1609                           ; Name         Instructions Cycles
  1610                           ; simple_byte            4     3 (average)
  1611                           ; direct_byte           14    11 (fixed)
  1612                           ; jumptable            263     9 (fixed)
  1613                           ;	Chosen strategy is simple_byte
  1614     069A  3A30               	xorlw	48	; case 48
  1615     069B  1903               	skipnz
  1616     069C  2E88               	goto	l684
  1617     069D  2E8E               	goto	l686
  1618     069E                     l1334:
  1619                           
  1620                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  1621     069E  0845               	movf	vfpfcnvrt@done,w
  1622     069F  1903               	btfsc	3,2
  1623     06A0  2EA2               	goto	u1211
  1624     06A1  2EA3               	goto	u1210
  1625     06A2                     u1211:
  1626     06A2  2E91               	goto	l1332
  1627     06A3                     u1210:
  1628     06A3                     l1336:
  1629                           
  1630                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
  1631     06A3  083D               	movf	vfpfcnvrt@fmt,w
  1632     06A4  00F6               	movwf	read_prec_or_width@fmt
  1633     06A5  083E               	movf	vfpfcnvrt@ap,w
  1634     06A6  00F7               	movwf	read_prec_or_width@ap
  1635     06A7  120A  118A  2445  120A  118A  	fcall	_read_prec_or_width
  1636     06AC  0877               	movf	?_read_prec_or_width+1,w
  1637     06AD  1683               	bsf	3,5	;RP0=1, select bank1
  1638     06AE  1303               	bcf	3,6	;RP1=0, select bank1
  1639     06AF  00A1               	movwf	(_width+1)^(0+128)
  1640     06B0  0876               	movf	?_read_prec_or_width,w
  1641     06B1  00A0               	movwf	_width^(0+128)
  1642     06B2                     l1338:
  1643                           
  1644                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
  1645     06B2  1FA1               	btfss	(_width+1)^(0+128),7
  1646     06B3  2EB5               	goto	u1221
  1647     06B4  2EB6               	goto	u1220
  1648     06B5                     u1221:
  1649     06B5  2EC0               	goto	l1344
  1650     06B6                     u1220:
  1651     06B6                     l1340:
  1652                           
  1653                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
  1654     06B6  1283               	bcf	3,5	;RP0=0, select bank0
  1655     06B7  1303               	bcf	3,6	;RP1=0, select bank0
  1656     06B8  146E               	bsf	_flags,0
  1657     06B9                     l1342:
  1658                           
  1659                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
  1660     06B9  1683               	bsf	3,5	;RP0=1, select bank1
  1661     06BA  1303               	bcf	3,6	;RP1=0, select bank1
  1662     06BB  09A0               	comf	_width^(0+128),f
  1663     06BC  09A1               	comf	(_width+1)^(0+128),f
  1664     06BD  0AA0               	incf	_width^(0+128),f
  1665     06BE  1903               	skipnz
  1666     06BF  0AA1               	incf	(_width+1)^(0+128),f
  1667     06C0                     l1344:
  1668                           
  1669                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  1670     06C0  1283               	bcf	3,5	;RP0=0, select bank0
  1671     06C1  1303               	bcf	3,6	;RP1=0, select bank0
  1672     06C2  083D               	movf	vfpfcnvrt@fmt,w
  1673     06C3  0084               	movwf	4
  1674     06C4  1383               	bcf	3,7	;select IRP bank0
  1675     06C5  0800               	movf	0,w
  1676     06C6  00C6               	movwf	vfpfcnvrt@cp
  1677     06C7                     l1346:
  1678                           
  1679                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1680     06C7  0846               	movf	vfpfcnvrt@cp,w
  1681     06C8  0084               	movwf	4
  1682     06C9  120A  118A  200D  120A  118A  	fcall	stringdir
  1683     06CE  3A64               	xorlw	100
  1684     06CF  1903               	skipnz
  1685     06D0  2ED2               	goto	u1231
  1686     06D1  2ED3               	goto	u1230
  1687     06D2                     u1231:
  1688     06D2  2EDF               	goto	l1350
  1689     06D3                     u1230:
  1690     06D3                     l1348:
  1691     06D3  0846               	movf	vfpfcnvrt@cp,w
  1692     06D4  0084               	movwf	4
  1693     06D5  120A  118A  200D  120A  118A  	fcall	stringdir
  1694     06DA  3A69               	xorlw	105
  1695     06DB  1D03               	skipz
  1696     06DC  2EDE               	goto	u1241
  1697     06DD  2EDF               	goto	u1240
  1698     06DE                     u1241:
  1699     06DE  2EFF               	goto	l1358
  1700     06DF                     u1240:
  1701     06DF                     l1350:
  1702                           
  1703                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1704     06DF  083E               	movf	vfpfcnvrt@ap,w
  1705     06E0  0084               	movwf	4
  1706     06E1  0800               	movf	0,w
  1707     06E2  00FF               	movwf	btemp+1
  1708     06E3  3002               	movlw	2
  1709     06E4  0780               	addwf	0,f
  1710     06E5  087F               	movf	btemp+1,w
  1711     06E6  0084               	movwf	4
  1712     06E7  0800               	movf	0,w
  1713     06E8  00C1               	movwf	vfpfcnvrt@convarg
  1714     06E9  0A84               	incf	4,f
  1715     06EA  0800               	movf	0,w
  1716     06EB  00C2               	movwf	vfpfcnvrt@convarg+1
  1717     06EC                     l1352:
  1718                           
  1719                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  1720     06EC  083D               	movf	vfpfcnvrt@fmt,w
  1721     06ED  0084               	movwf	4
  1722     06EE  0846               	movf	vfpfcnvrt@cp,w
  1723     06EF  3E01               	addlw	1
  1724     06F0  0080               	movwf	0
  1725     06F1                     l1354:
  1726                           
  1727                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  1728     06F1  083B               	movf	vfpfcnvrt@fp,w
  1729     06F2  00AF               	movwf	dtoa@fp
  1730     06F3  083C               	movf	vfpfcnvrt@fp+1,w
  1731     06F4  00B0               	movwf	dtoa@fp+1
  1732     06F5  0842               	movf	vfpfcnvrt@convarg+1,w
  1733     06F6  00B2               	movwf	dtoa@d+1
  1734     06F7  0841               	movf	vfpfcnvrt@convarg,w
  1735     06F8  00B1               	movwf	dtoa@d
  1736     06F9  120A  118A  2721  120A  118A  	fcall	_dtoa
  1737     06FE  2F20               	goto	l692
  1738     06FF                     l1358:
  1739                           
  1740                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1741     06FF  1283               	bcf	3,5	;RP0=0, select bank0
  1742     0700  1303               	bcf	3,6	;RP1=0, select bank0
  1743     0701  083D               	movf	vfpfcnvrt@fmt,w
  1744     0702  0084               	movwf	4
  1745     0703  3001               	movlw	1
  1746     0704  1383               	bcf	3,7	;select IRP bank0
  1747     0705  0780               	addwf	0,f
  1748     0706  2F20               	goto	l692
  1749     0707                     l1362:
  1750                           
  1751                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1752     0707  083D               	movf	vfpfcnvrt@fmt,w
  1753     0708  0084               	movwf	4
  1754     0709  0800               	movf	0,w
  1755     070A  0084               	movwf	4
  1756     070B  120A  118A  200D  120A  118A  	fcall	stringdir
  1757     0710  00BF               	movwf	??_vfpfcnvrt
  1758     0711  01C0               	clrf	??_vfpfcnvrt+1
  1759     0712  083F               	movf	??_vfpfcnvrt,w
  1760     0713  00F0               	movwf	fputc@c
  1761     0714  0840               	movf	??_vfpfcnvrt+1,w
  1762     0715  00F1               	movwf	fputc@c+1
  1763     0716  083B               	movf	vfpfcnvrt@fp,w
  1764     0717  00F2               	movwf	fputc@fp
  1765     0718  083C               	movf	vfpfcnvrt@fp+1,w
  1766     0719  00F3               	movwf	fputc@fp+1
  1767     071A  120A  118A  25C7  120A  118A  	fcall	_fputc
  1768     071F  2EFF               	goto	l1358
  1769     0720                     l692:
  1770     0720  0008               	return
  1771     0721                     __end_of_vfpfcnvrt:
  1772                           
  1773                           	psect	text8
  1774     0445                     __ptext8:	
  1775 ;; *************** function _read_prec_or_width *****************
  1776 ;; Defined at:
  1777 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  1778 ;; Parameters:    Size  Location     Type
  1779 ;;  fmt             1    6[COMMON] PTR PTR const unsigned c
  1780 ;;		 -> vfprintf@cfmt(1), 
  1781 ;;  ap              1    7[COMMON] PTR PTR void [1]
  1782 ;;		 -> sprintf@ap(1), 
  1783 ;; Auto vars:     Size  Location     Type
  1784 ;;  c               1    8[COMMON] unsigned char 
  1785 ;;  n               2    9[COMMON] int 
  1786 ;; Return value:  Size  Location     Type
  1787 ;;                  2    6[COMMON] int 
  1788 ;; Registers used:
  1789 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1790 ;; Tracked objects:
  1791 ;;		On entry : 0/0
  1792 ;;		On exit  : 0/0
  1793 ;;		Unchanged: 0/0
  1794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1795 ;;      Params:         2       0       0       0       0
  1796 ;;      Locals:         3       0       0       0       0
  1797 ;;      Temps:          0       0       0       0       0
  1798 ;;      Totals:         5       0       0       0       0
  1799 ;;Total ram usage:        5 bytes
  1800 ;; Hardware stack levels used: 1
  1801 ;; Hardware stack levels required when called: 1
  1802 ;; This function calls:
  1803 ;;		___wmul
  1804 ;; This function is called by:
  1805 ;;		_vfpfcnvrt
  1806 ;; This function uses a non-reentrant model
  1807 ;;
  1808                           
  1809     0445                     _read_prec_or_width:	
  1810                           ;psect for function _read_prec_or_width
  1811                           
  1812     0445                     l1300:	
  1813                           ;incstack = 0
  1814                           ; Regs used in _read_prec_or_width: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1815                           
  1816                           
  1817                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  1818     0445  01F9               	clrf	read_prec_or_width@n
  1819     0446  01FA               	clrf	read_prec_or_width@n+1
  1820     0447                     l1302:
  1821                           
  1822                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  1823     0447  0876               	movf	read_prec_or_width@fmt,w
  1824     0448  0084               	movwf	4
  1825     0449  1383               	bcf	3,7	;select IRP bank0
  1826     044A  0800               	movf	0,w
  1827     044B  0084               	movwf	4
  1828     044C  120A  118A  200D  120A  118A  	fcall	stringdir
  1829     0451  3A2A               	xorlw	42
  1830     0452  1D03               	skipz
  1831     0453  2C55               	goto	u1181
  1832     0454  2C56               	goto	u1180
  1833     0455                     u1181:
  1834     0455  2C82               	goto	l1312
  1835     0456                     u1180:
  1836     0456                     l1304:
  1837                           
  1838                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  1839     0456  0876               	movf	read_prec_or_width@fmt,w
  1840     0457  0084               	movwf	4
  1841     0458  3001               	movlw	1
  1842     0459  0780               	addwf	0,f
  1843     045A                     l1306:
  1844                           
  1845                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  1846     045A  0877               	movf	read_prec_or_width@ap,w
  1847     045B  0084               	movwf	4
  1848     045C  0800               	movf	0,w
  1849     045D  00FF               	movwf	btemp+1
  1850     045E  3002               	movlw	2
  1851     045F  0780               	addwf	0,f
  1852     0460  087F               	movf	btemp+1,w
  1853     0461  0084               	movwf	4
  1854     0462  0800               	movf	0,w
  1855     0463  00F9               	movwf	read_prec_or_width@n
  1856     0464  0A84               	incf	4,f
  1857     0465  0800               	movf	0,w
  1858     0466  00FA               	movwf	read_prec_or_width@n+1
  1859                           
  1860                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  1861     0467  2C93               	goto	l1314
  1862     0468                     l1308:
  1863                           
  1864                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  1865     0468  087A               	movf	read_prec_or_width@n+1,w
  1866     0469  00F1               	movwf	___wmul@multiplier+1
  1867     046A  0879               	movf	read_prec_or_width@n,w
  1868     046B  00F0               	movwf	___wmul@multiplier
  1869     046C  300A               	movlw	10
  1870     046D  00F2               	movwf	___wmul@multiplicand
  1871     046E  3000               	movlw	0
  1872     046F  00F3               	movwf	___wmul@multiplicand+1
  1873     0470  120A  118A  22F5  120A  118A  	fcall	___wmul
  1874     0475  0878               	movf	read_prec_or_width@c,w
  1875     0476  0770               	addwf	?___wmul,w
  1876     0477  00F9               	movwf	read_prec_or_width@n
  1877     0478  3000               	movlw	0
  1878     0479  1803               	skipnc
  1879     047A  3001               	movlw	1
  1880     047B  0771               	addwf	?___wmul+1,w
  1881     047C  00FA               	movwf	read_prec_or_width@n+1
  1882     047D                     l1310:
  1883                           
  1884                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  1885     047D  0876               	movf	read_prec_or_width@fmt,w
  1886     047E  0084               	movwf	4
  1887     047F  3001               	movlw	1
  1888     0480  1383               	bcf	3,7	;select IRP bank0
  1889     0481  0780               	addwf	0,f
  1890     0482                     l1312:
  1891                           
  1892                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  1893     0482  0876               	movf	read_prec_or_width@fmt,w
  1894     0483  0084               	movwf	4
  1895     0484  0800               	movf	0,w
  1896     0485  0084               	movwf	4
  1897     0486  120A  118A  200D  120A  118A  	fcall	stringdir
  1898     048B  3ED0               	addlw	208
  1899     048C  00F8               	movwf	read_prec_or_width@c
  1900     048D  300A               	movlw	10
  1901     048E  0278               	subwf	read_prec_or_width@c,w
  1902     048F  1C03               	skipc
  1903     0490  2C92               	goto	u1191
  1904     0491  2C93               	goto	u1190
  1905     0492                     u1191:
  1906     0492  2C68               	goto	l1308
  1907     0493                     u1190:
  1908     0493                     l1314:
  1909                           
  1910                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  1911     0493  087A               	movf	read_prec_or_width@n+1,w
  1912     0494  00F7               	movwf	?_read_prec_or_width+1
  1913     0495  0879               	movf	read_prec_or_width@n,w
  1914     0496  00F6               	movwf	?_read_prec_or_width
  1915     0497                     l677:
  1916     0497  0008               	return
  1917     0498                     __end_of_read_prec_or_width:
  1918                           
  1919                           	psect	text9
  1920     02F5                     __ptext9:	
  1921 ;; *************** function ___wmul *****************
  1922 ;; Defined at:
  1923 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\Umul16.c"
  1924 ;; Parameters:    Size  Location     Type
  1925 ;;  multiplier      2    0[COMMON] unsigned int 
  1926 ;;  multiplicand    2    2[COMMON] unsigned int 
  1927 ;; Auto vars:     Size  Location     Type
  1928 ;;  product         2    4[COMMON] unsigned int 
  1929 ;; Return value:  Size  Location     Type
  1930 ;;                  2    0[COMMON] unsigned int 
  1931 ;; Registers used:
  1932 ;;		wreg, status,2, status,0
  1933 ;; Tracked objects:
  1934 ;;		On entry : 0/0
  1935 ;;		On exit  : 0/0
  1936 ;;		Unchanged: 0/0
  1937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1938 ;;      Params:         4       0       0       0       0
  1939 ;;      Locals:         2       0       0       0       0
  1940 ;;      Temps:          0       0       0       0       0
  1941 ;;      Totals:         6       0       0       0       0
  1942 ;;Total ram usage:        6 bytes
  1943 ;; Hardware stack levels used: 1
  1944 ;; This function calls:
  1945 ;;		Nothing
  1946 ;; This function is called by:
  1947 ;;		_read_prec_or_width
  1948 ;; This function uses a non-reentrant model
  1949 ;;
  1950                           
  1951     02F5                     ___wmul:	
  1952                           ;psect for function ___wmul
  1953                           
  1954     02F5                     l1134:	
  1955                           ;incstack = 0
  1956                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1957                           
  1958     02F5  01F4               	clrf	___wmul@product
  1959     02F6  01F5               	clrf	___wmul@product+1
  1960     02F7                     l1136:
  1961     02F7  1C70               	btfss	___wmul@multiplier,0
  1962     02F8  2AFA               	goto	u801
  1963     02F9  2AFB               	goto	u800
  1964     02FA                     u801:
  1965     02FA  2B01               	goto	l165
  1966     02FB                     u800:
  1967     02FB                     l1138:
  1968     02FB  0872               	movf	___wmul@multiplicand,w
  1969     02FC  07F4               	addwf	___wmul@product,f
  1970     02FD  1803               	skipnc
  1971     02FE  0AF5               	incf	___wmul@product+1,f
  1972     02FF  0873               	movf	___wmul@multiplicand+1,w
  1973     0300  07F5               	addwf	___wmul@product+1,f
  1974     0301                     l165:
  1975     0301  3001               	movlw	1
  1976     0302                     u815:
  1977     0302  1003               	clrc
  1978     0303  0DF2               	rlf	___wmul@multiplicand,f
  1979     0304  0DF3               	rlf	___wmul@multiplicand+1,f
  1980     0305  3EFF               	addlw	-1
  1981     0306  1D03               	skipz
  1982     0307  2B02               	goto	u815
  1983     0308                     l1140:
  1984     0308  3001               	movlw	1
  1985     0309                     u825:
  1986     0309  1003               	clrc
  1987     030A  0CF1               	rrf	___wmul@multiplier+1,f
  1988     030B  0CF0               	rrf	___wmul@multiplier,f
  1989     030C  3EFF               	addlw	-1
  1990     030D  1D03               	skipz
  1991     030E  2B09               	goto	u825
  1992     030F                     l1142:
  1993     030F  0870               	movf	___wmul@multiplier,w
  1994     0310  0471               	iorwf	___wmul@multiplier+1,w
  1995     0311  1D03               	btfss	3,2
  1996     0312  2B14               	goto	u831
  1997     0313  2B15               	goto	u830
  1998     0314                     u831:
  1999     0314  2AF7               	goto	l1136
  2000     0315                     u830:
  2001     0315                     l1144:
  2002     0315  0875               	movf	___wmul@product+1,w
  2003     0316  00F1               	movwf	?___wmul+1
  2004     0317  0874               	movf	___wmul@product,w
  2005     0318  00F0               	movwf	?___wmul
  2006     0319                     l167:
  2007     0319  0008               	return
  2008     031A                     __end_of___wmul:
  2009                           
  2010                           	psect	text10
  2011     0721                     __ptext10:	
  2012 ;; *************** function _dtoa *****************
  2013 ;; Defined at:
  2014 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  2015 ;; Parameters:    Size  Location     Type
  2016 ;;  fp              2   15[BANK0 ] PTR struct _IO_FILE
  2017 ;;		 -> sprintf@f(11), 
  2018 ;;  d               2   17[BANK0 ] int 
  2019 ;; Auto vars:     Size  Location     Type
  2020 ;;  i               2   25[BANK0 ] int 
  2021 ;;  w               2   22[BANK0 ] int 
  2022 ;;  s               1   24[BANK0 ] unsigned char 
  2023 ;;  p               1   21[BANK0 ] _Bool 
  2024 ;; Return value:  Size  Location     Type
  2025 ;;                  1    wreg      void 
  2026 ;; Registers used:
  2027 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2028 ;; Tracked objects:
  2029 ;;		On entry : 0/0
  2030 ;;		On exit  : 0/0
  2031 ;;		Unchanged: 0/0
  2032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2033 ;;      Params:         0       4       0       0       0
  2034 ;;      Locals:         0       8       0       0       0
  2035 ;;      Temps:          0       0       0       0       0
  2036 ;;      Totals:         0      12       0       0       0
  2037 ;;Total ram usage:       12 bytes
  2038 ;; Hardware stack levels used: 1
  2039 ;; Hardware stack levels required when called: 4
  2040 ;; This function calls:
  2041 ;;		___awdiv
  2042 ;;		___awmod
  2043 ;;		_abs
  2044 ;;		_pad
  2045 ;; This function is called by:
  2046 ;;		_vfpfcnvrt
  2047 ;; This function uses a non-reentrant model
  2048 ;;
  2049                           
  2050     0721                     _dtoa:	
  2051                           ;psect for function _dtoa
  2052                           
  2053     0721                     l1254:	
  2054                           ;incstack = 0
  2055 ;; hardware stack exceeded
  2056                           ; Regs used in _dtoa: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2057                           
  2058                           
  2059                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 52
      +                          0:  _Bool p = 1;
  2060     0721  3001               	movlw	1
  2061     0722  1283               	bcf	3,5	;RP0=0, select bank0
  2062     0723  1303               	bcf	3,6	;RP1=0, select bank0
  2063     0724  00B5               	movwf	dtoa@p
  2064     0725                     l1256:
  2065                           
  2066                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 524:     s = d < 
      +                          0 ? 1 : 0;
  2067     0725  1BB2               	btfsc	dtoa@d+1,7
  2068     0726  2F28               	goto	u1081
  2069     0727  2F2A               	goto	u1080
  2070     0728                     u1081:
  2071     0728  3001               	movlw	1
  2072     0729  2F2B               	goto	u1090
  2073     072A                     u1080:
  2074     072A  3000               	movlw	0
  2075     072B                     u1090:
  2076     072B  00B8               	movwf	dtoa@s
  2077                           
  2078                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
  2079     072C  1683               	bsf	3,5	;RP0=1, select bank1
  2080     072D  1303               	bcf	3,6	;RP1=0, select bank1
  2081     072E  0821               	movf	(_width+1)^(0+128),w
  2082     072F  1283               	bcf	3,5	;RP0=0, select bank0
  2083     0730  1303               	bcf	3,6	;RP1=0, select bank0
  2084     0731  00B7               	movwf	dtoa@w+1
  2085     0732  1683               	bsf	3,5	;RP0=1, select bank1
  2086     0733  1303               	bcf	3,6	;RP1=0, select bank1
  2087     0734  0820               	movf	_width^(0+128),w
  2088     0735  1283               	bcf	3,5	;RP0=0, select bank0
  2089     0736  1303               	bcf	3,6	;RP1=0, select bank0
  2090     0737  00B6               	movwf	dtoa@w
  2091     0738                     l1258:
  2092                           
  2093                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 536:     if (s
  2094     0738  0838               	movf	dtoa@s,w
  2095     0739  1903               	btfsc	3,2
  2096     073A  2F3C               	goto	u1101
  2097     073B  2F3D               	goto	u1100
  2098     073C                     u1101:
  2099     073C  2F53               	goto	l656
  2100     073D                     u1100:
  2101     073D                     l1260:
  2102                           
  2103                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 541:         --w;
  2104     073D  30FF               	movlw	255
  2105     073E  07B6               	addwf	dtoa@w,f
  2106     073F  1803               	skipnc
  2107     0740  0AB7               	incf	dtoa@w+1,f
  2108     0741  30FF               	movlw	255
  2109     0742  07B7               	addwf	dtoa@w+1,f
  2110     0743                     l1262:
  2111                           
  2112                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
  2113     0743  0838               	movf	dtoa@s,w
  2114     0744  1D03               	btfss	3,2
  2115     0745  2F47               	goto	u1111
  2116     0746  2F48               	goto	u1110
  2117     0747                     u1111:
  2118     0747  2F4D               	goto	l1266
  2119     0748                     u1110:
  2120     0748                     l1264:
  2121     0748  302B               	movlw	43
  2122     0749  00B3               	movwf	_dtoa$660
  2123     074A  3000               	movlw	0
  2124     074B  00B4               	movwf	_dtoa$660+1
  2125     074C  2F51               	goto	l660
  2126     074D                     l1266:
  2127     074D  302D               	movlw	45
  2128     074E  00B3               	movwf	_dtoa$660
  2129     074F  3000               	movlw	0
  2130     0750  00B4               	movwf	_dtoa$660+1
  2131     0751                     l660:
  2132     0751  0833               	movf	_dtoa$660,w
  2133     0752  00B8               	movwf	dtoa@s
  2134     0753                     l656:	
  2135                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 543:     }
  2136                           
  2137                           
  2138                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
  2139     0753  301F               	movlw	31
  2140     0754  00B9               	movwf	dtoa@i
  2141     0755  3000               	movlw	0
  2142     0756  00BA               	movwf	dtoa@i+1
  2143     0757                     l1268:
  2144                           
  2145                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
  2146     0757  1683               	bsf	3,5	;RP0=1, select bank1
  2147     0758  1303               	bcf	3,6	;RP1=0, select bank1
  2148     0759  01C5               	clrf	(_dbuf^(0+128)+31)
  2149                           
  2150                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  2151     075A  2F9A               	goto	l1280
  2152     075B                     l1270:
  2153                           
  2154                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 564:         --i;
  2155     075B  30FF               	movlw	255
  2156     075C  07B9               	addwf	dtoa@i,f
  2157     075D  1803               	skipnc
  2158     075E  0ABA               	incf	dtoa@i+1,f
  2159     075F  30FF               	movlw	255
  2160     0760  07BA               	addwf	dtoa@i+1,f
  2161     0761                     l1272:
  2162                           
  2163                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  2164     0761  0839               	movf	dtoa@i,w
  2165     0762  3EA6               	addlw	(low (_dbuf| 0))& (0+255)
  2166     0763  0084               	movwf	4
  2167     0764  300A               	movlw	10
  2168     0765  00F0               	movwf	___awmod@divisor
  2169     0766  3000               	movlw	0
  2170     0767  00F1               	movwf	___awmod@divisor+1
  2171     0768  0832               	movf	dtoa@d+1,w
  2172     0769  00F3               	movwf	___awmod@dividend+1
  2173     076A  0831               	movf	dtoa@d,w
  2174     076B  00F2               	movwf	___awmod@dividend
  2175     076C  120A  118A  2498  120A  118A  	fcall	___awmod
  2176     0771  0871               	movf	?___awmod+1,w
  2177     0772  00F7               	movwf	abs@a+1
  2178     0773  0870               	movf	?___awmod,w
  2179     0774  00F6               	movwf	abs@a
  2180     0775  120A  118A  225D  120A  118A  	fcall	_abs
  2181     077A  0876               	movf	?_abs,w
  2182     077B  3E30               	addlw	48
  2183     077C  1383               	bcf	3,7	;select IRP bank1
  2184     077D  0080               	movwf	0
  2185     077E                     l1274:
  2186                           
  2187                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 569:   p = 0;
  2188     077E  1283               	bcf	3,5	;RP0=0, select bank0
  2189     077F  1303               	bcf	3,6	;RP1=0, select bank0
  2190     0780  01B5               	clrf	dtoa@p
  2191     0781                     l1276:
  2192                           
  2193                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 571:         --w;
  2194     0781  30FF               	movlw	255
  2195     0782  07B6               	addwf	dtoa@w,f
  2196     0783  1803               	skipnc
  2197     0784  0AB7               	incf	dtoa@w+1,f
  2198     0785  30FF               	movlw	255
  2199     0786  07B7               	addwf	dtoa@w+1,f
  2200     0787                     l1278:
  2201                           
  2202                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
  2203     0787  300A               	movlw	10
  2204     0788  00F0               	movwf	___awdiv@divisor
  2205     0789  3000               	movlw	0
  2206     078A  00F1               	movwf	___awdiv@divisor+1
  2207     078B  0832               	movf	dtoa@d+1,w
  2208     078C  00F3               	movwf	___awdiv@dividend+1
  2209     078D  0831               	movf	dtoa@d,w
  2210     078E  00F2               	movwf	___awdiv@dividend
  2211     078F  120A  118A  24EF  120A  118A  	fcall	___awdiv
  2212     0794  0871               	movf	?___awdiv+1,w
  2213     0795  1283               	bcf	3,5	;RP0=0, select bank0
  2214     0796  1303               	bcf	3,6	;RP1=0, select bank0
  2215     0797  00B2               	movwf	dtoa@d+1
  2216     0798  0870               	movf	?___awdiv,w
  2217     0799  00B1               	movwf	dtoa@d
  2218     079A                     l1280:
  2219                           
  2220                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  2221     079A  1283               	bcf	3,5	;RP0=0, select bank0
  2222     079B  083A               	movf	dtoa@i+1,w
  2223     079C  3A80               	xorlw	128
  2224     079D  00FF               	movwf	btemp+1
  2225     079E  3080               	movlw	128
  2226     079F  027F               	subwf	btemp+1,w
  2227     07A0  1D03               	skipz
  2228     07A1  2FA4               	goto	u1125
  2229     07A2  3001               	movlw	1
  2230     07A3  0239               	subwf	dtoa@i,w
  2231     07A4                     u1125:
  2232     07A4  1C03               	skipc
  2233     07A5  2FA7               	goto	u1121
  2234     07A6  2FA8               	goto	u1120
  2235     07A7                     u1121:
  2236     07A7  2FC8               	goto	l1290
  2237     07A8                     u1120:
  2238     07A8                     l1282:
  2239     07A8  1283               	bcf	3,5	;RP0=0, select bank0
  2240     07A9  1303               	bcf	3,6	;RP1=0, select bank0
  2241     07AA  0831               	movf	dtoa@d,w
  2242     07AB  0432               	iorwf	dtoa@d+1,w
  2243     07AC  1D03               	btfss	3,2
  2244     07AD  2FAF               	goto	u1131
  2245     07AE  2FB0               	goto	u1130
  2246     07AF                     u1131:
  2247     07AF  2F5B               	goto	l1270
  2248     07B0                     u1130:
  2249     07B0                     l1284:
  2250     07B0  0835               	movf	dtoa@p,w
  2251     07B1  1D03               	btfss	3,2
  2252     07B2  2FB4               	goto	u1141
  2253     07B3  2FB5               	goto	u1140
  2254     07B4                     u1141:
  2255     07B4  2F5B               	goto	l1270
  2256     07B5                     u1140:
  2257     07B5                     l1286:
  2258     07B5  0837               	movf	dtoa@w+1,w
  2259     07B6  3A80               	xorlw	128
  2260     07B7  00FF               	movwf	btemp+1
  2261     07B8  3080               	movlw	128
  2262     07B9  027F               	subwf	btemp+1,w
  2263     07BA  1D03               	skipz
  2264     07BB  2FBE               	goto	u1155
  2265     07BC  3001               	movlw	1
  2266     07BD  0236               	subwf	dtoa@w,w
  2267     07BE                     u1155:
  2268     07BE  1C03               	skipc
  2269     07BF  2FC1               	goto	u1151
  2270     07C0  2FC2               	goto	u1150
  2271     07C1                     u1151:
  2272     07C1  2FC8               	goto	l1290
  2273     07C2                     u1150:
  2274     07C2                     l1288:
  2275     07C2  1283               	bcf	3,5	;RP0=0, select bank0
  2276     07C3  1303               	bcf	3,6	;RP1=0, select bank0
  2277     07C4  18EE               	btfsc	_flags,1
  2278     07C5  2FC7               	goto	u1161
  2279     07C6  2FC8               	goto	u1160
  2280     07C7                     u1161:
  2281     07C7  2F5B               	goto	l1270
  2282     07C8                     u1160:
  2283     07C8                     l1290:
  2284                           
  2285                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
  2286     07C8  1283               	bcf	3,5	;RP0=0, select bank0
  2287     07C9  1303               	bcf	3,6	;RP1=0, select bank0
  2288     07CA  0838               	movf	dtoa@s,w
  2289     07CB  1903               	btfsc	3,2
  2290     07CC  2FCE               	goto	u1171
  2291     07CD  2FCF               	goto	u1170
  2292     07CE                     u1171:
  2293     07CE  2FDB               	goto	l1296
  2294     07CF                     u1170:
  2295     07CF                     l1292:
  2296                           
  2297                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 577:         --i;
  2298     07CF  30FF               	movlw	255
  2299     07D0  07B9               	addwf	dtoa@i,f
  2300     07D1  1803               	skipnc
  2301     07D2  0ABA               	incf	dtoa@i+1,f
  2302     07D3  30FF               	movlw	255
  2303     07D4  07BA               	addwf	dtoa@i+1,f
  2304     07D5                     l1294:
  2305                           
  2306                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
  2307     07D5  0839               	movf	dtoa@i,w
  2308     07D6  3EA6               	addlw	(low (_dbuf| 0))& (0+255)
  2309     07D7  0084               	movwf	4
  2310     07D8  0838               	movf	dtoa@s,w
  2311     07D9  1383               	bcf	3,7	;select IRP bank1
  2312     07DA  0080               	movwf	0
  2313     07DB                     l1296:
  2314                           
  2315                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
  2316     07DB  082F               	movf	dtoa@fp,w
  2317     07DC  00A8               	movwf	pad@fp
  2318     07DD  0830               	movf	dtoa@fp+1,w
  2319     07DE  00A9               	movwf	pad@fp+1
  2320     07DF  0839               	movf	dtoa@i,w
  2321     07E0  3EA6               	addlw	(low (_dbuf| 0))& (0+255)
  2322     07E1  00AA               	movwf	pad@buf
  2323     07E2  0837               	movf	dtoa@w+1,w
  2324     07E3  00AC               	movwf	pad@p+1
  2325     07E4  0836               	movf	dtoa@w,w
  2326     07E5  00AB               	movwf	pad@p
  2327     07E6  120A  118A  23F2  120A  118A  	fcall	_pad
  2328     07EB                     l669:
  2329     07EB  0008               	return
  2330     07EC                     __end_of_dtoa:
  2331                           
  2332                           	psect	text11
  2333     03F2                     __ptext11:	
  2334 ;; *************** function _pad *****************
  2335 ;; Defined at:
  2336 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  2337 ;; Parameters:    Size  Location     Type
  2338 ;;  fp              2    8[BANK0 ] PTR struct _IO_FILE
  2339 ;;		 -> sprintf@f(11), 
  2340 ;;  buf             1   10[BANK0 ] PTR unsigned char 
  2341 ;;		 -> dbuf(32), 
  2342 ;;  p               2   11[BANK0 ] int 
  2343 ;; Auto vars:     Size  Location     Type
  2344 ;;  i               2   13[BANK0 ] int 
  2345 ;; Return value:  Size  Location     Type
  2346 ;;                  1    wreg      void 
  2347 ;; Registers used:
  2348 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2349 ;; Tracked objects:
  2350 ;;		On entry : 0/0
  2351 ;;		On exit  : 0/0
  2352 ;;		Unchanged: 0/0
  2353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2354 ;;      Params:         0       5       0       0       0
  2355 ;;      Locals:         0       2       0       0       0
  2356 ;;      Temps:          1       0       0       0       0
  2357 ;;      Totals:         1       7       0       0       0
  2358 ;;Total ram usage:        8 bytes
  2359 ;; Hardware stack levels used: 1
  2360 ;; Hardware stack levels required when called: 3
  2361 ;; This function calls:
  2362 ;;		_fputc
  2363 ;;		_fputs
  2364 ;; This function is called by:
  2365 ;;		_dtoa
  2366 ;; This function uses a non-reentrant model
  2367 ;;
  2368                           
  2369     03F2                     _pad:	
  2370                           ;psect for function _pad
  2371                           
  2372     03F2                     l1230:	
  2373                           ;incstack = 0
  2374 ;; hardware stack exceeded
  2375                           ; Regs used in _pad: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2376                           
  2377                           
  2378                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c:
      +                           199:     if (flags & (1 << 0)) {
  2379     03F2  1283               	bcf	3,5	;RP0=0, select bank0
  2380     03F3  1303               	bcf	3,6	;RP1=0, select bank0
  2381     03F4  1C6E               	btfss	_flags,0
  2382     03F5  2BF7               	goto	u1031
  2383     03F6  2BF8               	goto	u1030
  2384     03F7                     u1031:
  2385     03F7  2C03               	goto	l1234
  2386     03F8                     u1030:
  2387     03F8                     l1232:
  2388                           
  2389                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
  2390     03F8  082A               	movf	pad@buf,w
  2391     03F9  00A0               	movwf	fputs@s
  2392     03FA  0828               	movf	pad@fp,w
  2393     03FB  00A1               	movwf	fputs@fp
  2394     03FC  0829               	movf	pad@fp+1,w
  2395     03FD  00A2               	movwf	fputs@fp+1
  2396     03FE  120A  118A  2340  120A  118A  	fcall	_fputs
  2397     0403                     l1234:
  2398                           
  2399                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
  2400     0403  1283               	bcf	3,5	;RP0=0, select bank0
  2401     0404  1303               	bcf	3,6	;RP1=0, select bank0
  2402     0405  1FAC               	btfss	pad@p+1,7
  2403     0406  2C08               	goto	u1041
  2404     0407  2C09               	goto	u1040
  2405     0408                     u1041:
  2406     0408  2C0B               	goto	l648
  2407     0409                     u1040:
  2408     0409                     l1236:
  2409                           
  2410                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  2411     0409  01AB               	clrf	pad@p
  2412     040A  01AC               	clrf	pad@p+1
  2413     040B                     l648:	
  2414                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 207:  }
  2415                           
  2416                           
  2417                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  2418     040B  01AD               	clrf	pad@i
  2419     040C  01AE               	clrf	pad@i+1
  2420                           
  2421                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  2422     040D  2C25               	goto	l1242
  2423     040E                     l1238:
  2424                           
  2425                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  2426     040E  3020               	movlw	32
  2427     040F  00F0               	movwf	fputc@c
  2428     0410  3000               	movlw	0
  2429     0411  00F1               	movwf	fputc@c+1
  2430     0412  1283               	bcf	3,5	;RP0=0, select bank0
  2431     0413  1303               	bcf	3,6	;RP1=0, select bank0
  2432     0414  0828               	movf	pad@fp,w
  2433     0415  00F2               	movwf	fputc@fp
  2434     0416  0829               	movf	pad@fp+1,w
  2435     0417  00F3               	movwf	fputc@fp+1
  2436     0418  120A  118A  25C7  120A  118A  	fcall	_fputc
  2437     041D                     l1240:
  2438                           
  2439                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 211:         ++i;
  2440     041D  3001               	movlw	1
  2441     041E  1283               	bcf	3,5	;RP0=0, select bank0
  2442     041F  1303               	bcf	3,6	;RP1=0, select bank0
  2443     0420  07AD               	addwf	pad@i,f
  2444     0421  1803               	skipnc
  2445     0422  0AAE               	incf	pad@i+1,f
  2446     0423  3000               	movlw	0
  2447     0424  07AE               	addwf	pad@i+1,f
  2448     0425                     l1242:
  2449                           
  2450                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  2451     0425  082E               	movf	pad@i+1,w
  2452     0426  3A80               	xorlw	128
  2453     0427  00FD               	movwf	??_pad
  2454     0428  082C               	movf	pad@p+1,w
  2455     0429  3A80               	xorlw	128
  2456     042A  027D               	subwf	??_pad,w
  2457     042B  1D03               	skipz
  2458     042C  2C2F               	goto	u1055
  2459     042D  082B               	movf	pad@p,w
  2460     042E  022D               	subwf	pad@i,w
  2461     042F                     u1055:
  2462     042F  1C03               	skipc
  2463     0430  2C32               	goto	u1051
  2464     0431  2C33               	goto	u1050
  2465     0432                     u1051:
  2466     0432  2C0E               	goto	l1238
  2467     0433                     u1050:
  2468     0433                     l651:
  2469                           
  2470                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
  2471     0433  1283               	bcf	3,5	;RP0=0, select bank0
  2472     0434  1303               	bcf	3,6	;RP1=0, select bank0
  2473     0435  186E               	btfsc	_flags,0
  2474     0436  2C38               	goto	u1061
  2475     0437  2C39               	goto	u1060
  2476     0438                     u1061:
  2477     0438  2C44               	goto	l653
  2478     0439                     u1060:
  2479     0439                     l1244:
  2480                           
  2481                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  2482     0439  082A               	movf	pad@buf,w
  2483     043A  00A0               	movwf	fputs@s
  2484     043B  0828               	movf	pad@fp,w
  2485     043C  00A1               	movwf	fputs@fp
  2486     043D  0829               	movf	pad@fp+1,w
  2487     043E  00A2               	movwf	fputs@fp+1
  2488     043F  120A  118A  2340  120A  118A  	fcall	_fputs
  2489     0444                     l653:
  2490     0444  0008               	return
  2491     0445                     __end_of_pad:
  2492                           
  2493                           	psect	text12
  2494     0340                     __ptext12:	
  2495 ;; *************** function _fputs *****************
  2496 ;; Defined at:
  2497 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_fputs.c"
  2498 ;; Parameters:    Size  Location     Type
  2499 ;;  s               1    0[BANK0 ] PTR const unsigned char 
  2500 ;;		 -> dbuf(32), 
  2501 ;;  fp              2    1[BANK0 ] PTR struct _IO_FILE
  2502 ;;		 -> sprintf@f(11), 
  2503 ;; Auto vars:     Size  Location     Type
  2504 ;;  i               2    6[BANK0 ] int 
  2505 ;;  c               1    5[BANK0 ] unsigned char 
  2506 ;; Return value:  Size  Location     Type
  2507 ;;                  2    0[BANK0 ] int 
  2508 ;; Registers used:
  2509 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2510 ;; Tracked objects:
  2511 ;;		On entry : 0/0
  2512 ;;		On exit  : 0/0
  2513 ;;		Unchanged: 0/0
  2514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2515 ;;      Params:         0       3       0       0       0
  2516 ;;      Locals:         0       3       0       0       0
  2517 ;;      Temps:          0       2       0       0       0
  2518 ;;      Totals:         0       8       0       0       0
  2519 ;;Total ram usage:        8 bytes
  2520 ;; Hardware stack levels used: 1
  2521 ;; Hardware stack levels required when called: 2
  2522 ;; This function calls:
  2523 ;;		_fputc
  2524 ;; This function is called by:
  2525 ;;		_pad
  2526 ;; This function uses a non-reentrant model
  2527 ;;
  2528                           
  2529     0340                     _fputs:	
  2530                           ;psect for function _fputs
  2531                           
  2532     0340                     l1126:	
  2533                           ;incstack = 0
  2534 ;; hardware stack exceeded
  2535                           ; Regs used in _fputs: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2536                           
  2537     0340  1283               	bcf	3,5	;RP0=0, select bank0
  2538     0341  1303               	bcf	3,6	;RP1=0, select bank0
  2539     0342  01A6               	clrf	fputs@i
  2540     0343  01A7               	clrf	fputs@i+1
  2541     0344  2B5D               	goto	l1132
  2542     0345                     l1128:
  2543     0345  0825               	movf	fputs@c,w
  2544     0346  00A3               	movwf	??_fputs
  2545     0347  01A4               	clrf	??_fputs+1
  2546     0348  0823               	movf	??_fputs,w
  2547     0349  00F0               	movwf	fputc@c
  2548     034A  0824               	movf	??_fputs+1,w
  2549     034B  00F1               	movwf	fputc@c+1
  2550     034C  0821               	movf	fputs@fp,w
  2551     034D  00F2               	movwf	fputc@fp
  2552     034E  0822               	movf	fputs@fp+1,w
  2553     034F  00F3               	movwf	fputc@fp+1
  2554     0350  120A  118A  25C7  120A  118A  	fcall	_fputc
  2555     0355                     l1130:
  2556     0355  3001               	movlw	1
  2557     0356  1283               	bcf	3,5	;RP0=0, select bank0
  2558     0357  1303               	bcf	3,6	;RP1=0, select bank0
  2559     0358  07A6               	addwf	fputs@i,f
  2560     0359  1803               	skipnc
  2561     035A  0AA7               	incf	fputs@i+1,f
  2562     035B  3000               	movlw	0
  2563     035C  07A7               	addwf	fputs@i+1,f
  2564     035D                     l1132:
  2565     035D  0826               	movf	fputs@i,w
  2566     035E  0720               	addwf	fputs@s,w
  2567     035F  00A3               	movwf	??_fputs
  2568     0360  0823               	movf	??_fputs,w
  2569     0361  0084               	movwf	4
  2570     0362  1383               	bcf	3,7	;select IRP bank0
  2571     0363  0800               	movf	0,w
  2572     0364  00A5               	movwf	fputs@c
  2573     0365  0825               	movf	fputs@c,w
  2574     0366  1D03               	btfss	3,2
  2575     0367  2B69               	goto	u791
  2576     0368  2B6A               	goto	u790
  2577     0369                     u791:
  2578     0369  2B45               	goto	l1128
  2579     036A                     u790:
  2580     036A                     l725:
  2581     036A  0008               	return
  2582     036B                     __end_of_fputs:
  2583                           
  2584                           	psect	text13
  2585     05C7                     __ptext13:	
  2586 ;; *************** function _fputc *****************
  2587 ;; Defined at:
  2588 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_fputc.c"
  2589 ;; Parameters:    Size  Location     Type
  2590 ;;  c               2    0[COMMON] int 
  2591 ;;  fp              2    2[COMMON] PTR struct _IO_FILE
  2592 ;;		 -> sprintf@f(11), 
  2593 ;; Auto vars:     Size  Location     Type
  2594 ;;		None
  2595 ;; Return value:  Size  Location     Type
  2596 ;;                  2    0[COMMON] int 
  2597 ;; Registers used:
  2598 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2599 ;; Tracked objects:
  2600 ;;		On entry : 0/0
  2601 ;;		On exit  : 0/0
  2602 ;;		Unchanged: 0/0
  2603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2604 ;;      Params:         4       0       0       0       0
  2605 ;;      Locals:         0       0       0       0       0
  2606 ;;      Temps:          9       0       0       0       0
  2607 ;;      Totals:        13       0       0       0       0
  2608 ;;Total ram usage:       13 bytes
  2609 ;; Hardware stack levels used: 1
  2610 ;; Hardware stack levels required when called: 1
  2611 ;; This function calls:
  2612 ;;		_putch
  2613 ;; This function is called by:
  2614 ;;		_pad
  2615 ;;		_vfpfcnvrt
  2616 ;;		_fputs
  2617 ;; This function uses a non-reentrant model
  2618 ;;
  2619                           
  2620     05C7                     _fputc:	
  2621                           ;psect for function _fputc
  2622                           
  2623     05C7                     l1112:	
  2624                           ;incstack = 0
  2625                           ; Regs used in _fputc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2626                           
  2627     05C7  0872               	movf	fputc@fp,w
  2628     05C8  0473               	iorwf	fputc@fp+1,w
  2629     05C9  1903               	btfsc	3,2
  2630     05CA  2DCC               	goto	u741
  2631     05CB  2DCD               	goto	u740
  2632     05CC                     u741:
  2633     05CC  2DD3               	goto	l1116
  2634     05CD                     u740:
  2635     05CD                     l1114:
  2636     05CD  0872               	movf	fputc@fp,w
  2637     05CE  0473               	iorwf	fputc@fp+1,w
  2638     05CF  1D03               	btfss	3,2
  2639     05D0  2DD2               	goto	u751
  2640     05D1  2DD3               	goto	u750
  2641     05D2                     u751:
  2642     05D2  2DDA               	goto	l1118
  2643     05D3                     u750:
  2644     05D3                     l1116:
  2645     05D3  0870               	movf	fputc@c,w
  2646     05D4  120A  118A  2245  120A  118A  	fcall	_putch
  2647     05D9  2E60               	goto	l717
  2648     05DA                     l1118:
  2649     05DA  0872               	movf	fputc@fp,w
  2650     05DB  3E09               	addlw	9
  2651     05DC  00F4               	movwf	??_fputc
  2652     05DD  0873               	movf	fputc@fp+1,w
  2653     05DE  1803               	skipnc
  2654     05DF  3E01               	addlw	1
  2655     05E0  3E00               	addlw	0
  2656     05E1  00F5               	movwf	??_fputc+1
  2657     05E2  0874               	movf	??_fputc,w
  2658     05E3  0084               	movwf	4
  2659     05E4  1783               	bsf	3,7
  2660     05E5  1C75               	btfss	??_fputc+1,0
  2661     05E6  1383               	bcf	3,7
  2662     05E7  0800               	movf	0,w
  2663     05E8  00F6               	movwf	??_fputc+2
  2664     05E9  0A84               	incf	4,f
  2665     05EA  0800               	movf	0,w
  2666     05EB  00F7               	movwf	??_fputc+3
  2667     05EC  0876               	movf	??_fputc+2,w
  2668     05ED  0477               	iorwf	??_fputc+3,w
  2669     05EE  1903               	btfsc	3,2
  2670     05EF  2DF1               	goto	u761
  2671     05F0  2DF2               	goto	u760
  2672     05F1                     u761:
  2673     05F1  2E24               	goto	l1122
  2674     05F2                     u760:
  2675     05F2                     l1120:
  2676     05F2  0872               	movf	fputc@fp,w
  2677     05F3  3E09               	addlw	9
  2678     05F4  00F4               	movwf	??_fputc
  2679     05F5  0873               	movf	fputc@fp+1,w
  2680     05F6  1803               	skipnc
  2681     05F7  3E01               	addlw	1
  2682     05F8  3E00               	addlw	0
  2683     05F9  00F5               	movwf	??_fputc+1
  2684     05FA  0874               	movf	??_fputc,w
  2685     05FB  0084               	movwf	4
  2686     05FC  1783               	bsf	3,7
  2687     05FD  1C75               	btfss	??_fputc+1,0
  2688     05FE  1383               	bcf	3,7
  2689     05FF  0800               	movf	0,w
  2690     0600  00F6               	movwf	??_fputc+2
  2691     0601  0A84               	incf	4,f
  2692     0602  0800               	movf	0,w
  2693     0603  00F7               	movwf	??_fputc+3
  2694     0604  0872               	movf	fputc@fp,w
  2695     0605  3E02               	addlw	2
  2696     0606  00F8               	movwf	??_fputc+4
  2697     0607  0873               	movf	fputc@fp+1,w
  2698     0608  1803               	skipnc
  2699     0609  3E01               	addlw	1
  2700     060A  3E00               	addlw	0
  2701     060B  00F9               	movwf	??_fputc+5
  2702     060C  0878               	movf	??_fputc+4,w
  2703     060D  0084               	movwf	4
  2704     060E  1783               	bsf	3,7
  2705     060F  1C79               	btfss	??_fputc+5,0
  2706     0610  1383               	bcf	3,7
  2707     0611  0800               	movf	0,w
  2708     0612  00FA               	movwf	??_fputc+6
  2709     0613  0A84               	incf	4,f
  2710     0614  0800               	movf	0,w
  2711     0615  00FB               	movwf	??_fputc+7
  2712     0616  087B               	movf	??_fputc+7,w
  2713     0617  3A80               	xorlw	128
  2714     0618  00FC               	movwf	??_fputc+8
  2715     0619  0877               	movf	??_fputc+3,w
  2716     061A  3A80               	xorlw	128
  2717     061B  027C               	subwf	??_fputc+8,w
  2718     061C  1D03               	skipz
  2719     061D  2E20               	goto	u775
  2720     061E  0876               	movf	??_fputc+2,w
  2721     061F  027A               	subwf	??_fputc+6,w
  2722     0620                     u775:
  2723     0620  1803               	skipnc
  2724     0621  2E23               	goto	u771
  2725     0622  2E24               	goto	u770
  2726     0623                     u771:
  2727     0623  2E60               	goto	l717
  2728     0624                     u770:
  2729     0624                     l1122:
  2730     0624  0872               	movf	fputc@fp,w
  2731     0625  0084               	movwf	4
  2732     0626  1783               	bsf	3,7
  2733     0627  1C73               	btfss	fputc@fp+1,0
  2734     0628  1383               	bcf	3,7
  2735     0629  0800               	movf	0,w
  2736     062A  00F4               	movwf	??_fputc
  2737     062B  0A84               	incf	4,f
  2738     062C  0800               	movf	0,w
  2739     062D  00F5               	movwf	??_fputc+1
  2740     062E  0872               	movf	fputc@fp,w
  2741     062F  3E02               	addlw	2
  2742     0630  00F6               	movwf	??_fputc+2
  2743     0631  0873               	movf	fputc@fp+1,w
  2744     0632  1803               	skipnc
  2745     0633  3E01               	addlw	1
  2746     0634  3E00               	addlw	0
  2747     0635  00F7               	movwf	??_fputc+3
  2748     0636  0876               	movf	??_fputc+2,w
  2749     0637  0084               	movwf	4
  2750     0638  1783               	bsf	3,7
  2751     0639  1C77               	btfss	??_fputc+3,0
  2752     063A  1383               	bcf	3,7
  2753     063B  0800               	movf	0,w
  2754     063C  0774               	addwf	??_fputc,w
  2755     063D  00F9               	movwf	??_fputc+5
  2756     063E  0875               	movf	??_fputc+1,w
  2757     063F  00F8               	movwf	??_fputc+4
  2758     0640  1803               	skipnc
  2759     0641  0AF8               	incf	??_fputc+4,f
  2760     0642  1F80               	btfss	0,7
  2761     0643  2E45               	goto	u780
  2762     0644  03F8               	decf	??_fputc+4,f
  2763     0645                     u780:
  2764     0645  0878               	movf	??_fputc+4,w
  2765     0646  00FA               	movwf	??_fputc+6
  2766     0647  0879               	movf	??_fputc+5,w
  2767     0648  0084               	movwf	4
  2768     0649  1783               	bsf	3,7
  2769     064A  1C7A               	btfss	??_fputc+6,0
  2770     064B  1383               	bcf	3,7
  2771     064C  0870               	movf	fputc@c,w
  2772     064D  0080               	movwf	0
  2773     064E  0872               	movf	fputc@fp,w
  2774     064F  3E02               	addlw	2
  2775     0650  00F4               	movwf	??_fputc
  2776     0651  0873               	movf	fputc@fp+1,w
  2777     0652  1803               	skipnc
  2778     0653  3E01               	addlw	1
  2779     0654  3E00               	addlw	0
  2780     0655  00F5               	movwf	??_fputc+1
  2781     0656  0874               	movf	??_fputc,w
  2782     0657  0084               	movwf	4
  2783     0658  1783               	bsf	3,7
  2784     0659  1C75               	btfss	??_fputc+1,0
  2785     065A  1383               	bcf	3,7
  2786     065B  3001               	movlw	1
  2787     065C  0780               	addwf	0,f
  2788     065D  0A84               	incf	4,f
  2789     065E  1803               	skipnc
  2790     065F  0A80               	incf	0,f
  2791     0660                     l717:
  2792     0660  0008               	return
  2793     0661                     __end_of_fputc:
  2794                           
  2795                           	psect	text14
  2796     0245                     __ptext14:	
  2797 ;; *************** function _putch *****************
  2798 ;; Defined at:
  2799 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\putch.c"
  2800 ;; Parameters:    Size  Location     Type
  2801 ;;  c               1    wreg     unsigned char 
  2802 ;; Auto vars:     Size  Location     Type
  2803 ;;  c               1    0[COMMON] unsigned char 
  2804 ;; Return value:  Size  Location     Type
  2805 ;;                  1    wreg      void 
  2806 ;; Registers used:
  2807 ;;		wreg
  2808 ;; Tracked objects:
  2809 ;;		On entry : 0/0
  2810 ;;		On exit  : 0/0
  2811 ;;		Unchanged: 0/0
  2812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2813 ;;      Params:         0       0       0       0       0
  2814 ;;      Locals:         0       0       0       0       0
  2815 ;;      Temps:          0       0       0       0       0
  2816 ;;      Totals:         0       0       0       0       0
  2817 ;;Total ram usage:        0 bytes
  2818 ;; Hardware stack levels used: 1
  2819 ;; This function calls:
  2820 ;;		Nothing
  2821 ;; This function is called by:
  2822 ;;		_fputc
  2823 ;; This function uses a non-reentrant model
  2824 ;;
  2825                           
  2826     0245                     _putch:	
  2827                           ;psect for function _putch
  2828                           
  2829     0245                     l728:	
  2830                           ;incstack = 0
  2831                           ; Regs used in _putch: [wreg]
  2832                           
  2833     0245  0008               	return
  2834     0246                     __end_of_putch:
  2835                           
  2836                           	psect	text15
  2837     025D                     __ptext15:	
  2838 ;; *************** function _abs *****************
  2839 ;; Defined at:
  2840 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\abs.c"
  2841 ;; Parameters:    Size  Location     Type
  2842 ;;  a               2    6[COMMON] int 
  2843 ;; Auto vars:     Size  Location     Type
  2844 ;;		None
  2845 ;; Return value:  Size  Location     Type
  2846 ;;                  2    6[COMMON] int 
  2847 ;; Registers used:
  2848 ;;		wreg, status,2, status,0
  2849 ;; Tracked objects:
  2850 ;;		On entry : 0/0
  2851 ;;		On exit  : 0/0
  2852 ;;		Unchanged: 0/0
  2853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2854 ;;      Params:         2       0       0       0       0
  2855 ;;      Locals:         0       0       0       0       0
  2856 ;;      Temps:          2       0       0       0       0
  2857 ;;      Totals:         4       0       0       0       0
  2858 ;;Total ram usage:        4 bytes
  2859 ;; Hardware stack levels used: 1
  2860 ;; This function calls:
  2861 ;;		Nothing
  2862 ;; This function is called by:
  2863 ;;		_dtoa
  2864 ;; This function uses a non-reentrant model
  2865 ;;
  2866                           
  2867     025D                     _abs:	
  2868                           ;psect for function _abs
  2869                           
  2870     025D                     l1246:	
  2871                           ;incstack = 0
  2872                           ; Regs used in _abs: [wreg+status,2+status,0]
  2873                           
  2874     025D  1BF7               	btfsc	abs@a+1,7
  2875     025E  2A60               	goto	u1071
  2876     025F  2A61               	goto	u1070
  2877     0260                     u1071:
  2878     0260  2A62               	goto	l1250
  2879     0261                     u1070:
  2880     0261                     l1248:
  2881     0261  2A6D               	goto	l705
  2882     0262                     l1250:
  2883     0262  0976               	comf	abs@a,w
  2884     0263  00F8               	movwf	??_abs
  2885     0264  0977               	comf	abs@a+1,w
  2886     0265  00F9               	movwf	??_abs+1
  2887     0266  0AF8               	incf	??_abs,f
  2888     0267  1903               	skipnz
  2889     0268  0AF9               	incf	??_abs+1,f
  2890     0269  0878               	movf	??_abs,w
  2891     026A  00F6               	movwf	?_abs
  2892     026B  0879               	movf	??_abs+1,w
  2893     026C  00F7               	movwf	?_abs+1
  2894     026D                     l705:
  2895     026D  0008               	return
  2896     026E                     __end_of_abs:
  2897                           
  2898                           	psect	text16
  2899     0498                     __ptext16:	
  2900 ;; *************** function ___awmod *****************
  2901 ;; Defined at:
  2902 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awmod.c"
  2903 ;; Parameters:    Size  Location     Type
  2904 ;;  divisor         2    0[COMMON] int 
  2905 ;;  dividend        2    2[COMMON] int 
  2906 ;; Auto vars:     Size  Location     Type
  2907 ;;  sign            1    5[COMMON] unsigned char 
  2908 ;;  counter         1    4[COMMON] unsigned char 
  2909 ;; Return value:  Size  Location     Type
  2910 ;;                  2    0[COMMON] int 
  2911 ;; Registers used:
  2912 ;;		wreg, status,2, status,0
  2913 ;; Tracked objects:
  2914 ;;		On entry : 0/0
  2915 ;;		On exit  : 0/0
  2916 ;;		Unchanged: 0/0
  2917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2918 ;;      Params:         4       0       0       0       0
  2919 ;;      Locals:         2       0       0       0       0
  2920 ;;      Temps:          0       0       0       0       0
  2921 ;;      Totals:         6       0       0       0       0
  2922 ;;Total ram usage:        6 bytes
  2923 ;; Hardware stack levels used: 1
  2924 ;; This function calls:
  2925 ;;		Nothing
  2926 ;; This function is called by:
  2927 ;;		_dtoa
  2928 ;; This function uses a non-reentrant model
  2929 ;;
  2930                           
  2931     0498                     ___awmod:	
  2932                           ;psect for function ___awmod
  2933                           
  2934     0498                     l1192:	
  2935                           ;incstack = 0
  2936                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2937                           
  2938     0498  01F5               	clrf	___awmod@sign
  2939     0499                     l1194:
  2940     0499  1FF3               	btfss	___awmod@dividend+1,7
  2941     049A  2C9C               	goto	u941
  2942     049B  2C9D               	goto	u940
  2943     049C                     u941:
  2944     049C  2CA4               	goto	l1200
  2945     049D                     u940:
  2946     049D                     l1196:
  2947     049D  09F2               	comf	___awmod@dividend,f
  2948     049E  09F3               	comf	___awmod@dividend+1,f
  2949     049F  0AF2               	incf	___awmod@dividend,f
  2950     04A0  1903               	skipnz
  2951     04A1  0AF3               	incf	___awmod@dividend+1,f
  2952     04A2                     l1198:
  2953     04A2  3001               	movlw	1
  2954     04A3  00F5               	movwf	___awmod@sign
  2955     04A4                     l1200:
  2956     04A4  1FF1               	btfss	___awmod@divisor+1,7
  2957     04A5  2CA7               	goto	u951
  2958     04A6  2CA8               	goto	u950
  2959     04A7                     u951:
  2960     04A7  2CAD               	goto	l1204
  2961     04A8                     u950:
  2962     04A8                     l1202:
  2963     04A8  09F0               	comf	___awmod@divisor,f
  2964     04A9  09F1               	comf	___awmod@divisor+1,f
  2965     04AA  0AF0               	incf	___awmod@divisor,f
  2966     04AB  1903               	skipnz
  2967     04AC  0AF1               	incf	___awmod@divisor+1,f
  2968     04AD                     l1204:
  2969     04AD  0870               	movf	___awmod@divisor,w
  2970     04AE  0471               	iorwf	___awmod@divisor+1,w
  2971     04AF  1903               	btfsc	3,2
  2972     04B0  2CB2               	goto	u961
  2973     04B1  2CB3               	goto	u960
  2974     04B2                     u961:
  2975     04B2  2CE0               	goto	l1222
  2976     04B3                     u960:
  2977     04B3                     l1206:
  2978     04B3  3001               	movlw	1
  2979     04B4  00F4               	movwf	___awmod@counter
  2980     04B5  2CBF               	goto	l1212
  2981     04B6                     l1208:
  2982     04B6  3001               	movlw	1
  2983     04B7                     u975:
  2984     04B7  1003               	clrc
  2985     04B8  0DF0               	rlf	___awmod@divisor,f
  2986     04B9  0DF1               	rlf	___awmod@divisor+1,f
  2987     04BA  3EFF               	addlw	-1
  2988     04BB  1D03               	skipz
  2989     04BC  2CB7               	goto	u975
  2990     04BD                     l1210:
  2991     04BD  3001               	movlw	1
  2992     04BE  07F4               	addwf	___awmod@counter,f
  2993     04BF                     l1212:
  2994     04BF  1FF1               	btfss	___awmod@divisor+1,7
  2995     04C0  2CC2               	goto	u981
  2996     04C1  2CC3               	goto	u980
  2997     04C2                     u981:
  2998     04C2  2CB6               	goto	l1208
  2999     04C3                     u980:
  3000     04C3                     l1214:
  3001     04C3  0871               	movf	___awmod@divisor+1,w
  3002     04C4  0273               	subwf	___awmod@dividend+1,w
  3003     04C5  1D03               	skipz
  3004     04C6  2CC9               	goto	u995
  3005     04C7  0870               	movf	___awmod@divisor,w
  3006     04C8  0272               	subwf	___awmod@dividend,w
  3007     04C9                     u995:
  3008     04C9  1C03               	skipc
  3009     04CA  2CCC               	goto	u991
  3010     04CB  2CCD               	goto	u990
  3011     04CC                     u991:
  3012     04CC  2CD3               	goto	l1218
  3013     04CD                     u990:
  3014     04CD                     l1216:
  3015     04CD  0870               	movf	___awmod@divisor,w
  3016     04CE  02F2               	subwf	___awmod@dividend,f
  3017     04CF  0871               	movf	___awmod@divisor+1,w
  3018     04D0  1C03               	skipc
  3019     04D1  03F3               	decf	___awmod@dividend+1,f
  3020     04D2  02F3               	subwf	___awmod@dividend+1,f
  3021     04D3                     l1218:
  3022     04D3  3001               	movlw	1
  3023     04D4                     u1005:
  3024     04D4  1003               	clrc
  3025     04D5  0CF1               	rrf	___awmod@divisor+1,f
  3026     04D6  0CF0               	rrf	___awmod@divisor,f
  3027     04D7  3EFF               	addlw	-1
  3028     04D8  1D03               	skipz
  3029     04D9  2CD4               	goto	u1005
  3030     04DA                     l1220:
  3031     04DA  3001               	movlw	1
  3032     04DB  02F4               	subwf	___awmod@counter,f
  3033     04DC  1D03               	btfss	3,2
  3034     04DD  2CDF               	goto	u1011
  3035     04DE  2CE0               	goto	u1010
  3036     04DF                     u1011:
  3037     04DF  2CC3               	goto	l1214
  3038     04E0                     u1010:
  3039     04E0                     l1222:
  3040     04E0  0875               	movf	___awmod@sign,w
  3041     04E1  1903               	btfsc	3,2
  3042     04E2  2CE4               	goto	u1021
  3043     04E3  2CE5               	goto	u1020
  3044     04E4                     u1021:
  3045     04E4  2CEA               	goto	l1226
  3046     04E5                     u1020:
  3047     04E5                     l1224:
  3048     04E5  09F2               	comf	___awmod@dividend,f
  3049     04E6  09F3               	comf	___awmod@dividend+1,f
  3050     04E7  0AF2               	incf	___awmod@dividend,f
  3051     04E8  1903               	skipnz
  3052     04E9  0AF3               	incf	___awmod@dividend+1,f
  3053     04EA                     l1226:
  3054     04EA  0873               	movf	___awmod@dividend+1,w
  3055     04EB  00F1               	movwf	?___awmod+1
  3056     04EC  0872               	movf	___awmod@dividend,w
  3057     04ED  00F0               	movwf	?___awmod
  3058     04EE                     l331:
  3059     04EE  0008               	return
  3060     04EF                     __end_of___awmod:
  3061                           
  3062                           	psect	text17
  3063     04EF                     __ptext17:	
  3064 ;; *************** function ___awdiv *****************
  3065 ;; Defined at:
  3066 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awdiv.c"
  3067 ;; Parameters:    Size  Location     Type
  3068 ;;  divisor         2    0[COMMON] int 
  3069 ;;  dividend        2    2[COMMON] int 
  3070 ;; Auto vars:     Size  Location     Type
  3071 ;;  quotient        2    6[COMMON] int 
  3072 ;;  sign            1    5[COMMON] unsigned char 
  3073 ;;  counter         1    4[COMMON] unsigned char 
  3074 ;; Return value:  Size  Location     Type
  3075 ;;                  2    0[COMMON] int 
  3076 ;; Registers used:
  3077 ;;		wreg, status,2, status,0
  3078 ;; Tracked objects:
  3079 ;;		On entry : 0/0
  3080 ;;		On exit  : 0/0
  3081 ;;		Unchanged: 0/0
  3082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3083 ;;      Params:         4       0       0       0       0
  3084 ;;      Locals:         4       0       0       0       0
  3085 ;;      Temps:          0       0       0       0       0
  3086 ;;      Totals:         8       0       0       0       0
  3087 ;;Total ram usage:        8 bytes
  3088 ;; Hardware stack levels used: 1
  3089 ;; This function calls:
  3090 ;;		Nothing
  3091 ;; This function is called by:
  3092 ;;		_dtoa
  3093 ;; This function uses a non-reentrant model
  3094 ;;
  3095                           
  3096     04EF                     ___awdiv:	
  3097                           ;psect for function ___awdiv
  3098                           
  3099     04EF                     l1148:	
  3100                           ;incstack = 0
  3101                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3102                           
  3103     04EF  01F5               	clrf	___awdiv@sign
  3104     04F0                     l1150:
  3105     04F0  1FF1               	btfss	___awdiv@divisor+1,7
  3106     04F1  2CF3               	goto	u841
  3107     04F2  2CF4               	goto	u840
  3108     04F3                     u841:
  3109     04F3  2CFB               	goto	l1156
  3110     04F4                     u840:
  3111     04F4                     l1152:
  3112     04F4  09F0               	comf	___awdiv@divisor,f
  3113     04F5  09F1               	comf	___awdiv@divisor+1,f
  3114     04F6  0AF0               	incf	___awdiv@divisor,f
  3115     04F7  1903               	skipnz
  3116     04F8  0AF1               	incf	___awdiv@divisor+1,f
  3117     04F9                     l1154:
  3118     04F9  3001               	movlw	1
  3119     04FA  00F5               	movwf	___awdiv@sign
  3120     04FB                     l1156:
  3121     04FB  1FF3               	btfss	___awdiv@dividend+1,7
  3122     04FC  2CFE               	goto	u851
  3123     04FD  2CFF               	goto	u850
  3124     04FE                     u851:
  3125     04FE  2D06               	goto	l1162
  3126     04FF                     u850:
  3127     04FF                     l1158:
  3128     04FF  09F2               	comf	___awdiv@dividend,f
  3129     0500  09F3               	comf	___awdiv@dividend+1,f
  3130     0501  0AF2               	incf	___awdiv@dividend,f
  3131     0502  1903               	skipnz
  3132     0503  0AF3               	incf	___awdiv@dividend+1,f
  3133     0504                     l1160:
  3134     0504  3001               	movlw	1
  3135     0505  06F5               	xorwf	___awdiv@sign,f
  3136     0506                     l1162:
  3137     0506  01F6               	clrf	___awdiv@quotient
  3138     0507  01F7               	clrf	___awdiv@quotient+1
  3139     0508                     l1164:
  3140     0508  0870               	movf	___awdiv@divisor,w
  3141     0509  0471               	iorwf	___awdiv@divisor+1,w
  3142     050A  1903               	btfsc	3,2
  3143     050B  2D0D               	goto	u861
  3144     050C  2D0E               	goto	u860
  3145     050D                     u861:
  3146     050D  2D43               	goto	l1184
  3147     050E                     u860:
  3148     050E                     l1166:
  3149     050E  3001               	movlw	1
  3150     050F  00F4               	movwf	___awdiv@counter
  3151     0510  2D1A               	goto	l1172
  3152     0511                     l1168:
  3153     0511  3001               	movlw	1
  3154     0512                     u875:
  3155     0512  1003               	clrc
  3156     0513  0DF0               	rlf	___awdiv@divisor,f
  3157     0514  0DF1               	rlf	___awdiv@divisor+1,f
  3158     0515  3EFF               	addlw	-1
  3159     0516  1D03               	skipz
  3160     0517  2D12               	goto	u875
  3161     0518                     l1170:
  3162     0518  3001               	movlw	1
  3163     0519  07F4               	addwf	___awdiv@counter,f
  3164     051A                     l1172:
  3165     051A  1FF1               	btfss	___awdiv@divisor+1,7
  3166     051B  2D1D               	goto	u881
  3167     051C  2D1E               	goto	u880
  3168     051D                     u881:
  3169     051D  2D11               	goto	l1168
  3170     051E                     u880:
  3171     051E                     l1174:
  3172     051E  3001               	movlw	1
  3173     051F                     u895:
  3174     051F  1003               	clrc
  3175     0520  0DF6               	rlf	___awdiv@quotient,f
  3176     0521  0DF7               	rlf	___awdiv@quotient+1,f
  3177     0522  3EFF               	addlw	-1
  3178     0523  1D03               	skipz
  3179     0524  2D1F               	goto	u895
  3180     0525  0871               	movf	___awdiv@divisor+1,w
  3181     0526  0273               	subwf	___awdiv@dividend+1,w
  3182     0527  1D03               	skipz
  3183     0528  2D2B               	goto	u905
  3184     0529  0870               	movf	___awdiv@divisor,w
  3185     052A  0272               	subwf	___awdiv@dividend,w
  3186     052B                     u905:
  3187     052B  1C03               	skipc
  3188     052C  2D2E               	goto	u901
  3189     052D  2D2F               	goto	u900
  3190     052E                     u901:
  3191     052E  2D36               	goto	l1180
  3192     052F                     u900:
  3193     052F                     l1176:
  3194     052F  0870               	movf	___awdiv@divisor,w
  3195     0530  02F2               	subwf	___awdiv@dividend,f
  3196     0531  0871               	movf	___awdiv@divisor+1,w
  3197     0532  1C03               	skipc
  3198     0533  03F3               	decf	___awdiv@dividend+1,f
  3199     0534  02F3               	subwf	___awdiv@dividend+1,f
  3200     0535                     l1178:
  3201     0535  1476               	bsf	___awdiv@quotient,0
  3202     0536                     l1180:
  3203     0536  3001               	movlw	1
  3204     0537                     u915:
  3205     0537  1003               	clrc
  3206     0538  0CF1               	rrf	___awdiv@divisor+1,f
  3207     0539  0CF0               	rrf	___awdiv@divisor,f
  3208     053A  3EFF               	addlw	-1
  3209     053B  1D03               	skipz
  3210     053C  2D37               	goto	u915
  3211     053D                     l1182:
  3212     053D  3001               	movlw	1
  3213     053E  02F4               	subwf	___awdiv@counter,f
  3214     053F  1D03               	btfss	3,2
  3215     0540  2D42               	goto	u921
  3216     0541  2D43               	goto	u920
  3217     0542                     u921:
  3218     0542  2D1E               	goto	l1174
  3219     0543                     u920:
  3220     0543                     l1184:
  3221     0543  0875               	movf	___awdiv@sign,w
  3222     0544  1903               	btfsc	3,2
  3223     0545  2D47               	goto	u931
  3224     0546  2D48               	goto	u930
  3225     0547                     u931:
  3226     0547  2D4D               	goto	l1188
  3227     0548                     u930:
  3228     0548                     l1186:
  3229     0548  09F6               	comf	___awdiv@quotient,f
  3230     0549  09F7               	comf	___awdiv@quotient+1,f
  3231     054A  0AF6               	incf	___awdiv@quotient,f
  3232     054B  1903               	skipnz
  3233     054C  0AF7               	incf	___awdiv@quotient+1,f
  3234     054D                     l1188:
  3235     054D  0877               	movf	___awdiv@quotient+1,w
  3236     054E  00F1               	movwf	?___awdiv+1
  3237     054F  0876               	movf	___awdiv@quotient,w
  3238     0550  00F0               	movwf	?___awdiv
  3239     0551                     l318:
  3240     0551  0008               	return
  3241     0552                     __end_of___awdiv:
  3242                           
  3243                           	psect	text18
  3244     031A                     __ptext18:	
  3245 ;; *************** function _lcd_string *****************
  3246 ;; Defined at:
  3247 ;;		line 45 in file "atividade7.c"
  3248 ;; Parameters:    Size  Location     Type
  3249 ;;  str             2    3[COMMON] PTR const unsigned char 
  3250 ;;		 -> STR_2(17), atualiza_lcd@buffer(16), 
  3251 ;; Auto vars:     Size  Location     Type
  3252 ;;		None
  3253 ;; Return value:  Size  Location     Type
  3254 ;;                  1    wreg      void 
  3255 ;; Registers used:
  3256 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3257 ;; Tracked objects:
  3258 ;;		On entry : 0/0
  3259 ;;		On exit  : 0/0
  3260 ;;		Unchanged: 0/0
  3261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3262 ;;      Params:         2       0       0       0       0
  3263 ;;      Locals:         0       0       0       0       0
  3264 ;;      Temps:          0       0       0       0       0
  3265 ;;      Totals:         2       0       0       0       0
  3266 ;;Total ram usage:        2 bytes
  3267 ;; Hardware stack levels used: 1
  3268 ;; Hardware stack levels required when called: 1
  3269 ;; This function calls:
  3270 ;;		_lcd_data
  3271 ;; This function is called by:
  3272 ;;		_atualiza_lcd
  3273 ;; This function uses a non-reentrant model
  3274 ;;
  3275                           
  3276     031A                     _lcd_string:	
  3277                           ;psect for function _lcd_string
  3278                           
  3279     031A                     l1394:	
  3280                           ;incstack = 0
  3281                           ; Regs used in _lcd_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3282                           
  3283                           
  3284                           ;atividade7.c: 46:     while (*str) {
  3285     031A  2B2F               	goto	l1400
  3286     031B                     l1396:
  3287                           
  3288                           ;atividade7.c: 47:         lcd_data(*str++);
  3289     031B  0874               	movf	lcd_string@str+1,w
  3290     031C  00FF               	movwf	btemp+1
  3291     031D  0873               	movf	lcd_string@str,w
  3292     031E  0084               	movwf	4
  3293     031F  120A  118A  2003  120A  118A  	fcall	stringtab
  3294     0324  120A  118A  2282  120A  118A  	fcall	_lcd_data
  3295     0329                     l1398:
  3296     0329  3001               	movlw	1
  3297     032A  07F3               	addwf	lcd_string@str,f
  3298     032B  1803               	skipnc
  3299     032C  0AF4               	incf	lcd_string@str+1,f
  3300     032D  3000               	movlw	0
  3301     032E  07F4               	addwf	lcd_string@str+1,f
  3302     032F                     l1400:
  3303                           
  3304                           ;atividade7.c: 46:     while (*str) {
  3305     032F  0874               	movf	lcd_string@str+1,w
  3306     0330  1283               	bcf	3,5	;RP0=0, select bank0
  3307     0331  1303               	bcf	3,6	;RP1=0, select bank0
  3308     0332  00FF               	movwf	btemp+1
  3309     0333  0873               	movf	lcd_string@str,w
  3310     0334  0084               	movwf	4
  3311     0335  120A  118A  2003  120A  118A  	fcall	stringtab
  3312     033A  3A00               	xorlw	0
  3313     033B  1D03               	skipz
  3314     033C  2B3E               	goto	u1261
  3315     033D  2B3F               	goto	u1260
  3316     033E                     u1261:
  3317     033E  2B1B               	goto	l1396
  3318     033F                     u1260:
  3319     033F                     l36:
  3320     033F  0008               	return
  3321     0340                     __end_of_lcd_string:
  3322                           
  3323                           	psect	text19
  3324     0282                     __ptext19:	
  3325 ;; *************** function _lcd_data *****************
  3326 ;; Defined at:
  3327 ;;		line 29 in file "atividade7.c"
  3328 ;; Parameters:    Size  Location     Type
  3329 ;;  data            1    wreg     unsigned char 
  3330 ;; Auto vars:     Size  Location     Type
  3331 ;;  data            1    2[COMMON] unsigned char 
  3332 ;; Return value:  Size  Location     Type
  3333 ;;                  1    wreg      void 
  3334 ;; Registers used:
  3335 ;;		wreg
  3336 ;; Tracked objects:
  3337 ;;		On entry : 0/0
  3338 ;;		On exit  : 0/0
  3339 ;;		Unchanged: 0/0
  3340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3341 ;;      Params:         0       0       0       0       0
  3342 ;;      Locals:         1       0       0       0       0
  3343 ;;      Temps:          2       0       0       0       0
  3344 ;;      Totals:         3       0       0       0       0
  3345 ;;Total ram usage:        3 bytes
  3346 ;; Hardware stack levels used: 1
  3347 ;; This function calls:
  3348 ;;		Nothing
  3349 ;; This function is called by:
  3350 ;;		_lcd_string
  3351 ;; This function uses a non-reentrant model
  3352 ;;
  3353                           
  3354     0282                     _lcd_data:	
  3355                           ;psect for function _lcd_data
  3356                           
  3357                           
  3358                           ;incstack = 0
  3359                           ; Regs used in _lcd_data: [wreg]
  3360                           ;lcd_data@data stored from wreg
  3361     0282  00F2               	movwf	lcd_data@data
  3362     0283                     l1368:
  3363                           
  3364                           ;atividade7.c: 30:     PORTD = data;
  3365     0283  0872               	movf	lcd_data@data,w
  3366     0284  1283               	bcf	3,5	;RP0=0, select bank0
  3367     0285  1303               	bcf	3,6	;RP1=0, select bank0
  3368     0286  0088               	movwf	8	;volatile
  3369     0287                     l1370:
  3370                           
  3371                           ;atividade7.c: 31:     PORTEbits.RE0 = 1;
  3372     0287  1409               	bsf	9,0	;volatile
  3373     0288                     l1372:
  3374                           
  3375                           ;atividade7.c: 32:     PORTEbits.RE1 = 1;
  3376     0288  1489               	bsf	9,1	;volatile
  3377                           
  3378                           ;atividade7.c: 33:     _delay((unsigned long)((5)*(20000000/4000.0)));
  3379     0289  3021               	movlw	33
  3380     028A  00F1               	movwf	??_lcd_data+1
  3381     028B  3076               	movlw	118
  3382     028C  00F0               	movwf	??_lcd_data
  3383     028D                     u1487:
  3384     028D  0BF0               	decfsz	??_lcd_data,f
  3385     028E  2A8D               	goto	u1487
  3386     028F  0BF1               	decfsz	??_lcd_data+1,f
  3387     0290  2A8D               	goto	u1487
  3388     0291  0000               	nop
  3389     0292                     l1374:
  3390                           
  3391                           ;atividade7.c: 34:     PORTEbits.RE1 = 0;
  3392     0292  1283               	bcf	3,5	;RP0=0, select bank0
  3393     0293  1303               	bcf	3,6	;RP1=0, select bank0
  3394     0294  1089               	bcf	9,1	;volatile
  3395     0295                     l27:
  3396     0295  0008               	return
  3397     0296                     __end_of_lcd_data:
  3398                           
  3399                           	psect	text20
  3400     026E                     __ptext20:	
  3401 ;; *************** function _lcd_command *****************
  3402 ;; Defined at:
  3403 ;;		line 37 in file "atividade7.c"
  3404 ;; Parameters:    Size  Location     Type
  3405 ;;  cmd             1    wreg     unsigned char 
  3406 ;; Auto vars:     Size  Location     Type
  3407 ;;  cmd             1    2[COMMON] unsigned char 
  3408 ;; Return value:  Size  Location     Type
  3409 ;;                  1    wreg      void 
  3410 ;; Registers used:
  3411 ;;		wreg
  3412 ;; Tracked objects:
  3413 ;;		On entry : 0/0
  3414 ;;		On exit  : 0/0
  3415 ;;		Unchanged: 0/0
  3416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3417 ;;      Params:         0       0       0       0       0
  3418 ;;      Locals:         1       0       0       0       0
  3419 ;;      Temps:          2       0       0       0       0
  3420 ;;      Totals:         3       0       0       0       0
  3421 ;;Total ram usage:        3 bytes
  3422 ;; Hardware stack levels used: 1
  3423 ;; This function calls:
  3424 ;;		Nothing
  3425 ;; This function is called by:
  3426 ;;		_lcd_initialise
  3427 ;;		_atualiza_lcd
  3428 ;; This function uses a non-reentrant model
  3429 ;;
  3430                           
  3431     026E                     _lcd_command:	
  3432                           ;psect for function _lcd_command
  3433                           
  3434                           
  3435                           ;incstack = 0
  3436                           ; Regs used in _lcd_command: [wreg]
  3437                           ;lcd_command@cmd stored from wreg
  3438     026E  00F2               	movwf	lcd_command@cmd
  3439     026F                     l1386:
  3440                           
  3441                           ;atividade7.c: 38:     PORTD = cmd;
  3442     026F  0872               	movf	lcd_command@cmd,w
  3443     0270  1283               	bcf	3,5	;RP0=0, select bank0
  3444     0271  1303               	bcf	3,6	;RP1=0, select bank0
  3445     0272  0088               	movwf	8	;volatile
  3446     0273                     l1388:
  3447                           
  3448                           ;atividade7.c: 39:     PORTEbits.RE0 = 0;
  3449     0273  1009               	bcf	9,0	;volatile
  3450     0274                     l1390:
  3451                           
  3452                           ;atividade7.c: 40:     PORTEbits.RE1 = 1;
  3453     0274  1489               	bsf	9,1	;volatile
  3454                           
  3455                           ;atividade7.c: 41:     _delay((unsigned long)((5)*(20000000/4000.0)));
  3456     0275  3021               	movlw	33
  3457     0276  00F1               	movwf	??_lcd_command+1
  3458     0277  3076               	movlw	118
  3459     0278  00F0               	movwf	??_lcd_command
  3460     0279                     u1497:
  3461     0279  0BF0               	decfsz	??_lcd_command,f
  3462     027A  2A79               	goto	u1497
  3463     027B  0BF1               	decfsz	??_lcd_command+1,f
  3464     027C  2A79               	goto	u1497
  3465     027D  0000               	nop
  3466     027E                     l1392:
  3467                           
  3468                           ;atividade7.c: 42:     PORTEbits.RE1 = 0;
  3469     027E  1283               	bcf	3,5	;RP0=0, select bank0
  3470     027F  1303               	bcf	3,6	;RP1=0, select bank0
  3471     0280  1089               	bcf	9,1	;volatile
  3472     0281                     l30:
  3473     0281  0008               	return
  3474     0282                     __end_of_lcd_command:
  3475     0002                     ___latbits      equ	2
  3476     007E                     btemp           set	126	;btemp
  3477     007E                     wtemp0          set	126
  3478                           
  3479                           	psect	config
  3480                           
  3481                           ;Config register CONFIG @ 0x2007
  3482                           ;	Oscillator Selection bits
  3483                           ;	FOSC = HS, HS oscillator
  3484                           ;	Watchdog Timer Enable bit
  3485                           ;	WDTE = OFF, WDT disabled
  3486                           ;	Power-up Timer Enable bit
  3487                           ;	PWRTE = OFF, PWRT disabled
  3488                           ;	FLASH Program Memory Code Protection bits
  3489                           ;	CP = OFF, Code protection off
  3490                           ;	Brown-out Reset Enable bit
  3491                           ;	BOREN = OFF, BOR disabled
  3492                           ;	Low Voltage In-Circuit Serial Programming Enable bit
  3493                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  3494                           ;	Data EE Memory Code Protection
  3495                           ;	CPD = OFF, Code Protection off
  3496                           ;	FLASH Program Memory Write Enable
  3497                           ;	WRT = OFF, Unprotected program memory may not be written to by EECON control
  3498                           ;	In-Circuit Debugger Mode bit
  3499                           ;	DEBUG = 0x1, unprogrammed default
  3500     2007                     	org	8199
  3501     2007  3D3A               	dw	15674

Data Sizes:
    Strings     24
    Constant    0
    Data        1
    BSS         39
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     78      80
    BANK1            80      0      38
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> atualiza_lcd@buffer(BANK0[16]), 

    f$.$source	PTR const unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> atualiza_lcd@buffer(BANK0[16]), 

    fputc@fp$.$source	PTR const unsigned char  size(1) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    lcd_string@str	PTR const unsigned char  size(2) Largest target is 17
		 -> atualiza_lcd@buffer(BANK0[16]), STR_2(CODE[17]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    S581$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> atualiza_lcd@buffer(BANK0[16]), 

    S581$source	PTR const unsigned char  size(1) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_1(CODE[7]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 16
		 -> atualiza_lcd@buffer(BANK0[16]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 7
		 -> STR_1(CODE[7]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 7
		 -> STR_1(CODE[7]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_1(CODE[7]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 


Critical Paths under _main in COMMON

    _lcd_initialise->_lcd_command
    _read_prec_or_width->___wmul
    _dtoa->_pad
    _pad->_fputc
    _fputs->_fputc
    _abs->___awmod
    _lcd_string->_lcd_data

Critical Paths under _main in BANK0

    _main->_atualiza_lcd
    _atualiza_lcd->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    3385
                                             77 BANK0      1     1      0
                       _atualiza_lcd
                           _debounce
                     _lcd_initialise
                            _teclado
 ---------------------------------------------------------------------------------
 (1) _teclado                                              1     1      0      39
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _lcd_initialise                                       0     0      0      29
                        _lcd_command
 ---------------------------------------------------------------------------------
 (1) _debounce                                             3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _atualiza_lcd                                        16    16      0    3250
                                             61 BANK0     16    16      0
                        _lcd_command
                         _lcd_string
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             19    15      4    3095
                                             44 BANK0     17    13      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             5     1      4    2892
                                             39 BANK0      5     1      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           13     9      4    2758
                                             27 BANK0     12     8      4
                               _dtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (5) _read_prec_or_width                                   5     3      2     276
                                              6 COMMON     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4      94
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                12     8      4    1825
                                             15 BANK0     12     8      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  8     3      5     747
                                             13 COMMON     1     1      0
                                              8 BANK0      7     2      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                8     5      3     333
                                              0 BANK0      8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                               13     9      4     232
                                              0 COMMON    13     9      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2      67
                                              6 COMMON     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     298
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     302
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _lcd_string                                           2     0      2      76
                                              3 COMMON     2     0      2
                           _lcd_data
 ---------------------------------------------------------------------------------
 (3) _lcd_data                                             3     3      0      29
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _lcd_command                                          3     3      0      29
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _atualiza_lcd
     _lcd_command
     _lcd_string
       _lcd_data
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _fputc
           _read_prec_or_width
             ___wmul
   _debounce
   _lcd_initialise
     _lcd_command
   _teclado

Address spaces:
Name               Size   Autos  Total    Usage
BANK3               96      0       0      0.0%
BITBANK3            96      0       0      0.0%
BANK2               96      0       0      0.0%
BITBANK2            96      0       0      0.0%
BANK1               80      0      38     47.5%
BITBANK1            80      0       0      0.0%
BANK0               80     78      80    100.0%
BITBANK0            80      0       0      0.0%
COMMON              14     14      14    100.0%
BITCOMMON           14      0       0      0.0%
DATA                 0      0     132      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Sun Dec 08 23:41:01 2024

                         pc 0002                lcd_data@data 0072                          l30 0281  
                        l42 025C                          l50 0581                          l27 0295  
                        l51 0587                          l36 033F                          l52 058D  
                        l61 05C6                          l53 0597                          l54 059D  
                        l46 0565                          l39 02AE                          l55 05A3  
                        l47 056B                          l64 03A0                          l56 05A9  
                        l48 0571                          l57 05B3                          l49 057B  
                        l58 05B9                          l59 05BF                ___awdiv@sign 0075  
                        fsr 0004         ___wmul@multiplicand 0072                         l331 04EE  
                       l165 0301                         l318 0551                         l167 0319  
                       l705 026D                         l651 0433                         l660 0751  
                       l628 02F4                         l717 0660                         l725 036A  
                       l653 0444                         l728 0245                         l648 040B  
                       l656 0753                         l692 0720                         l684 0688  
                       l669 07EB                         l677 0497                         l686 068E  
                       l698 02D1                         u800 02FB                         u801 02FA  
                       u900 052F                         u740 05CD                         u901 052E  
                       u741 05CC                         u750 05D3                         u830 0315  
                       u751 05D2                         u831 0314                         u815 0302  
                       u920 0543                         u840 04F4                         u760 05F2  
                       u921 0542                         u905 052B                         u841 04F3  
                       u761 05F1                         u825 0309                         u930 0548  
                       u850 04FF                         u770 0624                         u931 0547  
                       u915 0537                         u851 04FE                         u771 0623  
                       u860 050E                         u940 049D                         u780 0645  
                       u861 050D                         u941 049C                         u950 04A8  
                       u790 036A                         u951 04A7                         u775 0620  
                       u791 0369                         u880 051E                         u960 04B3  
                       u881 051D                         u961 04B2                         u875 0512  
                       u980 04C3                         u981 04C2                         u990 04CD  
                       u895 051F                         u991 04CC                         u975 04B7  
                       u995 04C9                         _abs 025D                         _pad 03F2  
                       fsr0 0004                         indf 0000                ___awmod@sign 0075  
                      l1200 04A4                        l1120 05F2                        l1112 05C7  
                      l1210 04BD                        l1202 04A8                        l1122 0624  
                      l1114 05CD                        l1130 0355                        ?_abs 0076  
                      l1220 04DA                        l1212 04BF                        l1204 04AD  
                      l1116 05D3                        l1132 035D                        l1140 0308  
                      l1300 0445                        l1150 04F0                        l1214 04C3  
                      l1206 04B3                        l1222 04E0                        l1118 05DA  
                      l1126 0340                        l1230 03F2                        l1142 030F  
                      l1134 02F5                        l1310 047D                        l1302 0447  
                      l1400 032F                        l1160 0504                        l1152 04F4  
                      l1224 04E5                        l1216 04CD                        l1208 04B6  
                      l1128 0345                        l1240 041D                        l1232 03F8  
                      l1144 0315                        l1136 02F7                        l1304 0456  
                      l1312 0482                        l1320 0672                        l1170 0518  
                      l1162 0506                        l1154 04F9                        l1226 04EA  
                      l1218 04D3                        l1250 0262                        l1242 0425  
                      l1234 0403                        l1138 02FB                        l1314 0493  
                      l1306 045A                        l1322 0676                        l1410 02DE  
                      l1402 02D2                        l1180 0536                        l1172 051A  
                      l1164 0508                        l1156 04FB                        l1148 04EF  
                      l1244 0439                        l1236 0409                        l1260 073D  
                      l1308 0468                        l1340 06B6                        l1332 0691  
                      l1324 067E                        l1412 02EB                        l1404 02D6  
                      l1420 0552                        l1182 053D                        l1174 051E  
                      l1166 050E                        l1158 04FF                        l1246 025D  
                      l1238 040E                        l1270 075B                        l1262 0743  
                      l1254 0721                        l1350 06DF                        l1342 06B9  
                      l1334 069E                        l1326 0684                        l1318 0661  
                      l1406 02DA                        l1430 056F                        l1422 055E  
                      l1176 052F                        l1168 0511                        l1184 0543  
                      l1192 0498                        l1248 0261                        l1272 0761  
                      l1280 079A                        l1264 0748                        l1256 0725  
                      l1352 06EC                        l1344 06C0                        l1336 06A3  
                      l1328 0689                        l1408 02DC                        l1416 0296  
                      l1440 0595                        l1432 0579                        l1424 055F  
                      l1370 0287                        l1186 0548                        l1178 0535  
                      l1194 0499                        l1282 07A8                        l1290 07C8  
                      l1274 077E                        l1266 074D                        l1258 0738  
                      l1354 06F1                        l1346 06C7                        l1338 06B2  
                      l1362 0707                        l1418 024F                        l1450 05B7  
                      l1442 059B                        l1434 057F                        l1426 0563  
                      l1372 0288                        l1188 054D                        l1196 049D  
                      l1292 07CF                        l1284 07B0                        l1276 0781  
                      l1268 0757                        l1348 06D3                        l1380 02C1  
                      l1460 036B                        l1452 05BD                        l1444 05A1  
                      l1436 0585                        l1428 0569                        l1390 0274  
                      l1374 0292                        l1198 04A2                        l1294 07D5  
                      l1286 07B5                        l1278 0787                        l1358 06FF  
                      l1382 02CF                        l1462 0382                        l1454 05C3  
                      l1446 05A7                        l1438 058B                        l1470 03A6  
                      l1392 027E                        l1368 0283                        l1296 07DB  
                      l1288 07C2                        l1376 02AF                        l1464 0388  
                      l1456 05C5                        l1448 05B1                        l1480 03BF  
                      l1472 03A8                        l1386 026F                        l1394 031A  
                      l1378 02B4                        l1466 0397                        l1490 03DF  
                      l1482 03C4                        l1474 03AD                        l1388 0273  
                      l1396 031B                        l1492 03E4                        l1484 03CC  
                      l1476 03B2                        l1468 03A1                        l1398 0329  
                      l1486 03D5                        l1478 03BA                        l1488 03DB  
                      ?_pad 0028                        STR_1 0024                        STR_2 0013  
                      u1010 04E0                        u1011 04DF                        u1020 04E5  
                      u1100 073D                        u1021 04E4                        u1005 04D4  
                      u1101 073C                        u1030 03F8                        u1110 0748  
                      u1031 03F7                        u1111 0747                        u1040 0409  
                      u1120 07A8                        u1200 0672                        u1041 0408  
                      u1121 07A7                        u1201 0671                        u1050 0433  
                      u1130 07B0                        u1210 06A3                        u1051 0432  
                      u1131 07AF                        u1211 06A2                        u1060 0439  
                      u1140 07B5                        u1220 06B6                        u1300 056F  
                      u1061 0438                        u1141 07B4                        u1125 07A4  
                      u1221 06B5                        u1301 056E                        u1070 0261  
                      u1150 07C2                        u1230 06D3                        u1310 0579  
                      u1071 0260                        u1055 042F                        u1151 07C1  
                      u1231 06D2                        u1311 0578                        u1160 07C8  
                      u1080 072A                        u1240 06DF                        u1400 05B7  
                      u1320 057F                        u1161 07C7                        u1081 0728  
                      u1241 06DE                        u1401 05B6                        u1321 057E  
                      u1170 07CF                        u1090 072B                        u1250 02CF  
                      u1410 05BD                        u1330 0585                        u1171 07CE  
                      u1155 07BE                        u1251 02CE                        u1411 05BC  
                      u1331 0584                        u1260 033F                        u1180 0456  
                      u1420 05C3                        u1340 058B                        u1261 033E  
                      u1181 0455                        u1421 05C2                        u1341 058A  
                      u1190 0493                        u1350 0595                        u1270 055E  
                      u1430 03BF                        u1191 0492                        u1351 0594  
                      u1271 055D                        u1431 03BE                        u1360 059B  
                      u1280 0563                        u1440 03CC                        u1361 059A  
                      u1281 0562                        u1441 03CB                        u1370 05A1  
                      u1290 0569                        u1450 03DB                        u1371 05A0  
                      u1291 0568                        u1451 03DA                        u1380 05A7  
                      u1460 03EE                        u1381 05A6                        u1461 03ED  
                      u1390 05B1                        u1391 05B0                        u1477 0255  
                      u1487 028D                        u1497 0279                        abs@a 0076  
                      _dbuf 00A6                        _main 03A1                        _dtoa 0721  
                      _prec 00A2                        pad@i 002D                        pad@p 002B  
                      btemp 007E                        start 0000               ?_atualiza_lcd 0070  
                     ??_abs 0078                       ??_pad 007D                       ?_main 0070  
                     ?_dtoa 002F             __end_of___awdiv 0552             __end_of___awmod 04EF  
           ___awdiv@divisor 0070             ___awdiv@counter 0074                vfpfcnvrt@fmt 003D  
                     _PORTD 0008                       _TRISB 0086                       _TRISC 0087  
                     _TRISD 0088                       _TRISE 0089                       _flags 006E  
       read_prec_or_width@c 0078         read_prec_or_width@n 0079                       _fputc 05C7  
                     _fputs 0340                       pad@fp 0028                       _width 00A0  
                     _putch 0245                       dtoa@d 0031                       dtoa@i 0039  
                     dtoa@p 0035                       dtoa@s 0038                       dtoa@w 0036  
           __end_of_teclado 05C7                       pclath 000A              _tecla_anterior 006F  
                     status 0003                       wtemp0 007E             __end_of_sprintf 02F5  
            ??_atualiza_lcd 007E             __initialization 07EC                __end_of_main 03F2  
              __end_of_dtoa 07EC                      ??_main 007E                      ??_dtoa 007E  
            lcd_command@cmd 0072  __end_of_read_prec_or_width 0498                      ?_fputc 0070  
                    ?_fputs 0020            ___awdiv@dividend 0072                      ?_putch 0070  
             vfpfcnvrt@done 0045            __end_of_debounce 025D            __end_of_lcd_data 0296  
              vfprintf@cfmt 004B                      ___wmul 02F5                   ??___awdiv 0074  
                 ??___awmod 0074        read_prec_or_width@ap 0077            ___awdiv@quotient 0076  
           ___awmod@divisor 0070             ___awmod@counter 0074                      pad@buf 002A  
                    dtoa@fp 002F                      fputc@c 0070                      fputs@c 0025  
                    fputs@i 0026                      fputs@s 0020                   ??_teclado 0070  
                    putch@c 0070            __end_of_vfprintf 02D2            ??_lcd_initialise 0073  
                 ??_sprintf 0050               lcd_string@str 0073     __end_of__initialization 07FC  
            __pcstackCOMMON 0070                __pidataBANK0 0246               __end_of_fputc 0661  
             __end_of_fputs 036B               __end_of_putch 0246        __end_of_atualiza_lcd 03A1  
                   ??_fputc 0074                     ??_fputs 0023                     ??_putch 0070  
                __pbssBANK0 006E                  __pbssBANK1 00A0          atualiza_lcd@buffer 005D  
                __pmaintext 03A1                     ?___wmul 0070                   ?_debounce 0070  
                 ?_lcd_data 0070                  _lcd_string 031A                  __stringtab 0003  
                   ___awdiv 04EF                     ___awmod 0498                   ?_vfprintf 0047  
                   __ptext1 0552                     __ptext2 0296                     __ptext3 024F  
                   __ptext4 036B                     __ptext5 02D2                     __ptext6 02AF  
                   __ptext7 0661                     __ptext8 0445                     __ptext9 02F5  
     read_prec_or_width@fmt 0076            ___awmod@dividend 0072                  ??_debounce 0070  
                   _teclado 0552                  ??_lcd_data 0070                     _sprintf 02D2  
                   clrloop0 0248        end_of_initialization 07FC                     fputc@fp 0072  
                   fputs@fp 0021          _read_prec_or_width 0445           __end_of_vfpfcnvrt 0721  
       ?_read_prec_or_width 0076            vfpfcnvrt@convarg 0041                  ??_vfprintf 007E  
                 _PORTBbits 0006                   _PORTCbits 0007                   _PORTEbits 0009  
      ??_read_prec_or_width 0078                 ?_lcd_string 0073               ??_lcd_command 0070  
              _atualiza_lcd 036B                 vfpfcnvrt@ap 003E                 vfpfcnvrt@cp 0046  
               vfpfcnvrt@fp 003B              __end_of___wmul 031A         start_initialization 07EC  
               __end_of_abs 026E                 __end_of_pad 0445                 vfprintf@fmt 0049  
                  ??___wmul 0074         __end_of_lcd_command 0282                 __pdataBANK0 006F  
                 ___latbits 0002               __pcstackBANK0 0020                    ?___awdiv 0070  
                  ?___awmod 0070                   __pstrings 0003                teclado@tecla 0070  
                  ?_teclado 0070                    ?_sprintf 004C              ___wmul@product 0074  
                 clear_ram0 0247                 _lcd_command 026E                   _vfpfcnvrt 0661  
               __stringbase 0012           ___wmul@multiplier 0070                   main@tecla 006D  
              ??_lcd_string 0075                  vfprintf@ap 004A                  vfprintf@fp 0047  
                ?_vfpfcnvrt 003B          __end_of_lcd_string 0340          __end_of__stringtab 0013  
                sprintf@fmt 004D                    _debounce 024F                    _dtoa$660 0033  
                  __ptext10 0721                    __ptext11 03F2                    __ptext20 026E  
                  __ptext12 0340                    __ptext13 05C7                    __ptext14 0245  
                  __ptext15 025D                    __ptext16 0498                    __ptext17 04EF  
                  __ptext18 031A                    __ptext19 0282                    _lcd_data 0282  
                  _contador 00A4              _lcd_initialise 0296                    _vfprintf 02AF  
                 sprintf@ap 0051      __end_of_lcd_initialise 02AF                   stringcode 000D  
               ??_vfpfcnvrt 003F                    sprintf@f 0052                    sprintf@s 004C  
                  stringdir 000D                    stringtab 0003             ?_lcd_initialise 0070  
              ?_lcd_command 0070  
