

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Mon Dec 09 16:06:21 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F877
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,space=0,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    14                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2,group=3
    19                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2,group=1
    20                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2,group=1
    21                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2,group=3
    22                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2,group=3
    23                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2,group=3
    24                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2,group=2
    25                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2,group=2
    26                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    30                           	dabs	1,0x7E,2
    31     0000                     
    32                           ; Generated 12/10/2023 GMT
    33                           ; 
    34                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution. Publication is not required when
    48                           ;        this file is used in an embedded application.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC16F877 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66     0004                     fsr             equ	4
    67     0004                     fsr0            equ	4
    68     0000                     indf            equ	0
    69     0000                     indf0           equ	0
    70     0002                     pc              equ	2
    71     0002                     pcl             equ	2
    72     000A                     pclath          equ	10
    73     0003                     status          equ	3
    74     0000                     INDF            equ	0	;# 
    75     0001                     TMR0            equ	1	;# 
    76     0002                     PCL             equ	2	;# 
    77     0003                     STATUS          equ	3	;# 
    78     0004                     FSR             equ	4	;# 
    79     0005                     PORTA           equ	5	;# 
    80     0006                     PORTB           equ	6	;# 
    81     0007                     PORTC           equ	7	;# 
    82     0008                     PORTD           equ	8	;# 
    83     0009                     PORTE           equ	9	;# 
    84     000A                     PCLATH          equ	10	;# 
    85     000B                     INTCON          equ	11	;# 
    86     000C                     PIR1            equ	12	;# 
    87     000D                     PIR2            equ	13	;# 
    88     000E                     TMR1            equ	14	;# 
    89     000E                     TMR1L           equ	14	;# 
    90     000F                     TMR1H           equ	15	;# 
    91     0010                     T1CON           equ	16	;# 
    92     0011                     TMR2            equ	17	;# 
    93     0012                     T2CON           equ	18	;# 
    94     0013                     SSPBUF          equ	19	;# 
    95     0014                     SSPCON          equ	20	;# 
    96     0015                     CCPR1           equ	21	;# 
    97     0015                     CCPR1L          equ	21	;# 
    98     0016                     CCPR1H          equ	22	;# 
    99     0017                     CCP1CON         equ	23	;# 
   100     0018                     RCSTA           equ	24	;# 
   101     0019                     TXREG           equ	25	;# 
   102     001A                     RCREG           equ	26	;# 
   103     001B                     CCPR2           equ	27	;# 
   104     001B                     CCPR2L          equ	27	;# 
   105     001C                     CCPR2H          equ	28	;# 
   106     001D                     CCP2CON         equ	29	;# 
   107     001E                     ADRESH          equ	30	;# 
   108     001F                     ADCON0          equ	31	;# 
   109     0081                     OPTION_REG      equ	129	;# 
   110     0085                     TRISA           equ	133	;# 
   111     0086                     TRISB           equ	134	;# 
   112     0087                     TRISC           equ	135	;# 
   113     0088                     TRISD           equ	136	;# 
   114     0089                     TRISE           equ	137	;# 
   115     008C                     PIE1            equ	140	;# 
   116     008D                     PIE2            equ	141	;# 
   117     008E                     PCON            equ	142	;# 
   118     0091                     SSPCON2         equ	145	;# 
   119     0092                     PR2             equ	146	;# 
   120     0093                     SSPADD          equ	147	;# 
   121     0094                     SSPSTAT         equ	148	;# 
   122     0098                     TXSTA           equ	152	;# 
   123     0099                     SPBRG           equ	153	;# 
   124     009E                     ADRESL          equ	158	;# 
   125     009F                     ADCON1          equ	159	;# 
   126     010C                     EEDATA          equ	268	;# 
   127     010D                     EEADR           equ	269	;# 
   128     010E                     EEDATH          equ	270	;# 
   129     010F                     EEADRH          equ	271	;# 
   130     018C                     EECON1          equ	396	;# 
   131     018D                     EECON2          equ	397	;# 
   132     0000                     INDF            equ	0	;# 
   133     0001                     TMR0            equ	1	;# 
   134     0002                     PCL             equ	2	;# 
   135     0003                     STATUS          equ	3	;# 
   136     0004                     FSR             equ	4	;# 
   137     0005                     PORTA           equ	5	;# 
   138     0006                     PORTB           equ	6	;# 
   139     0007                     PORTC           equ	7	;# 
   140     0008                     PORTD           equ	8	;# 
   141     0009                     PORTE           equ	9	;# 
   142     000A                     PCLATH          equ	10	;# 
   143     000B                     INTCON          equ	11	;# 
   144     000C                     PIR1            equ	12	;# 
   145     000D                     PIR2            equ	13	;# 
   146     000E                     TMR1            equ	14	;# 
   147     000E                     TMR1L           equ	14	;# 
   148     000F                     TMR1H           equ	15	;# 
   149     0010                     T1CON           equ	16	;# 
   150     0011                     TMR2            equ	17	;# 
   151     0012                     T2CON           equ	18	;# 
   152     0013                     SSPBUF          equ	19	;# 
   153     0014                     SSPCON          equ	20	;# 
   154     0015                     CCPR1           equ	21	;# 
   155     0015                     CCPR1L          equ	21	;# 
   156     0016                     CCPR1H          equ	22	;# 
   157     0017                     CCP1CON         equ	23	;# 
   158     0018                     RCSTA           equ	24	;# 
   159     0019                     TXREG           equ	25	;# 
   160     001A                     RCREG           equ	26	;# 
   161     001B                     CCPR2           equ	27	;# 
   162     001B                     CCPR2L          equ	27	;# 
   163     001C                     CCPR2H          equ	28	;# 
   164     001D                     CCP2CON         equ	29	;# 
   165     001E                     ADRESH          equ	30	;# 
   166     001F                     ADCON0          equ	31	;# 
   167     0081                     OPTION_REG      equ	129	;# 
   168     0085                     TRISA           equ	133	;# 
   169     0086                     TRISB           equ	134	;# 
   170     0087                     TRISC           equ	135	;# 
   171     0088                     TRISD           equ	136	;# 
   172     0089                     TRISE           equ	137	;# 
   173     008C                     PIE1            equ	140	;# 
   174     008D                     PIE2            equ	141	;# 
   175     008E                     PCON            equ	142	;# 
   176     0091                     SSPCON2         equ	145	;# 
   177     0092                     PR2             equ	146	;# 
   178     0093                     SSPADD          equ	147	;# 
   179     0094                     SSPSTAT         equ	148	;# 
   180     0098                     TXSTA           equ	152	;# 
   181     0099                     SPBRG           equ	153	;# 
   182     009E                     ADRESL          equ	158	;# 
   183     009F                     ADCON1          equ	159	;# 
   184     010C                     EEDATA          equ	268	;# 
   185     010D                     EEADR           equ	269	;# 
   186     010E                     EEDATH          equ	270	;# 
   187     010F                     EEADRH          equ	271	;# 
   188     018C                     EECON1          equ	396	;# 
   189     018D                     EECON2          equ	397	;# 
   190                           
   191                           	psect	idataBANK0
   192     03B6                     __pidataBANK0:
   193                           
   194                           ;initializer for main@cursor_pos
   195     03B6  3480               	retlw	128
   196                           
   197                           ;initializer for _tecla_anterior
   198     03B7  34FF               	retlw	255
   199     0006                     _PORTBbits      set	6
   200     0007                     _PORTCbits      set	7
   201     0009                     _PORTEbits      set	9
   202     0008                     _PORTD          set	8
   203     0086                     _TRISB          set	134
   204     0087                     _TRISC          set	135
   205     0088                     _TRISD          set	136
   206     0089                     _TRISE          set	137
   207                           
   208                           	psect	strings
   209     0003                     __pstrings:
   210     0003                     stringtab:
   211     0003                     __stringtab:
   212     0003                     stringcode:	
   213                           ;	String table - string pointers are 1 byte each
   214                           
   215     0003                     stringdir:
   216     0003  3000               	movlw	high stringdir
   217     0004  008A               	movwf	10
   218     0005  0804               	movf	4,w
   219     0006  0A84               	incf	4,f
   220     0007  0782               	addwf	2,f
   221     0008                     __stringbase:
   222     0008  3400               	retlw	0
   223     0009                     __end_of__stringtab:
   224     0009                     STR_1:
   225     0009  3425               	retlw	37	;'%'
   226     000A  3464               	retlw	100	;'d'
   227     000B  3400               	retlw	0
   228                           
   229                           	psect	cinit
   230     07E1                     start_initialization:	
   231                           ; #config settings
   232                           
   233     07E1                     __initialization:
   234                           
   235                           ; Initialize objects allocated to BANK0
   236     07E1  120A  118A  23B6  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   237     07E6  00E0               	movwf	__pdataBANK0& (0+127)
   238     07E7  120A  118A  23B7  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   239     07EC  00E1               	movwf	(__pdataBANK0+1)& (0+127)
   240                           
   241                           ; Clear objects allocated to BANK1
   242     07ED  1383               	bcf	3,7	;select IRP bank0
   243     07EE  30A0               	movlw	low __pbssBANK1
   244     07EF  0084               	movwf	4
   245     07F0  30C0               	movlw	low (__pbssBANK1+32)
   246     07F1  120A  118A  23B8  120A  118A  	fcall	clear_ram0
   247                           
   248                           ; Clear objects allocated to BANK0
   249     07F6  01DA               	clrf	__pbssBANK0& (0+127)
   250     07F7  01DB               	clrf	(__pbssBANK0+1)& (0+127)
   251     07F8  01DC               	clrf	(__pbssBANK0+2)& (0+127)
   252     07F9  01DD               	clrf	(__pbssBANK0+3)& (0+127)
   253     07FA  01DE               	clrf	(__pbssBANK0+4)& (0+127)
   254     07FB  01DF               	clrf	(__pbssBANK0+5)& (0+127)
   255     07FC                     end_of_initialization:	
   256                           ;End of C runtime variable initialization code
   257                           
   258     07FC                     __end_of__initialization:
   259     07FC  0183               	clrf	3
   260     07FD  120A  118A  2DDE   	ljmp	_main	;jump to C main() function
   261                           
   262                           	psect	bssBANK0
   263     005A                     __pbssBANK0:
   264     005A                     _width:
   265     005A                     	ds	2
   266     005C                     _prec:
   267     005C                     	ds	2
   268     005E                     _flags:
   269     005E                     	ds	1
   270     005F                     _tecla_pressionada:
   271     005F                     	ds	1
   272                           
   273                           	psect	dataBANK0
   274     0060                     __pdataBANK0:
   275     0060                     main@cursor_pos:
   276     0060                     	ds	1
   277     0061                     _tecla_anterior:
   278     0061                     	ds	1
   279                           
   280                           	psect	bssBANK1
   281     00A0                     __pbssBANK1:
   282     00A0                     _dbuf:
   283     00A0                     	ds	32
   284                           
   285                           	psect	clrtext
   286     03B8                     clear_ram0:	
   287                           ;	Called with FSR containing the base address, and
   288                           ;	W with the last address+1
   289                           
   290     03B8  0064               	clrwdt	;clear the watchdog before getting into this loop
   291     03B9                     clrloop0:
   292     03B9  0180               	clrf	0	;clear RAM location pointed to by FSR
   293     03BA  0A84               	incf	4,f	;increment pointer
   294     03BB  0604               	xorwf	4,w	;XOR with final address
   295     03BC  1903               	btfsc	3,2	;have we reached the end yet?
   296     03BD  3400               	retlw	0	;all done for this memory range, return
   297     03BE  0604               	xorwf	4,w	;XOR again to restore value
   298     03BF  2BB9               	goto	clrloop0	;do the next byte
   299                           
   300                           	psect	cstackCOMMON
   301     0070                     __pcstackCOMMON:
   302     0070                     ?_putch:
   303     0070                     ?_lcd_data:	
   304                           ; 1 bytes @ 0x0
   305                           
   306     0070                     ?_lcd_command:	
   307                           ; 1 bytes @ 0x0
   308                           
   309     0070                     ?_lcd_initialise:	
   310                           ; 1 bytes @ 0x0
   311                           
   312     0070                     ?_debounce:	
   313                           ; 1 bytes @ 0x0
   314                           
   315     0070                     ?_teclado:	
   316                           ; 1 bytes @ 0x0
   317                           
   318     0070                     ?_atualiza_lcd:	
   319                           ; 1 bytes @ 0x0
   320                           
   321     0070                     ?_main:	
   322                           ; 1 bytes @ 0x0
   323                           
   324     0070                     ?_fputc:	
   325                           ; 1 bytes @ 0x0
   326                           
   327     0070                     ?___awdiv:	
   328                           ; 2 bytes @ 0x0
   329                           
   330     0070                     ?___awmod:	
   331                           ; 2 bytes @ 0x0
   332                           
   333     0070                     teclado@tecla:	
   334                           ; 2 bytes @ 0x0
   335                           
   336     0070                     putch@c:	
   337                           ; 1 bytes @ 0x0
   338                           
   339     0070                     ___awdiv@divisor:	
   340                           ; 1 bytes @ 0x0
   341                           
   342     0070                     ___awmod@divisor:	
   343                           ; 2 bytes @ 0x0
   344                           
   345     0070                     fputc@c:	
   346                           ; 2 bytes @ 0x0
   347                           
   348     0070                     ??_putch:	
   349                           ; 2 bytes @ 0x0
   350                           
   351     0070                     ??_lcd_data:	
   352                           ; 1 bytes @ 0x0
   353                           
   354     0070                     ??_lcd_command:	
   355                           ; 1 bytes @ 0x0
   356                           
   357     0070                     ??_debounce:	
   358                           ; 1 bytes @ 0x0
   359                           
   360     0070                     ??_teclado:	
   361                           ; 1 bytes @ 0x0
   362                           
   363                           
   364                           ; 1 bytes @ 0x0
   365     0070                     	ds	2
   366     0072                     lcd_data@data:
   367     0072                     lcd_command@cmd:	
   368                           ; 1 bytes @ 0x2
   369                           
   370     0072                     ___awdiv@dividend:	
   371                           ; 1 bytes @ 0x2
   372                           
   373     0072                     ___awmod@dividend:	
   374                           ; 2 bytes @ 0x2
   375                           
   376     0072                     fputc@fp:	
   377                           ; 2 bytes @ 0x2
   378                           
   379                           
   380                           ; 2 bytes @ 0x2
   381     0072                     	ds	1
   382     0073                     ?_lcd_string:
   383     0073                     lcd_string@str:	
   384                           ; 1 bytes @ 0x3
   385                           
   386     0073                     ??_lcd_initialise:	
   387                           ; 1 bytes @ 0x3
   388                           
   389                           
   390                           ; 1 bytes @ 0x3
   391     0073                     	ds	1
   392     0074                     ___awdiv@counter:
   393     0074                     ___awmod@counter:	
   394                           ; 1 bytes @ 0x4
   395                           
   396     0074                     ??_fputc:	
   397                           ; 1 bytes @ 0x4
   398                           
   399     0074                     ??_lcd_string:	
   400                           ; 1 bytes @ 0x4
   401                           
   402     0074                     ??___awdiv:	
   403                           ; 1 bytes @ 0x4
   404                           
   405     0074                     ??___awmod:	
   406                           ; 1 bytes @ 0x4
   407                           
   408                           
   409                           ; 1 bytes @ 0x4
   410     0074                     	ds	1
   411     0075                     ___awdiv@sign:
   412     0075                     ___awmod@sign:	
   413                           ; 1 bytes @ 0x5
   414                           
   415                           
   416                           ; 1 bytes @ 0x5
   417     0075                     	ds	1
   418     0076                     ?_abs:
   419     0076                     ___awdiv@quotient:	
   420                           ; 2 bytes @ 0x6
   421                           
   422     0076                     abs@a:	
   423                           ; 2 bytes @ 0x6
   424                           
   425                           
   426                           ; 2 bytes @ 0x6
   427     0076                     	ds	2
   428     0078                     ??_abs:
   429                           
   430                           ; 1 bytes @ 0x8
   431     0078                     	ds	5
   432     007D                     vfprintf@cfmt:
   433     007D                     ??_vfprintf:	
   434                           ; 1 bytes @ 0xD
   435                           
   436                           
   437                           ; 1 bytes @ 0xD
   438     007D                     	ds	1
   439                           
   440                           	psect	cstackBANK0
   441     0020                     __pcstackBANK0:
   442     0020                     ?_vfpfcnvrt:
   443     0020                     vfpfcnvrt@fp:	
   444                           ; 1 bytes @ 0x0
   445                           
   446                           
   447                           ; 2 bytes @ 0x0
   448     0020                     	ds	2
   449     0022                     vfpfcnvrt@fmt:
   450                           
   451                           ; 1 bytes @ 0x2
   452     0022                     	ds	1
   453     0023                     vfpfcnvrt@ap:
   454                           
   455                           ; 1 bytes @ 0x3
   456     0023                     	ds	1
   457     0024                     ??_vfpfcnvrt:
   458                           
   459                           ; 1 bytes @ 0x4
   460     0024                     	ds	2
   461     0026                     vfpfcnvrt@done:
   462                           
   463                           ; 1 bytes @ 0x6
   464     0026                     	ds	1
   465     0027                     vfpfcnvrt@cp:
   466                           
   467                           ; 1 bytes @ 0x7
   468     0027                     	ds	1
   469     0028                     vfpfcnvrt@convarg:
   470                           
   471                           ; 4 bytes @ 0x8
   472     0028                     	ds	4
   473     002C                     vfpfcnvrt@c:
   474                           
   475                           ; 1 bytes @ 0xC
   476     002C                     	ds	1
   477     002D                     ?_vfprintf:
   478     002D                     vfprintf@fp:	
   479                           ; 2 bytes @ 0xD
   480                           
   481                           
   482                           ; 2 bytes @ 0xD
   483     002D                     	ds	2
   484     002F                     vfprintf@fmt:
   485                           
   486                           ; 1 bytes @ 0xF
   487     002F                     	ds	1
   488     0030                     vfprintf@ap:
   489                           
   490                           ; 1 bytes @ 0x10
   491     0030                     	ds	1
   492     0031                     ?_sprintf:
   493     0031                     sprintf@s:	
   494                           ; 2 bytes @ 0x11
   495                           
   496                           
   497                           ; 1 bytes @ 0x11
   498     0031                     	ds	1
   499     0032                     sprintf@fmt:
   500                           
   501                           ; 1 bytes @ 0x12
   502     0032                     	ds	3
   503     0035                     ??_sprintf:
   504                           
   505                           ; 1 bytes @ 0x15
   506     0035                     	ds	1
   507     0036                     sprintf@ap:
   508                           
   509                           ; 1 bytes @ 0x16
   510     0036                     	ds	1
   511     0037                     sprintf@f:
   512                           
   513                           ; 11 bytes @ 0x17
   514     0037                     	ds	11
   515     0042                     ??_atualiza_lcd:
   516                           
   517                           ; 1 bytes @ 0x22
   518     0042                     	ds	2
   519     0044                     atualiza_lcd@buffer:
   520                           
   521                           ; 16 bytes @ 0x24
   522     0044                     	ds	16
   523     0054                     atualiza_lcd@tecla_pressionado:
   524                           
   525                           ; 1 bytes @ 0x34
   526     0054                     	ds	1
   527     0055                     ??_main:
   528                           
   529                           ; 1 bytes @ 0x35
   530     0055                     	ds	2
   531     0057                     main@i:
   532                           
   533                           ; 2 bytes @ 0x37
   534     0057                     	ds	2
   535     0059                     main@tecla:
   536                           
   537                           ; 1 bytes @ 0x39
   538     0059                     	ds	1
   539                           
   540                           	psect	maintext
   541     05DE                     __pmaintext:	
   542 ;;
   543 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   544 ;;
   545 ;; *************** function _main *****************
   546 ;; Defined at:
   547 ;;		line 127 in file "atividade7.c"
   548 ;; Parameters:    Size  Location     Type
   549 ;;		None
   550 ;; Auto vars:     Size  Location     Type
   551 ;;  i               2   55[BANK0 ] int 
   552 ;;  tecla           1   57[BANK0 ] unsigned char 
   553 ;; Return value:  Size  Location     Type
   554 ;;                  1    wreg      void 
   555 ;; Registers used:
   556 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   557 ;; Tracked objects:
   558 ;;		On entry : B00/0
   559 ;;		On exit  : 0/0
   560 ;;		Unchanged: 0/0
   561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   562 ;;      Params:         0       0       0       0       0
   563 ;;      Locals:         0       3       0       0       0
   564 ;;      Temps:          0       2       0       0       0
   565 ;;      Totals:         0       5       0       0       0
   566 ;;Total ram usage:        5 bytes
   567 ;; Hardware stack levels required when called: 6
   568 ;; This function calls:
   569 ;;		_atualiza_lcd
   570 ;;		_debounce
   571 ;;		_lcd_command
   572 ;;		_lcd_data
   573 ;;		_lcd_initialise
   574 ;;		_teclado
   575 ;; This function is called by:
   576 ;;		Startup code after reset
   577 ;; This function uses a non-reentrant model
   578 ;;
   579                           
   580     05DE                     _main:	
   581                           ;psect for function _main
   582                           
   583     05DE                     l1278:	
   584                           ;incstack = 0
   585                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   586                           
   587                           
   588                           ;atividade7.c: 129:     TRISE = 0x00;
   589     05DE  1683               	bsf	3,5	;RP0=1, select bank1
   590     05DF  1303               	bcf	3,6	;RP1=0, select bank1
   591     05E0  0189               	clrf	9	;volatile
   592                           
   593                           ;atividade7.c: 130:     TRISD = 0x00;
   594     05E1  0188               	clrf	8	;volatile
   595                           
   596                           ;atividade7.c: 131:     TRISC = 0x00;
   597     05E2  0187               	clrf	7	;volatile
   598     05E3                     l1280:
   599                           
   600                           ;atividade7.c: 132:     TRISB = 0xFF;
   601     05E3  30FF               	movlw	255
   602     05E4  0086               	movwf	6	;volatile
   603     05E5                     l1282:
   604                           
   605                           ;atividade7.c: 134:     lcd_initialise();
   606     05E5  120A  118A  241B  120A  118A  	fcall	_lcd_initialise
   607     05EA                     l1284:
   608                           
   609                           ;atividade7.c: 135:     atualiza_lcd();
   610     05EA  120A  118A  247C  120A  118A  	fcall	_atualiza_lcd
   611     05EF                     l1286:
   612                           
   613                           ;atividade7.c: 139:         unsigned char tecla = teclado();
   614     05EF  120A  118A  2562  120A  118A  	fcall	_teclado
   615     05F4  1283               	bcf	3,5	;RP0=0, select bank0
   616     05F5  1303               	bcf	3,6	;RP1=0, select bank0
   617     05F6  00D9               	movwf	main@tecla
   618     05F7                     l1288:
   619                           
   620                           ;atividade7.c: 141:         static unsigned char cursor_pos = 0x80;;atividade7.c: 144:  
      +                                 for(int i = cursor_pos; i < 31; i++ ){
   621     05F7  0860               	movf	main@cursor_pos,w
   622     05F8  00D5               	movwf	??_main
   623     05F9  01D6               	clrf	??_main+1
   624     05FA  0855               	movf	??_main,w
   625     05FB  00D7               	movwf	main@i
   626     05FC  0856               	movf	??_main+1,w
   627     05FD  00D8               	movwf	main@i+1
   628     05FE                     l1290:
   629     05FE  0858               	movf	main@i+1,w
   630     05FF  3A80               	xorlw	128
   631     0600  00FF               	movwf	btemp+1
   632     0601  3080               	movlw	128
   633     0602  027F               	subwf	btemp+1,w
   634     0603  1D03               	skipz
   635     0604  2E07               	goto	u1145
   636     0605  301F               	movlw	31
   637     0606  0257               	subwf	main@i,w
   638     0607                     u1145:
   639     0607  1C03               	skipc
   640     0608  2E0A               	goto	u1141
   641     0609  2E0B               	goto	u1140
   642     060A                     u1141:
   643     060A  2E0C               	goto	l1294
   644     060B                     u1140:
   645     060B  2E47               	goto	l1318
   646     060C                     l1294:
   647                           
   648                           ;atividade7.c: 146:             lcd_command(i);
   649     060C  1283               	bcf	3,5	;RP0=0, select bank0
   650     060D  1303               	bcf	3,6	;RP1=0, select bank0
   651     060E  0857               	movf	main@i,w
   652     060F  120A  118A  23DF  120A  118A  	fcall	_lcd_command
   653     0614                     l1296:
   654                           
   655                           ;atividade7.c: 148:             if(cursor_pos < 16){
   656     0614  3010               	movlw	16
   657     0615  1283               	bcf	3,5	;RP0=0, select bank0
   658     0616  1303               	bcf	3,6	;RP1=0, select bank0
   659     0617  0260               	subwf	main@cursor_pos,w
   660     0618  1803               	skipnc
   661     0619  2E1B               	goto	u1151
   662     061A  2E1C               	goto	u1150
   663     061B                     u1151:
   664     061B  2E36               	goto	l1310
   665     061C                     u1150:
   666     061C                     l1298:
   667                           
   668                           ;atividade7.c: 150:               if (tecla < 10) {
   669     061C  300A               	movlw	10
   670     061D  0259               	subwf	main@tecla,w
   671     061E  1803               	skipnc
   672     061F  2E21               	goto	u1161
   673     0620  2E22               	goto	u1160
   674     0621                     u1161:
   675     0621  2E2A               	goto	l1302
   676     0622                     u1160:
   677     0622                     l1300:
   678                           
   679                           ;atividade7.c: 151:                     lcd_data(tecla + '0');
   680     0622  0859               	movf	main@tecla,w
   681     0623  3E30               	addlw	48
   682     0624  120A  118A  23F3  120A  118A  	fcall	_lcd_data
   683                           
   684                           ;atividade7.c: 152:               } else {
   685     0629  2E31               	goto	l1304
   686     062A                     l1302:
   687                           
   688                           ;atividade7.c: 154:                     lcd_data(tecla - 10 + 'A');
   689     062A  0859               	movf	main@tecla,w
   690     062B  3E37               	addlw	55
   691     062C  120A  118A  23F3  120A  118A  	fcall	_lcd_data
   692     0631                     l1304:
   693                           
   694                           ;atividade7.c: 156:               cursor_pos++;
   695     0631  3001               	movlw	1
   696     0632  1283               	bcf	3,5	;RP0=0, select bank0
   697     0633  1303               	bcf	3,6	;RP1=0, select bank0
   698     0634  07E0               	addwf	main@cursor_pos,f
   699                           
   700                           ;atividade7.c: 157:                 break;
   701     0635  2E47               	goto	l1318
   702     0636                     l1310:
   703                           
   704                           ;atividade7.c: 163:                     lcd_command(0xC0);
   705     0636  30C0               	movlw	192
   706     0637  120A  118A  23DF  120A  118A  	fcall	_lcd_command
   707     063C                     l1312:
   708                           
   709                           ;atividade7.c: 164:                     cursor_pos = 0xC0;
   710     063C  30C0               	movlw	192
   711     063D  1283               	bcf	3,5	;RP0=0, select bank0
   712     063E  1303               	bcf	3,6	;RP1=0, select bank0
   713     063F  00E0               	movwf	main@cursor_pos
   714     0640                     l1314:
   715                           
   716                           ;atividade7.c: 168:         }
   717     0640  3001               	movlw	1
   718     0641  07D7               	addwf	main@i,f
   719     0642  1803               	skipnc
   720     0643  0AD8               	incf	main@i+1,f
   721     0644  3000               	movlw	0
   722     0645  07D8               	addwf	main@i+1,f
   723     0646  2DFE               	goto	l1290
   724     0647                     l1318:
   725                           
   726                           ;atividade7.c: 169:         if (tecla != 0xFF) {
   727     0647  1283               	bcf	3,5	;RP0=0, select bank0
   728     0648  1303               	bcf	3,6	;RP1=0, select bank0
   729     0649  0A59               	incf	main@tecla,w
   730     064A  1903               	btfsc	3,2
   731     064B  2E4D               	goto	u1171
   732     064C  2E4E               	goto	u1170
   733     064D                     u1171:
   734     064D  2DEF               	goto	l1286
   735     064E                     u1170:
   736     064E                     l1320:
   737                           
   738                           ;atividade7.c: 170:             debounce();
   739     064E  120A  118A  23C0  120A  118A  	fcall	_debounce
   740     0653                     l1322:	
   741                           ;atividade7.c: 171:             while (teclado() != 0xFF);
   742                           
   743     0653  120A  118A  2562  120A  118A  	fcall	_teclado
   744     0658  3AFF               	xorlw	255
   745     0659  1D03               	skipz
   746     065A  2E5C               	goto	u1181
   747     065B  2E5D               	goto	u1180
   748     065C                     u1181:
   749     065C  2E53               	goto	l1322
   750     065D                     u1180:
   751     065D  2DEF               	goto	l1286
   752     065E  120A  118A  2800   	ljmp	start
   753     0661                     __end_of_main:
   754                           
   755                           	psect	text1
   756     041B                     __ptext1:	
   757 ;; *************** function _lcd_initialise *****************
   758 ;; Defined at:
   759 ;;		line 51 in file "atividade7.c"
   760 ;; Parameters:    Size  Location     Type
   761 ;;		None
   762 ;; Auto vars:     Size  Location     Type
   763 ;;		None
   764 ;; Return value:  Size  Location     Type
   765 ;;                  1    wreg      void 
   766 ;; Registers used:
   767 ;;		wreg, status,2, status,0, pclath, cstack
   768 ;; Tracked objects:
   769 ;;		On entry : 0/0
   770 ;;		On exit  : 0/0
   771 ;;		Unchanged: 0/0
   772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   773 ;;      Params:         0       0       0       0       0
   774 ;;      Locals:         0       0       0       0       0
   775 ;;      Temps:          0       0       0       0       0
   776 ;;      Totals:         0       0       0       0       0
   777 ;;Total ram usage:        0 bytes
   778 ;; Hardware stack levels used: 1
   779 ;; Hardware stack levels required when called: 1
   780 ;; This function calls:
   781 ;;		_lcd_command
   782 ;; This function is called by:
   783 ;;		_main
   784 ;; This function uses a non-reentrant model
   785 ;;
   786                           
   787     041B                     _lcd_initialise:	
   788                           ;psect for function _lcd_initialise
   789                           
   790     041B                     l1264:	
   791                           ;incstack = 0
   792                           ; Regs used in _lcd_initialise: [wreg+status,2+status,0+pclath+cstack]
   793                           
   794                           
   795                           ;atividade7.c: 52:     lcd_command(0x38);
   796     041B  3038               	movlw	56
   797     041C  120A  118A  23DF  120A  118A  	fcall	_lcd_command
   798                           
   799                           ;atividade7.c: 53:     lcd_command(0x06);
   800     0421  3006               	movlw	6
   801     0422  120A  118A  23DF  120A  118A  	fcall	_lcd_command
   802                           
   803                           ;atividade7.c: 54:     lcd_command(0x0C);
   804     0427  300C               	movlw	12
   805     0428  120A  118A  23DF  120A  118A  	fcall	_lcd_command
   806                           
   807                           ;atividade7.c: 55:     lcd_command(0x01);
   808     042D  3001               	movlw	1
   809     042E  120A  118A  23DF  120A  118A  	fcall	_lcd_command
   810     0433                     l39:
   811     0433  0008               	return
   812     0434                     __end_of_lcd_initialise:
   813                           
   814                           	psect	text2
   815     03C0                     __ptext2:	
   816 ;; *************** function _debounce *****************
   817 ;; Defined at:
   818 ;;		line 58 in file "atividade7.c"
   819 ;; Parameters:    Size  Location     Type
   820 ;;		None
   821 ;; Auto vars:     Size  Location     Type
   822 ;;		None
   823 ;; Return value:  Size  Location     Type
   824 ;;                  1    wreg      void 
   825 ;; Registers used:
   826 ;;		wreg
   827 ;; Tracked objects:
   828 ;;		On entry : 0/0
   829 ;;		On exit  : 0/0
   830 ;;		Unchanged: 0/0
   831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   832 ;;      Params:         0       0       0       0       0
   833 ;;      Locals:         0       0       0       0       0
   834 ;;      Temps:          3       0       0       0       0
   835 ;;      Totals:         3       0       0       0       0
   836 ;;Total ram usage:        3 bytes
   837 ;; Hardware stack levels used: 1
   838 ;; This function calls:
   839 ;;		Nothing
   840 ;; This function is called by:
   841 ;;		_main
   842 ;; This function uses a non-reentrant model
   843 ;;
   844                           
   845     03C0                     _debounce:	
   846                           ;psect for function _debounce
   847                           
   848     03C0                     l1266:	
   849                           ;incstack = 0
   850                           ; Regs used in _debounce: [wreg]
   851                           
   852                           
   853                           ;atividade7.c: 59:     _delay((unsigned long)((50)*(20000000/4000.0)));
   854     03C0  3002               	movlw	2
   855     03C1  00F2               	movwf	??_debounce+2
   856     03C2  3045               	movlw	69
   857     03C3  00F1               	movwf	??_debounce+1
   858     03C4  30A9               	movlw	169
   859     03C5  00F0               	movwf	??_debounce
   860     03C6                     u1197:
   861     03C6  0BF0               	decfsz	??_debounce,f
   862     03C7  2BC6               	goto	u1197
   863     03C8  0BF1               	decfsz	??_debounce+1,f
   864     03C9  2BC6               	goto	u1197
   865     03CA  0BF2               	decfsz	??_debounce+2,f
   866     03CB  2BC6               	goto	u1197
   867     03CC  2BCD               	nop2
   868     03CD                     l42:
   869     03CD  0008               	return
   870     03CE                     __end_of_debounce:
   871                           
   872                           	psect	text3
   873     047C                     __ptext3:	
   874 ;; *************** function _atualiza_lcd *****************
   875 ;; Defined at:
   876 ;;		line 93 in file "atividade7.c"
   877 ;; Parameters:    Size  Location     Type
   878 ;;		None
   879 ;; Auto vars:     Size  Location     Type
   880 ;;  buffer         16   36[BANK0 ] unsigned char [16]
   881 ;;  tecla_pressi    1   52[BANK0 ] unsigned char 
   882 ;; Return value:  Size  Location     Type
   883 ;;                  1    wreg      void 
   884 ;; Registers used:
   885 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   886 ;; Tracked objects:
   887 ;;		On entry : 0/0
   888 ;;		On exit  : 0/0
   889 ;;		Unchanged: 0/0
   890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   891 ;;      Params:         0       0       0       0       0
   892 ;;      Locals:         0      17       0       0       0
   893 ;;      Temps:          0       2       0       0       0
   894 ;;      Totals:         0      19       0       0       0
   895 ;;Total ram usage:       19 bytes
   896 ;; Hardware stack levels used: 1
   897 ;; Hardware stack levels required when called: 5
   898 ;; This function calls:
   899 ;;		_lcd_command
   900 ;;		_lcd_string
   901 ;;		_sprintf
   902 ;;		_teclado
   903 ;; This function is called by:
   904 ;;		_main
   905 ;; This function uses a non-reentrant model
   906 ;;
   907                           
   908     047C                     _atualiza_lcd:	
   909                           ;psect for function _atualiza_lcd
   910                           
   911     047C                     l1268:	
   912                           ;incstack = 0
   913                           ; Regs used in _atualiza_lcd: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   914                           
   915                           
   916                           ;atividade7.c: 95:      unsigned char tecla_pressionado = teclado();
   917     047C  120A  118A  2562  120A  118A  	fcall	_teclado
   918     0481  1283               	bcf	3,5	;RP0=0, select bank0
   919     0482  1303               	bcf	3,6	;RP1=0, select bank0
   920     0483  00D4               	movwf	atualiza_lcd@tecla_pressionado
   921     0484                     l1270:
   922                           
   923                           ;atividade7.c: 97:     char buffer[16];;atividade7.c: 98:     sprintf(buffer, "%d", tecl
      +                          a_pressionado);
   924     0484  3044               	movlw	(low (atualiza_lcd@buffer| 0))& (0+255)
   925     0485  00B1               	movwf	sprintf@s
   926     0486  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   927     0487  00B2               	movwf	sprintf@fmt
   928     0488  0854               	movf	atualiza_lcd@tecla_pressionado,w
   929     0489  00C2               	movwf	??_atualiza_lcd
   930     048A  01C3               	clrf	??_atualiza_lcd+1
   931     048B  0842               	movf	??_atualiza_lcd,w
   932     048C  00B3               	movwf	?_sprintf+2
   933     048D  0843               	movf	??_atualiza_lcd+1,w
   934     048E  00B4               	movwf	?_sprintf+3
   935     048F  120A  118A  2434  120A  118A  	fcall	_sprintf
   936     0494                     l1272:
   937                           
   938                           ;atividade7.c: 100:     lcd_command(0x80);
   939     0494  3080               	movlw	128
   940     0495  120A  118A  23DF  120A  118A  	fcall	_lcd_command
   941     049A                     l1274:
   942                           
   943                           ;atividade7.c: 102:     lcd_command(0xC0);
   944     049A  30C0               	movlw	192
   945     049B  120A  118A  23DF  120A  118A  	fcall	_lcd_command
   946     04A0                     l1276:
   947                           
   948                           ;atividade7.c: 103:     lcd_string(buffer);
   949     04A0  3044               	movlw	(low (atualiza_lcd@buffer| 0))& (0+255)
   950     04A1  00F3               	movwf	lcd_string@str
   951     04A2  120A  118A  2407  120A  118A  	fcall	_lcd_string
   952     04A7                     l67:
   953     04A7  0008               	return
   954     04A8                     __end_of_atualiza_lcd:
   955                           
   956                           	psect	text4
   957     0562                     __ptext4:	
   958 ;; *************** function _teclado *****************
   959 ;; Defined at:
   960 ;;		line 62 in file "atividade7.c"
   961 ;; Parameters:    Size  Location     Type
   962 ;;		None
   963 ;; Auto vars:     Size  Location     Type
   964 ;;  tecla           1    0[COMMON] unsigned char 
   965 ;; Return value:  Size  Location     Type
   966 ;;                  1    wreg      unsigned char 
   967 ;; Registers used:
   968 ;;		wreg, status,2, status,0
   969 ;; Tracked objects:
   970 ;;		On entry : 0/0
   971 ;;		On exit  : 0/0
   972 ;;		Unchanged: 0/0
   973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   974 ;;      Params:         0       0       0       0       0
   975 ;;      Locals:         1       0       0       0       0
   976 ;;      Temps:          0       0       0       0       0
   977 ;;      Totals:         1       0       0       0       0
   978 ;;Total ram usage:        1 bytes
   979 ;; Hardware stack levels used: 1
   980 ;; This function calls:
   981 ;;		Nothing
   982 ;; This function is called by:
   983 ;;		_atualiza_lcd
   984 ;;		_main
   985 ;; This function uses a non-reentrant model
   986 ;;
   987                           
   988     0562                     _teclado:	
   989                           ;psect for function _teclado
   990                           
   991     0562                     l1208:	
   992                           ;incstack = 0
   993                           ; Regs used in _teclado: [wreg+status,2+status,0]
   994                           
   995                           
   996                           ;atividade7.c: 63:     unsigned char tecla = 20;
   997     0562  3014               	movlw	20
   998     0563  00F0               	movwf	teclado@tecla
   999                           
  1000                           ;atividade7.c: 65:   while(tecla == 20){
  1001     0564  2DD6               	goto	l1244
  1002     0565                     l46:
  1003                           
  1004                           ;atividade7.c: 66:     PORTCbits.RC0 = 0; PORTCbits.RC1 = 1; PORTCbits.RC2 = 1; PORTCbit
      +                          s.RC3 = 1;
  1005     0565  1283               	bcf	3,5	;RP0=0, select bank0
  1006     0566  1303               	bcf	3,6	;RP1=0, select bank0
  1007     0567  1007               	bcf	7,0	;volatile
  1008     0568  1487               	bsf	7,1	;volatile
  1009     0569  1507               	bsf	7,2	;volatile
  1010     056A  1587               	bsf	7,3	;volatile
  1011                           
  1012                           ;atividade7.c: 67:     if (PORTBbits.RB0 == 0) tecla = 0;
  1013     056B  1806               	btfsc	6,0	;volatile
  1014     056C  2D6E               	goto	u971
  1015     056D  2D6F               	goto	u970
  1016     056E                     u971:
  1017     056E  2D70               	goto	l1212
  1018     056F                     u970:
  1019     056F                     l1210:
  1020     056F  01F0               	clrf	teclado@tecla
  1021     0570                     l1212:
  1022                           
  1023                           ;atividade7.c: 68:     if (PORTBbits.RB1 == 0) tecla = 1;
  1024     0570  1886               	btfsc	6,1	;volatile
  1025     0571  2D73               	goto	u981
  1026     0572  2D74               	goto	u980
  1027     0573                     u981:
  1028     0573  2D76               	goto	l48
  1029     0574                     u980:
  1030     0574                     l1214:
  1031     0574  3001               	movlw	1
  1032     0575  00F0               	movwf	teclado@tecla
  1033     0576                     l48:
  1034                           
  1035                           ;atividade7.c: 69:     if (PORTBbits.RB2 == 0) tecla = 2;
  1036     0576  1906               	btfsc	6,2	;volatile
  1037     0577  2D79               	goto	u991
  1038     0578  2D7A               	goto	u990
  1039     0579                     u991:
  1040     0579  2D7C               	goto	l49
  1041     057A                     u990:
  1042     057A                     l1216:
  1043     057A  3002               	movlw	2
  1044     057B  00F0               	movwf	teclado@tecla
  1045     057C                     l49:
  1046                           
  1047                           ;atividade7.c: 70:     if (PORTBbits.RB3 == 0) tecla = 3;
  1048     057C  1986               	btfsc	6,3	;volatile
  1049     057D  2D7F               	goto	u1001
  1050     057E  2D80               	goto	u1000
  1051     057F                     u1001:
  1052     057F  2D82               	goto	l50
  1053     0580                     u1000:
  1054     0580                     l1218:
  1055     0580  3003               	movlw	3
  1056     0581  00F0               	movwf	teclado@tecla
  1057     0582                     l50:
  1058                           
  1059                           ;atividade7.c: 72:     PORTCbits.RC0 = 1; PORTCbits.RC1 = 0; PORTCbits.RC2 = 1; PORTCbit
      +                          s.RC3 = 1;
  1060     0582  1407               	bsf	7,0	;volatile
  1061     0583  1087               	bcf	7,1	;volatile
  1062     0584  1507               	bsf	7,2	;volatile
  1063     0585  1587               	bsf	7,3	;volatile
  1064                           
  1065                           ;atividade7.c: 73:     if (PORTBbits.RB0 == 0) tecla = 4;
  1066     0586  1806               	btfsc	6,0	;volatile
  1067     0587  2D89               	goto	u1011
  1068     0588  2D8A               	goto	u1010
  1069     0589                     u1011:
  1070     0589  2D8C               	goto	l51
  1071     058A                     u1010:
  1072     058A                     l1220:
  1073     058A  3004               	movlw	4
  1074     058B  00F0               	movwf	teclado@tecla
  1075     058C                     l51:
  1076                           
  1077                           ;atividade7.c: 74:     if (PORTBbits.RB1 == 0) tecla = 5;
  1078     058C  1886               	btfsc	6,1	;volatile
  1079     058D  2D8F               	goto	u1021
  1080     058E  2D90               	goto	u1020
  1081     058F                     u1021:
  1082     058F  2D92               	goto	l52
  1083     0590                     u1020:
  1084     0590                     l1222:
  1085     0590  3005               	movlw	5
  1086     0591  00F0               	movwf	teclado@tecla
  1087     0592                     l52:
  1088                           
  1089                           ;atividade7.c: 75:     if (PORTBbits.RB2 == 0) tecla = 6;
  1090     0592  1906               	btfsc	6,2	;volatile
  1091     0593  2D95               	goto	u1031
  1092     0594  2D96               	goto	u1030
  1093     0595                     u1031:
  1094     0595  2D98               	goto	l53
  1095     0596                     u1030:
  1096     0596                     l1224:
  1097     0596  3006               	movlw	6
  1098     0597  00F0               	movwf	teclado@tecla
  1099     0598                     l53:
  1100                           
  1101                           ;atividade7.c: 76:     if (PORTBbits.RB3 == 0) tecla = 7;
  1102     0598  1986               	btfsc	6,3	;volatile
  1103     0599  2D9B               	goto	u1041
  1104     059A  2D9C               	goto	u1040
  1105     059B                     u1041:
  1106     059B  2D9E               	goto	l54
  1107     059C                     u1040:
  1108     059C                     l1226:
  1109     059C  3007               	movlw	7
  1110     059D  00F0               	movwf	teclado@tecla
  1111     059E                     l54:
  1112                           
  1113                           ;atividade7.c: 78:     PORTCbits.RC0 = 1; PORTCbits.RC1 = 1; PORTCbits.RC2 = 0; PORTCbit
      +                          s.RC3 = 1;
  1114     059E  1407               	bsf	7,0	;volatile
  1115     059F  1487               	bsf	7,1	;volatile
  1116     05A0  1107               	bcf	7,2	;volatile
  1117     05A1  1587               	bsf	7,3	;volatile
  1118                           
  1119                           ;atividade7.c: 79:     if (PORTBbits.RB0 == 0) tecla = 8;
  1120     05A2  1806               	btfsc	6,0	;volatile
  1121     05A3  2DA5               	goto	u1051
  1122     05A4  2DA6               	goto	u1050
  1123     05A5                     u1051:
  1124     05A5  2DA8               	goto	l55
  1125     05A6                     u1050:
  1126     05A6                     l1228:
  1127     05A6  3008               	movlw	8
  1128     05A7  00F0               	movwf	teclado@tecla
  1129     05A8                     l55:
  1130                           
  1131                           ;atividade7.c: 80:     if (PORTBbits.RB1 == 0) tecla = 9;
  1132     05A8  1886               	btfsc	6,1	;volatile
  1133     05A9  2DAB               	goto	u1061
  1134     05AA  2DAC               	goto	u1060
  1135     05AB                     u1061:
  1136     05AB  2DAE               	goto	l56
  1137     05AC                     u1060:
  1138     05AC                     l1230:
  1139     05AC  3009               	movlw	9
  1140     05AD  00F0               	movwf	teclado@tecla
  1141     05AE                     l56:
  1142                           
  1143                           ;atividade7.c: 81:     if (PORTBbits.RB2 == 0) tecla = 10;
  1144     05AE  1906               	btfsc	6,2	;volatile
  1145     05AF  2DB1               	goto	u1071
  1146     05B0  2DB2               	goto	u1070
  1147     05B1                     u1071:
  1148     05B1  2DB4               	goto	l57
  1149     05B2                     u1070:
  1150     05B2                     l1232:
  1151     05B2  300A               	movlw	10
  1152     05B3  00F0               	movwf	teclado@tecla
  1153     05B4                     l57:
  1154                           
  1155                           ;atividade7.c: 82:     if (PORTBbits.RB3 == 0) tecla = 11;
  1156     05B4  1986               	btfsc	6,3	;volatile
  1157     05B5  2DB7               	goto	u1081
  1158     05B6  2DB8               	goto	u1080
  1159     05B7                     u1081:
  1160     05B7  2DBA               	goto	l58
  1161     05B8                     u1080:
  1162     05B8                     l1234:
  1163     05B8  300B               	movlw	11
  1164     05B9  00F0               	movwf	teclado@tecla
  1165     05BA                     l58:
  1166                           
  1167                           ;atividade7.c: 84:     PORTCbits.RC0 = 1; PORTCbits.RC1 = 1; PORTCbits.RC2 = 1; PORTCbit
      +                          s.RC3 = 0;
  1168     05BA  1407               	bsf	7,0	;volatile
  1169     05BB  1487               	bsf	7,1	;volatile
  1170     05BC  1507               	bsf	7,2	;volatile
  1171     05BD  1187               	bcf	7,3	;volatile
  1172                           
  1173                           ;atividade7.c: 85:     if (PORTBbits.RB0 == 0) tecla = 12;
  1174     05BE  1806               	btfsc	6,0	;volatile
  1175     05BF  2DC1               	goto	u1091
  1176     05C0  2DC2               	goto	u1090
  1177     05C1                     u1091:
  1178     05C1  2DC4               	goto	l59
  1179     05C2                     u1090:
  1180     05C2                     l1236:
  1181     05C2  300C               	movlw	12
  1182     05C3  00F0               	movwf	teclado@tecla
  1183     05C4                     l59:
  1184                           
  1185                           ;atividade7.c: 86:     if (PORTBbits.RB1 == 0) tecla = 13;
  1186     05C4  1886               	btfsc	6,1	;volatile
  1187     05C5  2DC7               	goto	u1101
  1188     05C6  2DC8               	goto	u1100
  1189     05C7                     u1101:
  1190     05C7  2DCA               	goto	l60
  1191     05C8                     u1100:
  1192     05C8                     l1238:
  1193     05C8  300D               	movlw	13
  1194     05C9  00F0               	movwf	teclado@tecla
  1195     05CA                     l60:
  1196                           
  1197                           ;atividade7.c: 87:     if (PORTBbits.RB2 == 0) tecla = 14;
  1198     05CA  1906               	btfsc	6,2	;volatile
  1199     05CB  2DCD               	goto	u1111
  1200     05CC  2DCE               	goto	u1110
  1201     05CD                     u1111:
  1202     05CD  2DD0               	goto	l61
  1203     05CE                     u1110:
  1204     05CE                     l1240:
  1205     05CE  300E               	movlw	14
  1206     05CF  00F0               	movwf	teclado@tecla
  1207     05D0                     l61:
  1208                           
  1209                           ;atividade7.c: 88:     if (PORTBbits.RB3 == 0) tecla = 15;
  1210     05D0  1986               	btfsc	6,3	;volatile
  1211     05D1  2DD3               	goto	u1121
  1212     05D2  2DD4               	goto	u1120
  1213     05D3                     u1121:
  1214     05D3  2DD6               	goto	l1244
  1215     05D4                     u1120:
  1216     05D4                     l1242:
  1217     05D4  300F               	movlw	15
  1218     05D5  00F0               	movwf	teclado@tecla
  1219     05D6                     l1244:
  1220                           
  1221                           ;atividade7.c: 65:   while(tecla == 20){
  1222     05D6  3014               	movlw	20
  1223     05D7  0670               	xorwf	teclado@tecla,w
  1224     05D8  1903               	btfsc	3,2
  1225     05D9  2DDB               	goto	u1131
  1226     05DA  2DDC               	goto	u1130
  1227     05DB                     u1131:
  1228     05DB  2D65               	goto	l46
  1229     05DC                     u1130:
  1230     05DC                     l1246:
  1231                           
  1232                           ;atividade7.c: 90:     return tecla;
  1233     05DC  0870               	movf	teclado@tecla,w
  1234     05DD                     l64:
  1235     05DD  0008               	return
  1236     05DE                     __end_of_teclado:
  1237                           
  1238                           	psect	text5
  1239     0434                     __ptext5:	
  1240 ;; *************** function _sprintf *****************
  1241 ;; Defined at:
  1242 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_sprintf.c"
  1243 ;; Parameters:    Size  Location     Type
  1244 ;;  s               1   17[BANK0 ] PTR unsigned char 
  1245 ;;		 -> atualiza_lcd@buffer(16), 
  1246 ;;  fmt             1   18[BANK0 ] PTR const unsigned char 
  1247 ;;		 -> STR_1(3), 
  1248 ;; Auto vars:     Size  Location     Type
  1249 ;;  f              11   23[BANK0 ] struct _IO_FILE
  1250 ;;  ret             2    0        int 
  1251 ;;  ap              1   22[BANK0 ] PTR void [1]
  1252 ;;		 -> ?_sprintf(2), 
  1253 ;; Return value:  Size  Location     Type
  1254 ;;                  2   17[BANK0 ] int 
  1255 ;; Registers used:
  1256 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1257 ;; Tracked objects:
  1258 ;;		On entry : 0/0
  1259 ;;		On exit  : 0/0
  1260 ;;		Unchanged: 0/0
  1261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1262 ;;      Params:         0       4       0       0       0
  1263 ;;      Locals:         0      12       0       0       0
  1264 ;;      Temps:          0       1       0       0       0
  1265 ;;      Totals:         0      17       0       0       0
  1266 ;;Total ram usage:       17 bytes
  1267 ;; Hardware stack levels used: 1
  1268 ;; Hardware stack levels required when called: 4
  1269 ;; This function calls:
  1270 ;;		_vfprintf
  1271 ;; This function is called by:
  1272 ;;		_atualiza_lcd
  1273 ;; This function uses a non-reentrant model
  1274 ;;
  1275                           
  1276     0434                     _sprintf:	
  1277                           ;psect for function _sprintf
  1278                           
  1279     0434                     l1250:	
  1280                           ;incstack = 0
  1281                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1282                           
  1283     0434  3033               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  1284     0435  1283               	bcf	3,5	;RP0=0, select bank0
  1285     0436  1303               	bcf	3,6	;RP1=0, select bank0
  1286     0437  00B6               	movwf	sprintf@ap
  1287     0438                     l1252:
  1288     0438  0831               	movf	sprintf@s,w
  1289     0439  00B7               	movwf	sprintf@f
  1290     043A  3000               	movlw	0
  1291     043B  00B8               	movwf	sprintf@f+1
  1292     043C                     l1254:
  1293     043C  01B9               	clrf	sprintf@f+2
  1294     043D  01BA               	clrf	sprintf@f+3
  1295     043E                     l1256:
  1296     043E  01C0               	clrf	sprintf@f+9
  1297     043F  01C1               	clrf	sprintf@f+10
  1298     0440                     l1258:
  1299     0440  3037               	movlw	low sprintf@f
  1300     0441  00AD               	movwf	vfprintf@fp
  1301     0442  3000               	movlw	high sprintf@f
  1302     0443  00AE               	movwf	vfprintf@fp+1
  1303     0444  0832               	movf	sprintf@fmt,w
  1304     0445  00AF               	movwf	vfprintf@fmt
  1305     0446  3036               	movlw	(low (sprintf@ap| 0))& (0+255)
  1306     0447  00B0               	movwf	vfprintf@ap
  1307     0448  120A  118A  2457  120A  118A  	fcall	_vfprintf
  1308     044D                     l1260:
  1309     044D  1283               	bcf	3,5	;RP0=0, select bank0
  1310     044E  1303               	bcf	3,6	;RP1=0, select bank0
  1311     044F  0839               	movf	sprintf@f+2,w
  1312     0450  0731               	addwf	sprintf@s,w
  1313     0451  00B5               	movwf	??_sprintf
  1314     0452  0835               	movf	??_sprintf,w
  1315     0453  0084               	movwf	4
  1316     0454  1383               	bcf	3,7	;select IRP bank0
  1317     0455  0180               	clrf	0
  1318     0456                     l636:
  1319     0456  0008               	return
  1320     0457                     __end_of_sprintf:
  1321                           
  1322                           	psect	text6
  1323     0457                     __ptext6:	
  1324 ;; *************** function _vfprintf *****************
  1325 ;; Defined at:
  1326 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  1327 ;; Parameters:    Size  Location     Type
  1328 ;;  fp              2   13[BANK0 ] PTR struct _IO_FILE
  1329 ;;		 -> sprintf@f(11), 
  1330 ;;  fmt             1   15[BANK0 ] PTR const unsigned char 
  1331 ;;		 -> STR_1(3), 
  1332 ;;  ap              1   16[BANK0 ] PTR PTR void 
  1333 ;;		 -> sprintf@ap(1), 
  1334 ;; Auto vars:     Size  Location     Type
  1335 ;;  cfmt            1   13[COMMON] PTR unsigned char 
  1336 ;;		 -> STR_1(3), 
  1337 ;; Return value:  Size  Location     Type
  1338 ;;                  2   13[BANK0 ] int 
  1339 ;; Registers used:
  1340 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1341 ;; Tracked objects:
  1342 ;;		On entry : 0/0
  1343 ;;		On exit  : 0/0
  1344 ;;		Unchanged: 0/0
  1345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1346 ;;      Params:         0       4       0       0       0
  1347 ;;      Locals:         1       0       0       0       0
  1348 ;;      Temps:          0       0       0       0       0
  1349 ;;      Totals:         1       4       0       0       0
  1350 ;;Total ram usage:        5 bytes
  1351 ;; Hardware stack levels used: 1
  1352 ;; Hardware stack levels required when called: 3
  1353 ;; This function calls:
  1354 ;;		_vfpfcnvrt
  1355 ;; This function is called by:
  1356 ;;		_sprintf
  1357 ;; This function uses a non-reentrant model
  1358 ;;
  1359                           
  1360     0457                     _vfprintf:	
  1361                           ;psect for function _vfprintf
  1362                           
  1363     0457                     l1182:	
  1364                           ;incstack = 0
  1365                           ; Regs used in _vfprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1366                           
  1367                           
  1368                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1369     0457  1283               	bcf	3,5	;RP0=0, select bank0
  1370     0458  1303               	bcf	3,6	;RP1=0, select bank0
  1371     0459  082F               	movf	vfprintf@fmt,w
  1372     045A  00FD               	movwf	vfprintf@cfmt
  1373                           
  1374                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1375     045B  2C6B               	goto	l1186
  1376     045C                     l1184:
  1377                           
  1378                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1379     045C  1283               	bcf	3,5	;RP0=0, select bank0
  1380     045D  1303               	bcf	3,6	;RP1=0, select bank0
  1381     045E  082D               	movf	vfprintf@fp,w
  1382     045F  00A0               	movwf	vfpfcnvrt@fp
  1383     0460  082E               	movf	vfprintf@fp+1,w
  1384     0461  00A1               	movwf	vfpfcnvrt@fp+1
  1385     0462  307D               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  1386     0463  00A2               	movwf	vfpfcnvrt@fmt
  1387     0464  0830               	movf	vfprintf@ap,w
  1388     0465  00A3               	movwf	vfpfcnvrt@ap
  1389     0466  120A  118A  26FB  120A  118A  	fcall	_vfpfcnvrt
  1390     046B                     l1186:
  1391                           
  1392                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1393     046B  087D               	movf	vfprintf@cfmt,w
  1394     046C  0084               	movwf	4
  1395     046D  120A  118A  2003  120A  118A  	fcall	stringdir
  1396     0472  3A00               	xorlw	0
  1397     0473  1D03               	skipz
  1398     0474  2C76               	goto	u951
  1399     0475  2C77               	goto	u950
  1400     0476                     u951:
  1401     0476  2C5C               	goto	l1184
  1402     0477                     u950:
  1403     0477                     l1188:
  1404                           
  1405                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1406     0477  1283               	bcf	3,5	;RP0=0, select bank0
  1407     0478  1303               	bcf	3,6	;RP1=0, select bank0
  1408     0479  01AD               	clrf	?_vfprintf
  1409     047A  01AE               	clrf	?_vfprintf+1
  1410     047B                     l680:
  1411     047B  0008               	return
  1412     047C                     __end_of_vfprintf:
  1413                           
  1414                           	psect	text7
  1415     06FB                     __ptext7:	
  1416 ;; *************** function _vfpfcnvrt *****************
  1417 ;; Defined at:
  1418 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  1419 ;; Parameters:    Size  Location     Type
  1420 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  1421 ;;		 -> sprintf@f(11), 
  1422 ;;  fmt             1    2[BANK0 ] PTR PTR unsigned char 
  1423 ;;		 -> vfprintf@cfmt(1), 
  1424 ;;  ap              1    3[BANK0 ] PTR PTR void 
  1425 ;;		 -> sprintf@ap(1), 
  1426 ;; Auto vars:     Size  Location     Type
  1427 ;;  convarg         4    8[BANK0 ] struct .
  1428 ;;  c               1   12[BANK0 ] unsigned char 
  1429 ;;  cp              1    7[BANK0 ] PTR unsigned char 
  1430 ;;		 -> STR_1(3), 
  1431 ;;  done            1    6[BANK0 ] _Bool 
  1432 ;; Return value:  Size  Location     Type
  1433 ;;                  1    wreg      void 
  1434 ;; Registers used:
  1435 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1436 ;; Tracked objects:
  1437 ;;		On entry : 0/0
  1438 ;;		On exit  : 0/0
  1439 ;;		Unchanged: 0/0
  1440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1441 ;;      Params:         0       4       0       0       0
  1442 ;;      Locals:         0       7       0       0       0
  1443 ;;      Temps:          0       2       0       0       0
  1444 ;;      Totals:         0      13       0       0       0
  1445 ;;Total ram usage:       13 bytes
  1446 ;; Hardware stack levels used: 1
  1447 ;; Hardware stack levels required when called: 2
  1448 ;; This function calls:
  1449 ;;		___awdiv
  1450 ;;		___awmod
  1451 ;;		_abs
  1452 ;;		_fputc
  1453 ;; This function is called by:
  1454 ;;		_vfprintf
  1455 ;; This function uses a non-reentrant model
  1456 ;;
  1457                           
  1458     06FB                     _vfpfcnvrt:	
  1459                           ;psect for function _vfpfcnvrt
  1460                           
  1461     06FB                     l1122:	
  1462                           ;incstack = 0
  1463                           ; Regs used in _vfpfcnvrt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1464                           
  1465                           
  1466                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  1467     06FB  1283               	bcf	3,5	;RP0=0, select bank0
  1468     06FC  1303               	bcf	3,6	;RP1=0, select bank0
  1469     06FD  0822               	movf	vfpfcnvrt@fmt,w
  1470     06FE  0084               	movwf	4
  1471     06FF  0800               	movf	0,w
  1472     0700  0084               	movwf	4
  1473     0701  120A  118A  2003  120A  118A  	fcall	stringdir
  1474     0706  3A25               	xorlw	37
  1475     0707  1D03               	skipz
  1476     0708  2F0A               	goto	u851
  1477     0709  2F0B               	goto	u850
  1478     070A                     u851:
  1479     070A  2FC7               	goto	l1168
  1480     070B                     u850:
  1481     070B                     l1124:
  1482                           
  1483                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1484     070B  0822               	movf	vfpfcnvrt@fmt,w
  1485     070C  0084               	movwf	4
  1486     070D  3001               	movlw	1
  1487     070E  0780               	addwf	0,f
  1488     070F                     l1126:
  1489                           
  1490                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1491     070F  01DA               	clrf	_width
  1492     0710  01DB               	clrf	_width+1
  1493     0711  3000               	movlw	0
  1494     0712  00DE               	movwf	_flags
  1495     0713                     l1128:
  1496                           
  1497                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1498     0713  30FF               	movlw	255
  1499     0714  00DC               	movwf	_prec
  1500     0715  30FF               	movlw	255
  1501     0716  00DD               	movwf	_prec+1
  1502     0717                     l1130:
  1503                           
  1504                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  1505     0717  0822               	movf	vfpfcnvrt@fmt,w
  1506     0718  0084               	movwf	4
  1507     0719  0800               	movf	0,w
  1508     071A  00A7               	movwf	vfpfcnvrt@cp
  1509     071B                     l1132:
  1510                           
  1511                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1512     071B  0827               	movf	vfpfcnvrt@cp,w
  1513     071C  0084               	movwf	4
  1514     071D  120A  118A  2003  120A  118A  	fcall	stringdir
  1515     0722  3A64               	xorlw	100
  1516     0723  1903               	skipnz
  1517     0724  2F26               	goto	u861
  1518     0725  2F27               	goto	u860
  1519     0726                     u861:
  1520     0726  2F33               	goto	l1136
  1521     0727                     u860:
  1522     0727                     l1134:
  1523     0727  0827               	movf	vfpfcnvrt@cp,w
  1524     0728  0084               	movwf	4
  1525     0729  120A  118A  2003  120A  118A  	fcall	stringdir
  1526     072E  3A69               	xorlw	105
  1527     072F  1D03               	skipz
  1528     0730  2F32               	goto	u871
  1529     0731  2F33               	goto	u870
  1530     0732                     u871:
  1531     0732  2FC0               	goto	l1164
  1532     0733                     u870:
  1533     0733                     l1136:
  1534                           
  1535                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1536     0733  0823               	movf	vfpfcnvrt@ap,w
  1537     0734  0084               	movwf	4
  1538     0735  1383               	bcf	3,7	;select IRP bank0
  1539     0736  0800               	movf	0,w
  1540     0737  00FF               	movwf	btemp+1
  1541     0738  3002               	movlw	2
  1542     0739  0780               	addwf	0,f
  1543     073A  087F               	movf	btemp+1,w
  1544     073B  0084               	movwf	4
  1545     073C  0800               	movf	0,w
  1546     073D  00A8               	movwf	vfpfcnvrt@convarg
  1547     073E  0A84               	incf	4,f
  1548     073F  0800               	movf	0,w
  1549     0740  00A9               	movwf	vfpfcnvrt@convarg+1
  1550     0741                     l1138:
  1551                           
  1552                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  1553     0741  0822               	movf	vfpfcnvrt@fmt,w
  1554     0742  0084               	movwf	4
  1555     0743  0827               	movf	vfpfcnvrt@cp,w
  1556     0744  3E01               	addlw	1
  1557     0745  0080               	movwf	0
  1558     0746                     l1140:
  1559                           
  1560                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  1561     0746  3020               	movlw	32
  1562     0747  00AC               	movwf	vfpfcnvrt@c
  1563     0748                     l1142:
  1564                           
  1565                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  1566     0748  1BA9               	btfsc	vfpfcnvrt@convarg+1,7
  1567     0749  2F4B               	goto	u881
  1568     074A  2F4D               	goto	u880
  1569     074B                     u881:
  1570     074B  3001               	movlw	1
  1571     074C  2F4E               	goto	u890
  1572     074D                     u880:
  1573     074D  3000               	movlw	0
  1574     074E                     u890:
  1575     074E  00A6               	movwf	vfpfcnvrt@done
  1576     074F                     l1144:
  1577                           
  1578                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  1579     074F  3001               	movlw	1
  1580     0750  02AC               	subwf	vfpfcnvrt@c,f
  1581     0751  082C               	movf	vfpfcnvrt@c,w
  1582     0752  3EA0               	addlw	(low (_dbuf| 0))& (0+255)
  1583     0753  0084               	movwf	4
  1584     0754  300A               	movlw	10
  1585     0755  00F0               	movwf	___awmod@divisor
  1586     0756  3000               	movlw	0
  1587     0757  00F1               	movwf	___awmod@divisor+1
  1588     0758  0829               	movf	vfpfcnvrt@convarg+1,w
  1589     0759  00F3               	movwf	___awmod@dividend+1
  1590     075A  0828               	movf	vfpfcnvrt@convarg,w
  1591     075B  00F2               	movwf	___awmod@dividend
  1592     075C  120A  118A  24A8  120A  118A  	fcall	___awmod
  1593     0761  0871               	movf	?___awmod+1,w
  1594     0762  00F7               	movwf	abs@a+1
  1595     0763  0870               	movf	?___awmod,w
  1596     0764  00F6               	movwf	abs@a
  1597     0765  120A  118A  23CE  120A  118A  	fcall	_abs
  1598     076A  0876               	movf	?_abs,w
  1599     076B  3E30               	addlw	48
  1600     076C  1383               	bcf	3,7	;select IRP bank1
  1601     076D  0080               	movwf	0
  1602     076E                     l1146:
  1603                           
  1604                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  1605     076E  300A               	movlw	10
  1606     076F  00F0               	movwf	___awdiv@divisor
  1607     0770  3000               	movlw	0
  1608     0771  00F1               	movwf	___awdiv@divisor+1
  1609     0772  1283               	bcf	3,5	;RP0=0, select bank0
  1610     0773  1303               	bcf	3,6	;RP1=0, select bank0
  1611     0774  0829               	movf	vfpfcnvrt@convarg+1,w
  1612     0775  00F3               	movwf	___awdiv@dividend+1
  1613     0776  0828               	movf	vfpfcnvrt@convarg,w
  1614     0777  00F2               	movwf	___awdiv@dividend
  1615     0778  120A  118A  24FF  120A  118A  	fcall	___awdiv
  1616     077D  0871               	movf	?___awdiv+1,w
  1617     077E  1283               	bcf	3,5	;RP0=0, select bank0
  1618     077F  1303               	bcf	3,6	;RP1=0, select bank0
  1619     0780  00A9               	movwf	vfpfcnvrt@convarg+1
  1620     0781  0870               	movf	?___awdiv,w
  1621     0782  00A8               	movwf	vfpfcnvrt@convarg
  1622     0783                     l1148:
  1623                           
  1624                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  1625     0783  0828               	movf	vfpfcnvrt@convarg,w
  1626     0784  0429               	iorwf	vfpfcnvrt@convarg+1,w
  1627     0785  1903               	btfsc	3,2
  1628     0786  2F88               	goto	u901
  1629     0787  2F89               	goto	u900
  1630     0788                     u901:
  1631     0788  2F8E               	goto	l1152
  1632     0789                     u900:
  1633     0789                     l1150:
  1634     0789  082C               	movf	vfpfcnvrt@c,w
  1635     078A  1D03               	btfss	3,2
  1636     078B  2F8D               	goto	u911
  1637     078C  2F8E               	goto	u910
  1638     078D                     u911:
  1639     078D  2F4F               	goto	l1144
  1640     078E                     u910:
  1641     078E                     l1152:
  1642                           
  1643                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  1644     078E  082C               	movf	vfpfcnvrt@c,w
  1645     078F  1903               	btfsc	3,2
  1646     0790  2F92               	goto	u921
  1647     0791  2F93               	goto	u920
  1648     0792                     u921:
  1649     0792  2FB9               	goto	l1162
  1650     0793                     u920:
  1651     0793                     l1154:
  1652     0793  0826               	movf	vfpfcnvrt@done,w
  1653     0794  1903               	btfsc	3,2
  1654     0795  2F97               	goto	u931
  1655     0796  2F98               	goto	u930
  1656     0797                     u931:
  1657     0797  2FB9               	goto	l1162
  1658     0798                     u930:
  1659     0798                     l1156:
  1660                           
  1661                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  1662     0798  3001               	movlw	1
  1663     0799  02AC               	subwf	vfpfcnvrt@c,f
  1664     079A  082C               	movf	vfpfcnvrt@c,w
  1665     079B  3EA0               	addlw	(low (_dbuf| 0))& (0+255)
  1666     079C  0084               	movwf	4
  1667     079D  302D               	movlw	45
  1668     079E  1383               	bcf	3,7	;select IRP bank1
  1669     079F  0080               	movwf	0
  1670     07A0  2FB9               	goto	l1162
  1671     07A1                     l1158:
  1672                           
  1673                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  1674     07A1  082C               	movf	vfpfcnvrt@c,w
  1675     07A2  3EA0               	addlw	(low (_dbuf| 0))& (0+255)
  1676     07A3  0084               	movwf	4
  1677     07A4  1383               	bcf	3,7	;select IRP bank1
  1678     07A5  0800               	movf	0,w
  1679     07A6  00A4               	movwf	??_vfpfcnvrt
  1680     07A7  01A5               	clrf	??_vfpfcnvrt+1
  1681     07A8  0824               	movf	??_vfpfcnvrt,w
  1682     07A9  00F0               	movwf	fputc@c
  1683     07AA  0825               	movf	??_vfpfcnvrt+1,w
  1684     07AB  00F1               	movwf	fputc@c+1
  1685     07AC  0820               	movf	vfpfcnvrt@fp,w
  1686     07AD  00F2               	movwf	fputc@fp
  1687     07AE  0821               	movf	vfpfcnvrt@fp+1,w
  1688     07AF  00F3               	movwf	fputc@fp+1
  1689     07B0  120A  118A  2661  120A  118A  	fcall	_fputc
  1690     07B5                     l1160:
  1691     07B5  3001               	movlw	1
  1692     07B6  1283               	bcf	3,5	;RP0=0, select bank0
  1693     07B7  1303               	bcf	3,6	;RP1=0, select bank0
  1694     07B8  07AC               	addwf	vfpfcnvrt@c,f
  1695     07B9                     l1162:
  1696                           
  1697                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  1698     07B9  3020               	movlw	32
  1699     07BA  062C               	xorwf	vfpfcnvrt@c,w
  1700     07BB  1D03               	btfss	3,2
  1701     07BC  2FBE               	goto	u941
  1702     07BD  2FBF               	goto	u940
  1703     07BE                     u941:
  1704     07BE  2FA1               	goto	l1158
  1705     07BF                     u940:
  1706     07BF  2FE0               	goto	l674
  1707     07C0                     l1164:
  1708                           
  1709                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1710     07C0  1283               	bcf	3,5	;RP0=0, select bank0
  1711     07C1  1303               	bcf	3,6	;RP1=0, select bank0
  1712     07C2  0822               	movf	vfpfcnvrt@fmt,w
  1713     07C3  0084               	movwf	4
  1714     07C4  3001               	movlw	1
  1715     07C5  0780               	addwf	0,f
  1716     07C6  2FE0               	goto	l674
  1717     07C7                     l1168:
  1718                           
  1719                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1720     07C7  0822               	movf	vfpfcnvrt@fmt,w
  1721     07C8  0084               	movwf	4
  1722     07C9  0800               	movf	0,w
  1723     07CA  0084               	movwf	4
  1724     07CB  120A  118A  2003  120A  118A  	fcall	stringdir
  1725     07D0  00A4               	movwf	??_vfpfcnvrt
  1726     07D1  01A5               	clrf	??_vfpfcnvrt+1
  1727     07D2  0824               	movf	??_vfpfcnvrt,w
  1728     07D3  00F0               	movwf	fputc@c
  1729     07D4  0825               	movf	??_vfpfcnvrt+1,w
  1730     07D5  00F1               	movwf	fputc@c+1
  1731     07D6  0820               	movf	vfpfcnvrt@fp,w
  1732     07D7  00F2               	movwf	fputc@fp
  1733     07D8  0821               	movf	vfpfcnvrt@fp+1,w
  1734     07D9  00F3               	movwf	fputc@fp+1
  1735     07DA  120A  118A  2661  120A  118A  	fcall	_fputc
  1736     07DF  2FC0               	goto	l1164
  1737     07E0                     l674:
  1738     07E0  0008               	return
  1739     07E1                     __end_of_vfpfcnvrt:
  1740                           
  1741                           	psect	text8
  1742     0661                     __ptext8:	
  1743 ;; *************** function _fputc *****************
  1744 ;; Defined at:
  1745 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_fputc.c"
  1746 ;; Parameters:    Size  Location     Type
  1747 ;;  c               2    0[COMMON] int 
  1748 ;;  fp              2    2[COMMON] PTR struct _IO_FILE
  1749 ;;		 -> sprintf@f(11), 
  1750 ;; Auto vars:     Size  Location     Type
  1751 ;;		None
  1752 ;; Return value:  Size  Location     Type
  1753 ;;                  2    0[COMMON] int 
  1754 ;; Registers used:
  1755 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1756 ;; Tracked objects:
  1757 ;;		On entry : 0/0
  1758 ;;		On exit  : 0/0
  1759 ;;		Unchanged: 0/0
  1760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1761 ;;      Params:         4       0       0       0       0
  1762 ;;      Locals:         0       0       0       0       0
  1763 ;;      Temps:          9       0       0       0       0
  1764 ;;      Totals:        13       0       0       0       0
  1765 ;;Total ram usage:       13 bytes
  1766 ;; Hardware stack levels used: 1
  1767 ;; Hardware stack levels required when called: 1
  1768 ;; This function calls:
  1769 ;;		_putch
  1770 ;; This function is called by:
  1771 ;;		_vfpfcnvrt
  1772 ;; This function uses a non-reentrant model
  1773 ;;
  1774                           
  1775     0661                     _fputc:	
  1776                           ;psect for function _fputc
  1777                           
  1778     0661                     l1100:	
  1779                           ;incstack = 0
  1780                           ; Regs used in _fputc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1781                           
  1782     0661  0872               	movf	fputc@fp,w
  1783     0662  0473               	iorwf	fputc@fp+1,w
  1784     0663  1903               	btfsc	3,2
  1785     0664  2E66               	goto	u791
  1786     0665  2E67               	goto	u790
  1787     0666                     u791:
  1788     0666  2E6D               	goto	l1104
  1789     0667                     u790:
  1790     0667                     l1102:
  1791     0667  0872               	movf	fputc@fp,w
  1792     0668  0473               	iorwf	fputc@fp+1,w
  1793     0669  1D03               	btfss	3,2
  1794     066A  2E6C               	goto	u801
  1795     066B  2E6D               	goto	u800
  1796     066C                     u801:
  1797     066C  2E74               	goto	l1106
  1798     066D                     u800:
  1799     066D                     l1104:
  1800     066D  0870               	movf	fputc@c,w
  1801     066E  120A  118A  23B5  120A  118A  	fcall	_putch
  1802     0673  2EFA               	goto	l699
  1803     0674                     l1106:
  1804     0674  0872               	movf	fputc@fp,w
  1805     0675  3E09               	addlw	9
  1806     0676  00F4               	movwf	??_fputc
  1807     0677  0873               	movf	fputc@fp+1,w
  1808     0678  1803               	skipnc
  1809     0679  3E01               	addlw	1
  1810     067A  3E00               	addlw	0
  1811     067B  00F5               	movwf	??_fputc+1
  1812     067C  0874               	movf	??_fputc,w
  1813     067D  0084               	movwf	4
  1814     067E  1783               	bsf	3,7
  1815     067F  1C75               	btfss	??_fputc+1,0
  1816     0680  1383               	bcf	3,7
  1817     0681  0800               	movf	0,w
  1818     0682  00F6               	movwf	??_fputc+2
  1819     0683  0A84               	incf	4,f
  1820     0684  0800               	movf	0,w
  1821     0685  00F7               	movwf	??_fputc+3
  1822     0686  0876               	movf	??_fputc+2,w
  1823     0687  0477               	iorwf	??_fputc+3,w
  1824     0688  1903               	btfsc	3,2
  1825     0689  2E8B               	goto	u811
  1826     068A  2E8C               	goto	u810
  1827     068B                     u811:
  1828     068B  2EBE               	goto	l1110
  1829     068C                     u810:
  1830     068C                     l1108:
  1831     068C  0872               	movf	fputc@fp,w
  1832     068D  3E09               	addlw	9
  1833     068E  00F4               	movwf	??_fputc
  1834     068F  0873               	movf	fputc@fp+1,w
  1835     0690  1803               	skipnc
  1836     0691  3E01               	addlw	1
  1837     0692  3E00               	addlw	0
  1838     0693  00F5               	movwf	??_fputc+1
  1839     0694  0874               	movf	??_fputc,w
  1840     0695  0084               	movwf	4
  1841     0696  1783               	bsf	3,7
  1842     0697  1C75               	btfss	??_fputc+1,0
  1843     0698  1383               	bcf	3,7
  1844     0699  0800               	movf	0,w
  1845     069A  00F6               	movwf	??_fputc+2
  1846     069B  0A84               	incf	4,f
  1847     069C  0800               	movf	0,w
  1848     069D  00F7               	movwf	??_fputc+3
  1849     069E  0872               	movf	fputc@fp,w
  1850     069F  3E02               	addlw	2
  1851     06A0  00F8               	movwf	??_fputc+4
  1852     06A1  0873               	movf	fputc@fp+1,w
  1853     06A2  1803               	skipnc
  1854     06A3  3E01               	addlw	1
  1855     06A4  3E00               	addlw	0
  1856     06A5  00F9               	movwf	??_fputc+5
  1857     06A6  0878               	movf	??_fputc+4,w
  1858     06A7  0084               	movwf	4
  1859     06A8  1783               	bsf	3,7
  1860     06A9  1C79               	btfss	??_fputc+5,0
  1861     06AA  1383               	bcf	3,7
  1862     06AB  0800               	movf	0,w
  1863     06AC  00FA               	movwf	??_fputc+6
  1864     06AD  0A84               	incf	4,f
  1865     06AE  0800               	movf	0,w
  1866     06AF  00FB               	movwf	??_fputc+7
  1867     06B0  087B               	movf	??_fputc+7,w
  1868     06B1  3A80               	xorlw	128
  1869     06B2  00FC               	movwf	??_fputc+8
  1870     06B3  0877               	movf	??_fputc+3,w
  1871     06B4  3A80               	xorlw	128
  1872     06B5  027C               	subwf	??_fputc+8,w
  1873     06B6  1D03               	skipz
  1874     06B7  2EBA               	goto	u825
  1875     06B8  0876               	movf	??_fputc+2,w
  1876     06B9  027A               	subwf	??_fputc+6,w
  1877     06BA                     u825:
  1878     06BA  1803               	skipnc
  1879     06BB  2EBD               	goto	u821
  1880     06BC  2EBE               	goto	u820
  1881     06BD                     u821:
  1882     06BD  2EFA               	goto	l699
  1883     06BE                     u820:
  1884     06BE                     l1110:
  1885     06BE  0872               	movf	fputc@fp,w
  1886     06BF  0084               	movwf	4
  1887     06C0  1783               	bsf	3,7
  1888     06C1  1C73               	btfss	fputc@fp+1,0
  1889     06C2  1383               	bcf	3,7
  1890     06C3  0800               	movf	0,w
  1891     06C4  00F4               	movwf	??_fputc
  1892     06C5  0A84               	incf	4,f
  1893     06C6  0800               	movf	0,w
  1894     06C7  00F5               	movwf	??_fputc+1
  1895     06C8  0872               	movf	fputc@fp,w
  1896     06C9  3E02               	addlw	2
  1897     06CA  00F6               	movwf	??_fputc+2
  1898     06CB  0873               	movf	fputc@fp+1,w
  1899     06CC  1803               	skipnc
  1900     06CD  3E01               	addlw	1
  1901     06CE  3E00               	addlw	0
  1902     06CF  00F7               	movwf	??_fputc+3
  1903     06D0  0876               	movf	??_fputc+2,w
  1904     06D1  0084               	movwf	4
  1905     06D2  1783               	bsf	3,7
  1906     06D3  1C77               	btfss	??_fputc+3,0
  1907     06D4  1383               	bcf	3,7
  1908     06D5  0800               	movf	0,w
  1909     06D6  0774               	addwf	??_fputc,w
  1910     06D7  00F9               	movwf	??_fputc+5
  1911     06D8  0875               	movf	??_fputc+1,w
  1912     06D9  00F8               	movwf	??_fputc+4
  1913     06DA  1803               	skipnc
  1914     06DB  0AF8               	incf	??_fputc+4,f
  1915     06DC  1F80               	btfss	0,7
  1916     06DD  2EDF               	goto	u830
  1917     06DE  03F8               	decf	??_fputc+4,f
  1918     06DF                     u830:
  1919     06DF  0878               	movf	??_fputc+4,w
  1920     06E0  00FA               	movwf	??_fputc+6
  1921     06E1  0879               	movf	??_fputc+5,w
  1922     06E2  0084               	movwf	4
  1923     06E3  1783               	bsf	3,7
  1924     06E4  1C7A               	btfss	??_fputc+6,0
  1925     06E5  1383               	bcf	3,7
  1926     06E6  0870               	movf	fputc@c,w
  1927     06E7  0080               	movwf	0
  1928     06E8  0872               	movf	fputc@fp,w
  1929     06E9  3E02               	addlw	2
  1930     06EA  00F4               	movwf	??_fputc
  1931     06EB  0873               	movf	fputc@fp+1,w
  1932     06EC  1803               	skipnc
  1933     06ED  3E01               	addlw	1
  1934     06EE  3E00               	addlw	0
  1935     06EF  00F5               	movwf	??_fputc+1
  1936     06F0  0874               	movf	??_fputc,w
  1937     06F1  0084               	movwf	4
  1938     06F2  1783               	bsf	3,7
  1939     06F3  1C75               	btfss	??_fputc+1,0
  1940     06F4  1383               	bcf	3,7
  1941     06F5  3001               	movlw	1
  1942     06F6  0780               	addwf	0,f
  1943     06F7  0A84               	incf	4,f
  1944     06F8  1803               	skipnc
  1945     06F9  0A80               	incf	0,f
  1946     06FA                     l699:
  1947     06FA  0008               	return
  1948     06FB                     __end_of_fputc:
  1949                           
  1950                           	psect	text9
  1951     03B5                     __ptext9:	
  1952 ;; *************** function _putch *****************
  1953 ;; Defined at:
  1954 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\putch.c"
  1955 ;; Parameters:    Size  Location     Type
  1956 ;;  c               1    wreg     unsigned char 
  1957 ;; Auto vars:     Size  Location     Type
  1958 ;;  c               1    0[COMMON] unsigned char 
  1959 ;; Return value:  Size  Location     Type
  1960 ;;                  1    wreg      void 
  1961 ;; Registers used:
  1962 ;;		wreg
  1963 ;; Tracked objects:
  1964 ;;		On entry : 0/0
  1965 ;;		On exit  : 0/0
  1966 ;;		Unchanged: 0/0
  1967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1968 ;;      Params:         0       0       0       0       0
  1969 ;;      Locals:         0       0       0       0       0
  1970 ;;      Temps:          0       0       0       0       0
  1971 ;;      Totals:         0       0       0       0       0
  1972 ;;Total ram usage:        0 bytes
  1973 ;; Hardware stack levels used: 1
  1974 ;; This function calls:
  1975 ;;		Nothing
  1976 ;; This function is called by:
  1977 ;;		_fputc
  1978 ;; This function uses a non-reentrant model
  1979 ;;
  1980                           
  1981     03B5                     _putch:	
  1982                           ;psect for function _putch
  1983                           
  1984     03B5                     l710:	
  1985                           ;incstack = 0
  1986                           ; Regs used in _putch: [wreg]
  1987                           
  1988     03B5  0008               	return
  1989     03B6                     __end_of_putch:
  1990                           
  1991                           	psect	text10
  1992     03CE                     __ptext10:	
  1993 ;; *************** function _abs *****************
  1994 ;; Defined at:
  1995 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\abs.c"
  1996 ;; Parameters:    Size  Location     Type
  1997 ;;  a               2    6[COMMON] int 
  1998 ;; Auto vars:     Size  Location     Type
  1999 ;;		None
  2000 ;; Return value:  Size  Location     Type
  2001 ;;                  2    6[COMMON] int 
  2002 ;; Registers used:
  2003 ;;		wreg, status,2, status,0
  2004 ;; Tracked objects:
  2005 ;;		On entry : 0/0
  2006 ;;		On exit  : 0/0
  2007 ;;		Unchanged: 0/0
  2008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2009 ;;      Params:         2       0       0       0       0
  2010 ;;      Locals:         0       0       0       0       0
  2011 ;;      Temps:          2       0       0       0       0
  2012 ;;      Totals:         4       0       0       0       0
  2013 ;;Total ram usage:        4 bytes
  2014 ;; Hardware stack levels used: 1
  2015 ;; This function calls:
  2016 ;;		Nothing
  2017 ;; This function is called by:
  2018 ;;		_vfpfcnvrt
  2019 ;; This function uses a non-reentrant model
  2020 ;;
  2021                           
  2022     03CE                     _abs:	
  2023                           ;psect for function _abs
  2024                           
  2025     03CE                     l1114:	
  2026                           ;incstack = 0
  2027                           ; Regs used in _abs: [wreg+status,2+status,0]
  2028                           
  2029     03CE  1BF7               	btfsc	abs@a+1,7
  2030     03CF  2BD1               	goto	u841
  2031     03D0  2BD2               	goto	u840
  2032     03D1                     u841:
  2033     03D1  2BD3               	goto	l1118
  2034     03D2                     u840:
  2035     03D2                     l1116:
  2036     03D2  2BDE               	goto	l687
  2037     03D3                     l1118:
  2038     03D3  0976               	comf	abs@a,w
  2039     03D4  00F8               	movwf	??_abs
  2040     03D5  0977               	comf	abs@a+1,w
  2041     03D6  00F9               	movwf	??_abs+1
  2042     03D7  0AF8               	incf	??_abs,f
  2043     03D8  1903               	skipnz
  2044     03D9  0AF9               	incf	??_abs+1,f
  2045     03DA  0878               	movf	??_abs,w
  2046     03DB  00F6               	movwf	?_abs
  2047     03DC  0879               	movf	??_abs+1,w
  2048     03DD  00F7               	movwf	?_abs+1
  2049     03DE                     l687:
  2050     03DE  0008               	return
  2051     03DF                     __end_of_abs:
  2052                           
  2053                           	psect	text11
  2054     04A8                     __ptext11:	
  2055 ;; *************** function ___awmod *****************
  2056 ;; Defined at:
  2057 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awmod.c"
  2058 ;; Parameters:    Size  Location     Type
  2059 ;;  divisor         2    0[COMMON] int 
  2060 ;;  dividend        2    2[COMMON] int 
  2061 ;; Auto vars:     Size  Location     Type
  2062 ;;  sign            1    5[COMMON] unsigned char 
  2063 ;;  counter         1    4[COMMON] unsigned char 
  2064 ;; Return value:  Size  Location     Type
  2065 ;;                  2    0[COMMON] int 
  2066 ;; Registers used:
  2067 ;;		wreg, status,2, status,0
  2068 ;; Tracked objects:
  2069 ;;		On entry : 0/0
  2070 ;;		On exit  : 0/0
  2071 ;;		Unchanged: 0/0
  2072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2073 ;;      Params:         4       0       0       0       0
  2074 ;;      Locals:         2       0       0       0       0
  2075 ;;      Temps:          0       0       0       0       0
  2076 ;;      Totals:         6       0       0       0       0
  2077 ;;Total ram usage:        6 bytes
  2078 ;; Hardware stack levels used: 1
  2079 ;; This function calls:
  2080 ;;		Nothing
  2081 ;; This function is called by:
  2082 ;;		_vfpfcnvrt
  2083 ;; This function uses a non-reentrant model
  2084 ;;
  2085                           
  2086     04A8                     ___awmod:	
  2087                           ;psect for function ___awmod
  2088                           
  2089     04A8                     l1062:	
  2090                           ;incstack = 0
  2091                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2092                           
  2093     04A8  01F5               	clrf	___awmod@sign
  2094     04A9                     l1064:
  2095     04A9  1FF3               	btfss	___awmod@dividend+1,7
  2096     04AA  2CAC               	goto	u701
  2097     04AB  2CAD               	goto	u700
  2098     04AC                     u701:
  2099     04AC  2CB4               	goto	l1070
  2100     04AD                     u700:
  2101     04AD                     l1066:
  2102     04AD  09F2               	comf	___awmod@dividend,f
  2103     04AE  09F3               	comf	___awmod@dividend+1,f
  2104     04AF  0AF2               	incf	___awmod@dividend,f
  2105     04B0  1903               	skipnz
  2106     04B1  0AF3               	incf	___awmod@dividend+1,f
  2107     04B2                     l1068:
  2108     04B2  3001               	movlw	1
  2109     04B3  00F5               	movwf	___awmod@sign
  2110     04B4                     l1070:
  2111     04B4  1FF1               	btfss	___awmod@divisor+1,7
  2112     04B5  2CB7               	goto	u711
  2113     04B6  2CB8               	goto	u710
  2114     04B7                     u711:
  2115     04B7  2CBD               	goto	l1074
  2116     04B8                     u710:
  2117     04B8                     l1072:
  2118     04B8  09F0               	comf	___awmod@divisor,f
  2119     04B9  09F1               	comf	___awmod@divisor+1,f
  2120     04BA  0AF0               	incf	___awmod@divisor,f
  2121     04BB  1903               	skipnz
  2122     04BC  0AF1               	incf	___awmod@divisor+1,f
  2123     04BD                     l1074:
  2124     04BD  0870               	movf	___awmod@divisor,w
  2125     04BE  0471               	iorwf	___awmod@divisor+1,w
  2126     04BF  1903               	btfsc	3,2
  2127     04C0  2CC2               	goto	u721
  2128     04C1  2CC3               	goto	u720
  2129     04C2                     u721:
  2130     04C2  2CF0               	goto	l1092
  2131     04C3                     u720:
  2132     04C3                     l1076:
  2133     04C3  3001               	movlw	1
  2134     04C4  00F4               	movwf	___awmod@counter
  2135     04C5  2CCF               	goto	l1082
  2136     04C6                     l1078:
  2137     04C6  3001               	movlw	1
  2138     04C7                     u735:
  2139     04C7  1003               	clrc
  2140     04C8  0DF0               	rlf	___awmod@divisor,f
  2141     04C9  0DF1               	rlf	___awmod@divisor+1,f
  2142     04CA  3EFF               	addlw	-1
  2143     04CB  1D03               	skipz
  2144     04CC  2CC7               	goto	u735
  2145     04CD                     l1080:
  2146     04CD  3001               	movlw	1
  2147     04CE  07F4               	addwf	___awmod@counter,f
  2148     04CF                     l1082:
  2149     04CF  1FF1               	btfss	___awmod@divisor+1,7
  2150     04D0  2CD2               	goto	u741
  2151     04D1  2CD3               	goto	u740
  2152     04D2                     u741:
  2153     04D2  2CC6               	goto	l1078
  2154     04D3                     u740:
  2155     04D3                     l1084:
  2156     04D3  0871               	movf	___awmod@divisor+1,w
  2157     04D4  0273               	subwf	___awmod@dividend+1,w
  2158     04D5  1D03               	skipz
  2159     04D6  2CD9               	goto	u755
  2160     04D7  0870               	movf	___awmod@divisor,w
  2161     04D8  0272               	subwf	___awmod@dividend,w
  2162     04D9                     u755:
  2163     04D9  1C03               	skipc
  2164     04DA  2CDC               	goto	u751
  2165     04DB  2CDD               	goto	u750
  2166     04DC                     u751:
  2167     04DC  2CE3               	goto	l1088
  2168     04DD                     u750:
  2169     04DD                     l1086:
  2170     04DD  0870               	movf	___awmod@divisor,w
  2171     04DE  02F2               	subwf	___awmod@dividend,f
  2172     04DF  0871               	movf	___awmod@divisor+1,w
  2173     04E0  1C03               	skipc
  2174     04E1  03F3               	decf	___awmod@dividend+1,f
  2175     04E2  02F3               	subwf	___awmod@dividend+1,f
  2176     04E3                     l1088:
  2177     04E3  3001               	movlw	1
  2178     04E4                     u765:
  2179     04E4  1003               	clrc
  2180     04E5  0CF1               	rrf	___awmod@divisor+1,f
  2181     04E6  0CF0               	rrf	___awmod@divisor,f
  2182     04E7  3EFF               	addlw	-1
  2183     04E8  1D03               	skipz
  2184     04E9  2CE4               	goto	u765
  2185     04EA                     l1090:
  2186     04EA  3001               	movlw	1
  2187     04EB  02F4               	subwf	___awmod@counter,f
  2188     04EC  1D03               	btfss	3,2
  2189     04ED  2CEF               	goto	u771
  2190     04EE  2CF0               	goto	u770
  2191     04EF                     u771:
  2192     04EF  2CD3               	goto	l1084
  2193     04F0                     u770:
  2194     04F0                     l1092:
  2195     04F0  0875               	movf	___awmod@sign,w
  2196     04F1  1903               	btfsc	3,2
  2197     04F2  2CF4               	goto	u781
  2198     04F3  2CF5               	goto	u780
  2199     04F4                     u781:
  2200     04F4  2CFA               	goto	l1096
  2201     04F5                     u780:
  2202     04F5                     l1094:
  2203     04F5  09F2               	comf	___awmod@dividend,f
  2204     04F6  09F3               	comf	___awmod@dividend+1,f
  2205     04F7  0AF2               	incf	___awmod@dividend,f
  2206     04F8  1903               	skipnz
  2207     04F9  0AF3               	incf	___awmod@dividend+1,f
  2208     04FA                     l1096:
  2209     04FA  0873               	movf	___awmod@dividend+1,w
  2210     04FB  00F1               	movwf	?___awmod+1
  2211     04FC  0872               	movf	___awmod@dividend,w
  2212     04FD  00F0               	movwf	?___awmod
  2213     04FE                     l339:
  2214     04FE  0008               	return
  2215     04FF                     __end_of___awmod:
  2216                           
  2217                           	psect	text12
  2218     04FF                     __ptext12:	
  2219 ;; *************** function ___awdiv *****************
  2220 ;; Defined at:
  2221 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awdiv.c"
  2222 ;; Parameters:    Size  Location     Type
  2223 ;;  divisor         2    0[COMMON] int 
  2224 ;;  dividend        2    2[COMMON] int 
  2225 ;; Auto vars:     Size  Location     Type
  2226 ;;  quotient        2    6[COMMON] int 
  2227 ;;  sign            1    5[COMMON] unsigned char 
  2228 ;;  counter         1    4[COMMON] unsigned char 
  2229 ;; Return value:  Size  Location     Type
  2230 ;;                  2    0[COMMON] int 
  2231 ;; Registers used:
  2232 ;;		wreg, status,2, status,0
  2233 ;; Tracked objects:
  2234 ;;		On entry : 0/0
  2235 ;;		On exit  : 0/0
  2236 ;;		Unchanged: 0/0
  2237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2238 ;;      Params:         4       0       0       0       0
  2239 ;;      Locals:         4       0       0       0       0
  2240 ;;      Temps:          0       0       0       0       0
  2241 ;;      Totals:         8       0       0       0       0
  2242 ;;Total ram usage:        8 bytes
  2243 ;; Hardware stack levels used: 1
  2244 ;; This function calls:
  2245 ;;		Nothing
  2246 ;; This function is called by:
  2247 ;;		_vfpfcnvrt
  2248 ;; This function uses a non-reentrant model
  2249 ;;
  2250                           
  2251     04FF                     ___awdiv:	
  2252                           ;psect for function ___awdiv
  2253                           
  2254     04FF                     l1018:	
  2255                           ;incstack = 0
  2256                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2257                           
  2258     04FF  01F5               	clrf	___awdiv@sign
  2259     0500                     l1020:
  2260     0500  1FF1               	btfss	___awdiv@divisor+1,7
  2261     0501  2D03               	goto	u601
  2262     0502  2D04               	goto	u600
  2263     0503                     u601:
  2264     0503  2D0B               	goto	l1026
  2265     0504                     u600:
  2266     0504                     l1022:
  2267     0504  09F0               	comf	___awdiv@divisor,f
  2268     0505  09F1               	comf	___awdiv@divisor+1,f
  2269     0506  0AF0               	incf	___awdiv@divisor,f
  2270     0507  1903               	skipnz
  2271     0508  0AF1               	incf	___awdiv@divisor+1,f
  2272     0509                     l1024:
  2273     0509  3001               	movlw	1
  2274     050A  00F5               	movwf	___awdiv@sign
  2275     050B                     l1026:
  2276     050B  1FF3               	btfss	___awdiv@dividend+1,7
  2277     050C  2D0E               	goto	u611
  2278     050D  2D0F               	goto	u610
  2279     050E                     u611:
  2280     050E  2D16               	goto	l1032
  2281     050F                     u610:
  2282     050F                     l1028:
  2283     050F  09F2               	comf	___awdiv@dividend,f
  2284     0510  09F3               	comf	___awdiv@dividend+1,f
  2285     0511  0AF2               	incf	___awdiv@dividend,f
  2286     0512  1903               	skipnz
  2287     0513  0AF3               	incf	___awdiv@dividend+1,f
  2288     0514                     l1030:
  2289     0514  3001               	movlw	1
  2290     0515  06F5               	xorwf	___awdiv@sign,f
  2291     0516                     l1032:
  2292     0516  01F6               	clrf	___awdiv@quotient
  2293     0517  01F7               	clrf	___awdiv@quotient+1
  2294     0518                     l1034:
  2295     0518  0870               	movf	___awdiv@divisor,w
  2296     0519  0471               	iorwf	___awdiv@divisor+1,w
  2297     051A  1903               	btfsc	3,2
  2298     051B  2D1D               	goto	u621
  2299     051C  2D1E               	goto	u620
  2300     051D                     u621:
  2301     051D  2D53               	goto	l1054
  2302     051E                     u620:
  2303     051E                     l1036:
  2304     051E  3001               	movlw	1
  2305     051F  00F4               	movwf	___awdiv@counter
  2306     0520  2D2A               	goto	l1042
  2307     0521                     l1038:
  2308     0521  3001               	movlw	1
  2309     0522                     u635:
  2310     0522  1003               	clrc
  2311     0523  0DF0               	rlf	___awdiv@divisor,f
  2312     0524  0DF1               	rlf	___awdiv@divisor+1,f
  2313     0525  3EFF               	addlw	-1
  2314     0526  1D03               	skipz
  2315     0527  2D22               	goto	u635
  2316     0528                     l1040:
  2317     0528  3001               	movlw	1
  2318     0529  07F4               	addwf	___awdiv@counter,f
  2319     052A                     l1042:
  2320     052A  1FF1               	btfss	___awdiv@divisor+1,7
  2321     052B  2D2D               	goto	u641
  2322     052C  2D2E               	goto	u640
  2323     052D                     u641:
  2324     052D  2D21               	goto	l1038
  2325     052E                     u640:
  2326     052E                     l1044:
  2327     052E  3001               	movlw	1
  2328     052F                     u655:
  2329     052F  1003               	clrc
  2330     0530  0DF6               	rlf	___awdiv@quotient,f
  2331     0531  0DF7               	rlf	___awdiv@quotient+1,f
  2332     0532  3EFF               	addlw	-1
  2333     0533  1D03               	skipz
  2334     0534  2D2F               	goto	u655
  2335     0535  0871               	movf	___awdiv@divisor+1,w
  2336     0536  0273               	subwf	___awdiv@dividend+1,w
  2337     0537  1D03               	skipz
  2338     0538  2D3B               	goto	u665
  2339     0539  0870               	movf	___awdiv@divisor,w
  2340     053A  0272               	subwf	___awdiv@dividend,w
  2341     053B                     u665:
  2342     053B  1C03               	skipc
  2343     053C  2D3E               	goto	u661
  2344     053D  2D3F               	goto	u660
  2345     053E                     u661:
  2346     053E  2D46               	goto	l1050
  2347     053F                     u660:
  2348     053F                     l1046:
  2349     053F  0870               	movf	___awdiv@divisor,w
  2350     0540  02F2               	subwf	___awdiv@dividend,f
  2351     0541  0871               	movf	___awdiv@divisor+1,w
  2352     0542  1C03               	skipc
  2353     0543  03F3               	decf	___awdiv@dividend+1,f
  2354     0544  02F3               	subwf	___awdiv@dividend+1,f
  2355     0545                     l1048:
  2356     0545  1476               	bsf	___awdiv@quotient,0
  2357     0546                     l1050:
  2358     0546  3001               	movlw	1
  2359     0547                     u675:
  2360     0547  1003               	clrc
  2361     0548  0CF1               	rrf	___awdiv@divisor+1,f
  2362     0549  0CF0               	rrf	___awdiv@divisor,f
  2363     054A  3EFF               	addlw	-1
  2364     054B  1D03               	skipz
  2365     054C  2D47               	goto	u675
  2366     054D                     l1052:
  2367     054D  3001               	movlw	1
  2368     054E  02F4               	subwf	___awdiv@counter,f
  2369     054F  1D03               	btfss	3,2
  2370     0550  2D52               	goto	u681
  2371     0551  2D53               	goto	u680
  2372     0552                     u681:
  2373     0552  2D2E               	goto	l1044
  2374     0553                     u680:
  2375     0553                     l1054:
  2376     0553  0875               	movf	___awdiv@sign,w
  2377     0554  1903               	btfsc	3,2
  2378     0555  2D57               	goto	u691
  2379     0556  2D58               	goto	u690
  2380     0557                     u691:
  2381     0557  2D5D               	goto	l1058
  2382     0558                     u690:
  2383     0558                     l1056:
  2384     0558  09F6               	comf	___awdiv@quotient,f
  2385     0559  09F7               	comf	___awdiv@quotient+1,f
  2386     055A  0AF6               	incf	___awdiv@quotient,f
  2387     055B  1903               	skipnz
  2388     055C  0AF7               	incf	___awdiv@quotient+1,f
  2389     055D                     l1058:
  2390     055D  0877               	movf	___awdiv@quotient+1,w
  2391     055E  00F1               	movwf	?___awdiv+1
  2392     055F  0876               	movf	___awdiv@quotient,w
  2393     0560  00F0               	movwf	?___awdiv
  2394     0561                     l326:
  2395     0561  0008               	return
  2396     0562                     __end_of___awdiv:
  2397                           
  2398                           	psect	text13
  2399     0407                     __ptext13:	
  2400 ;; *************** function _lcd_string *****************
  2401 ;; Defined at:
  2402 ;;		line 45 in file "atividade7.c"
  2403 ;; Parameters:    Size  Location     Type
  2404 ;;  str             1    3[COMMON] PTR const unsigned char 
  2405 ;;		 -> atualiza_lcd@buffer(16), 
  2406 ;; Auto vars:     Size  Location     Type
  2407 ;;		None
  2408 ;; Return value:  Size  Location     Type
  2409 ;;                  1    wreg      void 
  2410 ;; Registers used:
  2411 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2412 ;; Tracked objects:
  2413 ;;		On entry : 0/0
  2414 ;;		On exit  : 0/0
  2415 ;;		Unchanged: 0/0
  2416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2417 ;;      Params:         1       0       0       0       0
  2418 ;;      Locals:         0       0       0       0       0
  2419 ;;      Temps:          0       0       0       0       0
  2420 ;;      Totals:         1       0       0       0       0
  2421 ;;Total ram usage:        1 bytes
  2422 ;; Hardware stack levels used: 1
  2423 ;; Hardware stack levels required when called: 1
  2424 ;; This function calls:
  2425 ;;		_lcd_data
  2426 ;; This function is called by:
  2427 ;;		_atualiza_lcd
  2428 ;; This function uses a non-reentrant model
  2429 ;;
  2430                           
  2431     0407                     _lcd_string:	
  2432                           ;psect for function _lcd_string
  2433                           
  2434     0407                     l1200:	
  2435                           ;incstack = 0
  2436                           ; Regs used in _lcd_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2437                           
  2438                           
  2439                           ;atividade7.c: 46:     while (*str) {
  2440     0407  2C12               	goto	l1206
  2441     0408                     l1202:
  2442                           
  2443                           ;atividade7.c: 47:         lcd_data(*str++);
  2444     0408  0873               	movf	lcd_string@str,w
  2445     0409  0084               	movwf	4
  2446     040A  0800               	movf	0,w
  2447     040B  120A  118A  23F3  120A  118A  	fcall	_lcd_data
  2448     0410                     l1204:
  2449     0410  3001               	movlw	1
  2450     0411  07F3               	addwf	lcd_string@str,f
  2451     0412                     l1206:
  2452                           
  2453                           ;atividade7.c: 46:     while (*str) {
  2454     0412  0873               	movf	lcd_string@str,w
  2455     0413  0084               	movwf	4
  2456     0414  1383               	bcf	3,7	;select IRP bank0
  2457     0415  0800               	movf	0,w
  2458     0416  1D03               	btfss	3,2
  2459     0417  2C19               	goto	u961
  2460     0418  2C1A               	goto	u960
  2461     0419                     u961:
  2462     0419  2C08               	goto	l1202
  2463     041A                     u960:
  2464     041A                     l36:
  2465     041A  0008               	return
  2466     041B                     __end_of_lcd_string:
  2467                           
  2468                           	psect	text14
  2469     03F3                     __ptext14:	
  2470 ;; *************** function _lcd_data *****************
  2471 ;; Defined at:
  2472 ;;		line 29 in file "atividade7.c"
  2473 ;; Parameters:    Size  Location     Type
  2474 ;;  data            1    wreg     unsigned char 
  2475 ;; Auto vars:     Size  Location     Type
  2476 ;;  data            1    2[COMMON] unsigned char 
  2477 ;; Return value:  Size  Location     Type
  2478 ;;                  1    wreg      void 
  2479 ;; Registers used:
  2480 ;;		wreg
  2481 ;; Tracked objects:
  2482 ;;		On entry : 0/0
  2483 ;;		On exit  : 0/0
  2484 ;;		Unchanged: 0/0
  2485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2486 ;;      Params:         0       0       0       0       0
  2487 ;;      Locals:         1       0       0       0       0
  2488 ;;      Temps:          2       0       0       0       0
  2489 ;;      Totals:         3       0       0       0       0
  2490 ;;Total ram usage:        3 bytes
  2491 ;; Hardware stack levels used: 1
  2492 ;; This function calls:
  2493 ;;		Nothing
  2494 ;; This function is called by:
  2495 ;;		_lcd_string
  2496 ;;		_main
  2497 ;; This function uses a non-reentrant model
  2498 ;;
  2499                           
  2500     03F3                     _lcd_data:	
  2501                           ;psect for function _lcd_data
  2502                           
  2503                           
  2504                           ;incstack = 0
  2505                           ; Regs used in _lcd_data: [wreg]
  2506                           ;lcd_data@data stored from wreg
  2507     03F3  00F2               	movwf	lcd_data@data
  2508     03F4                     l1174:
  2509                           
  2510                           ;atividade7.c: 30:     PORTD = data;
  2511     03F4  0872               	movf	lcd_data@data,w
  2512     03F5  1283               	bcf	3,5	;RP0=0, select bank0
  2513     03F6  1303               	bcf	3,6	;RP1=0, select bank0
  2514     03F7  0088               	movwf	8	;volatile
  2515     03F8                     l1176:
  2516                           
  2517                           ;atividade7.c: 31:     PORTEbits.RE0 = 1;
  2518     03F8  1409               	bsf	9,0	;volatile
  2519     03F9                     l1178:
  2520                           
  2521                           ;atividade7.c: 32:     PORTEbits.RE1 = 1;
  2522     03F9  1489               	bsf	9,1	;volatile
  2523                           
  2524                           ;atividade7.c: 33:     _delay((unsigned long)((5)*(20000000/4000.0)));
  2525     03FA  3021               	movlw	33
  2526     03FB  00F1               	movwf	??_lcd_data+1
  2527     03FC  3076               	movlw	118
  2528     03FD  00F0               	movwf	??_lcd_data
  2529     03FE                     u1207:
  2530     03FE  0BF0               	decfsz	??_lcd_data,f
  2531     03FF  2BFE               	goto	u1207
  2532     0400  0BF1               	decfsz	??_lcd_data+1,f
  2533     0401  2BFE               	goto	u1207
  2534     0402  0000               	nop
  2535     0403                     l1180:
  2536                           
  2537                           ;atividade7.c: 34:     PORTEbits.RE1 = 0;
  2538     0403  1283               	bcf	3,5	;RP0=0, select bank0
  2539     0404  1303               	bcf	3,6	;RP1=0, select bank0
  2540     0405  1089               	bcf	9,1	;volatile
  2541     0406                     l27:
  2542     0406  0008               	return
  2543     0407                     __end_of_lcd_data:
  2544                           
  2545                           	psect	text15
  2546     03DF                     __ptext15:	
  2547 ;; *************** function _lcd_command *****************
  2548 ;; Defined at:
  2549 ;;		line 37 in file "atividade7.c"
  2550 ;; Parameters:    Size  Location     Type
  2551 ;;  cmd             1    wreg     unsigned char 
  2552 ;; Auto vars:     Size  Location     Type
  2553 ;;  cmd             1    2[COMMON] unsigned char 
  2554 ;; Return value:  Size  Location     Type
  2555 ;;                  1    wreg      void 
  2556 ;; Registers used:
  2557 ;;		wreg
  2558 ;; Tracked objects:
  2559 ;;		On entry : 0/0
  2560 ;;		On exit  : 0/0
  2561 ;;		Unchanged: 0/0
  2562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2563 ;;      Params:         0       0       0       0       0
  2564 ;;      Locals:         1       0       0       0       0
  2565 ;;      Temps:          2       0       0       0       0
  2566 ;;      Totals:         3       0       0       0       0
  2567 ;;Total ram usage:        3 bytes
  2568 ;; Hardware stack levels used: 1
  2569 ;; This function calls:
  2570 ;;		Nothing
  2571 ;; This function is called by:
  2572 ;;		_lcd_initialise
  2573 ;;		_atualiza_lcd
  2574 ;;		_main
  2575 ;; This function uses a non-reentrant model
  2576 ;;
  2577                           
  2578     03DF                     _lcd_command:	
  2579                           ;psect for function _lcd_command
  2580                           
  2581                           
  2582                           ;incstack = 0
  2583                           ; Regs used in _lcd_command: [wreg]
  2584                           ;lcd_command@cmd stored from wreg
  2585     03DF  00F2               	movwf	lcd_command@cmd
  2586     03E0                     l1192:
  2587                           
  2588                           ;atividade7.c: 38:     PORTD = cmd;
  2589     03E0  0872               	movf	lcd_command@cmd,w
  2590     03E1  1283               	bcf	3,5	;RP0=0, select bank0
  2591     03E2  1303               	bcf	3,6	;RP1=0, select bank0
  2592     03E3  0088               	movwf	8	;volatile
  2593     03E4                     l1194:
  2594                           
  2595                           ;atividade7.c: 39:     PORTEbits.RE0 = 0;
  2596     03E4  1009               	bcf	9,0	;volatile
  2597     03E5                     l1196:
  2598                           
  2599                           ;atividade7.c: 40:     PORTEbits.RE1 = 1;
  2600     03E5  1489               	bsf	9,1	;volatile
  2601                           
  2602                           ;atividade7.c: 41:     _delay((unsigned long)((5)*(20000000/4000.0)));
  2603     03E6  3021               	movlw	33
  2604     03E7  00F1               	movwf	??_lcd_command+1
  2605     03E8  3076               	movlw	118
  2606     03E9  00F0               	movwf	??_lcd_command
  2607     03EA                     u1217:
  2608     03EA  0BF0               	decfsz	??_lcd_command,f
  2609     03EB  2BEA               	goto	u1217
  2610     03EC  0BF1               	decfsz	??_lcd_command+1,f
  2611     03ED  2BEA               	goto	u1217
  2612     03EE  0000               	nop
  2613     03EF                     l1198:
  2614                           
  2615                           ;atividade7.c: 42:     PORTEbits.RE1 = 0;
  2616     03EF  1283               	bcf	3,5	;RP0=0, select bank0
  2617     03F0  1303               	bcf	3,6	;RP1=0, select bank0
  2618     03F1  1089               	bcf	9,1	;volatile
  2619     03F2                     l30:
  2620     03F2  0008               	return
  2621     03F3                     __end_of_lcd_command:
  2622     0002                     ___latbits      equ	2
  2623     007E                     btemp           set	126	;btemp
  2624     007E                     wtemp0          set	126
  2625                           
  2626                           	psect	config
  2627                           
  2628                           ;Config register CONFIG @ 0x2007
  2629                           ;	Oscillator Selection bits
  2630                           ;	FOSC = HS, HS oscillator
  2631                           ;	Watchdog Timer Enable bit
  2632                           ;	WDTE = OFF, WDT disabled
  2633                           ;	Power-up Timer Enable bit
  2634                           ;	PWRTE = OFF, PWRT disabled
  2635                           ;	FLASH Program Memory Code Protection bits
  2636                           ;	CP = OFF, Code protection off
  2637                           ;	Brown-out Reset Enable bit
  2638                           ;	BOREN = OFF, BOR disabled
  2639                           ;	Low Voltage In-Circuit Serial Programming Enable bit
  2640                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  2641                           ;	Data EE Memory Code Protection
  2642                           ;	CPD = OFF, Code Protection off
  2643                           ;	FLASH Program Memory Write Enable
  2644                           ;	WRT = OFF, Unprotected program memory may not be written to by EECON control
  2645                           ;	In-Circuit Debugger Mode bit
  2646                           ;	DEBUG = 0x1, unprogrammed default
  2647     2007                     	org	8199
  2648     2007  3D3A               	dw	15674

Data Sizes:
    Strings     3
    Constant    0
    Data        2
    BSS         38
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     58      66
    BANK1            80      0      32
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> atualiza_lcd@buffer(BANK0[16]), 

    f$.$source	PTR const unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> atualiza_lcd@buffer(BANK0[16]), 

    fputc@fp$.$source	PTR const unsigned char  size(1) Largest target is 0

    lcd_string@str	PTR const unsigned char  size(1) Largest target is 16
		 -> atualiza_lcd@buffer(BANK0[16]), 

    S583$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> atualiza_lcd@buffer(BANK0[16]), 

    S583$source	PTR const unsigned char  size(1) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 16
		 -> atualiza_lcd@buffer(BANK0[16]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMMON[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 


Critical Paths under _main in COMMON

    _lcd_initialise->_lcd_command
    _sprintf->_vfprintf
    _vfpfcnvrt->_fputc
    _abs->___awmod
    _lcd_string->_lcd_data

Critical Paths under _main in BANK0

    _main->_atualiza_lcd
    _atualiza_lcd->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    2303
                                             53 BANK0      5     5      0
                       _atualiza_lcd
                           _debounce
                        _lcd_command
                           _lcd_data
                     _lcd_initialise
                            _teclado
 ---------------------------------------------------------------------------------
 (1) _lcd_initialise                                       0     0      0      29
                        _lcd_command
 ---------------------------------------------------------------------------------
 (1) _debounce                                             3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _atualiza_lcd                                        19    19      0    1998
                                             34 BANK0     19    19      0
                        _lcd_command
                         _lcd_string
                            _sprintf
                            _teclado
 ---------------------------------------------------------------------------------
 (1) _teclado                                              1     1      0      61
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             19    15      4    1760
                                             17 BANK0     17    13      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             5     1      4    1559
                                             13 COMMON     1     1      0
                                             13 BANK0      4     0      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           13     9      4    1434
                                              0 BANK0     13     9      4
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                               13     9      4     230
                                              0 COMMON    13     9      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2      67
                                              6 COMMON     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     298
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     302
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _lcd_string                                           1     0      1      75
                                              3 COMMON     1     0      1
                           _lcd_data
 ---------------------------------------------------------------------------------
 (1) _lcd_data                                             3     3      0      29
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _lcd_command                                          3     3      0      29
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _atualiza_lcd
     _lcd_command
     _lcd_string
       _lcd_data
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch
     _teclado
   _debounce
   _lcd_command
   _lcd_data
   _lcd_initialise
     _lcd_command
   _teclado

Address spaces:
Name               Size   Autos  Total    Usage
BANK3               96      0       0      0.0%
BITBANK3            96      0       0      0.0%
BANK2               96      0       0      0.0%
BITBANK2            96      0       0      0.0%
BANK1               80      0      32     40.0%
BITBANK1            80      0       0      0.0%
BANK0               80     58      66     82.5%
BITBANK0            80      0       0      0.0%
COMMON              14     14      14    100.0%
BITCOMMON           14      0       0      0.0%
DATA                 0      0     112      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Mon Dec 09 16:06:21 2024

                            pc 0002                   lcd_data@data 0072                             l30 03F2  
                           l50 0582                             l42 03CD                             l27 0406  
                           l51 058C                             l36 041A                             l60 05CA  
                           l52 0592                             l61 05D0                             l53 0598  
                           l54 059E                             l46 0565                             l55 05A8  
                           l39 0433                             l64 05DD                             l56 05AE  
                           l48 0576                             l57 05B4                             l49 057C  
                           l58 05BA                             l59 05C4                             l67 04A7  
                 ___awdiv@sign 0075                             fsr 0004                            l326 0561  
                          l339 04FE                            l710 03B5                            l636 0456  
                          l680 047B                            l674 07E0                            l687 03DE  
                          l699 06FA                            u600 0504                            u601 0503  
                          u610 050F                            u611 050E                            u620 051E  
                          u700 04AD                            u621 051D                            u701 04AC  
                          u710 04B8                            u711 04B7                            u640 052E  
                          u720 04C3                            u800 066D                            u641 052D  
                          u721 04C2                            u801 066C                            u810 068C  
                          u635 0522                            u811 068B                            u660 053F  
                          u740 04D3                            u820 06BE                            u900 0789  
                          u661 053E                            u741 04D2                            u821 06BD  
                          u901 0788                            u750 04DD                            u830 06DF  
                          u910 078E                            u655 052F                            u751 04DC  
                          u735 04C7                            u911 078D                            u680 0553  
                          u840 03D2                            u920 0793                            u681 0552  
                          u665 053B                            u841 03D1                            u825 06BA  
                          u921 0792                            u690 0558                            u770 04F0  
                          u930 0798                            u850 070B                            u691 0557  
                          u675 0547                            u771 04EF                            u755 04D9  
                          u931 0797                            u851 070A                            u780 04F5  
                          u940 07BF                            u860 0727                            u781 04F4  
                          u765 04E4                            u941 07BE                            u861 0726  
                          u790 0667                            u870 0733                            u950 0477  
                          u791 0666                            u871 0732                            u951 0476  
                          u960 041A                            u880 074D                            u961 0419  
                          u881 074B                            u890 074E                            u970 056F  
                          u971 056E                            u980 0574                            u981 0573  
                          u990 057A                            u991 0579                            _abs 03CE  
                          fsr0 0004                            indf 0000                   ___awmod@sign 0075  
                         l1020 0500                           l1100 0661                           l1030 0514  
                         l1022 0504                           l1110 06BE                           l1102 0667  
                         l1200 0407                           l1040 0528                           l1032 0516  
                         l1024 0509                           l1104 066D                           l1202 0408  
                         l1050 0546                           l1042 052A                           l1034 0518  
                         l1026 050B                           l1018 04FF                           l1114 03CE  
                         l1106 0674                           l1130 0717                           l1122 06FB  
                         l1210 056F                           ?_abs 0076                           l1204 0410  
                         l1052 054D                           l1044 052E                           l1036 051E  
                         l1028 050F                           l1116 03D2                           l1108 068C  
                         l1140 0746                           l1132 071B                           l1124 070B  
                         l1220 058A                           l1212 0570                           l1300 0622  
                         l1206 0412                           l1046 053F                           l1038 0521  
                         l1054 0553                           l1070 04B4                           l1062 04A8  
                         l1118 03D3                           l1150 0789                           l1142 0748  
                         l1134 0727                           l1126 070F                           l1230 05AC  
                         l1222 0590                           l1214 0574                           l1302 062A  
                         l1310 0636                           l1056 0558                           l1048 0545  
                         l1080 04CD                           l1072 04B8                           l1064 04A9  
                         l1160 07B5                           l1152 078E                           l1144 074F  
                         l1136 0733                           l1128 0713                           l1240 05CE  
                         l1232 05B2                           l1224 0596                           l1216 057A  
                         l1208 0562                           l1320 064E                           l1312 063C  
                         l1304 0631                           l1058 055D                           l1090 04EA  
                         l1082 04CF                           l1074 04BD                           l1066 04AD  
                         l1154 0793                           l1162 07B9                           l1146 076E  
                         l1138 0741                           l1250 0434                           l1242 05D4  
                         l1234 05B8                           l1226 059C                           l1218 0580  
                         l1322 0653                           l1314 0640                           l1180 0403  
                         l1084 04D3                           l1076 04C3                           l1092 04F0  
                         l1068 04B2                           l1156 0798                           l1148 0783  
                         l1164 07C0                           l1260 044D                           l1252 0438  
                         l1236 05C2                           l1228 05A6                           l1244 05D6  
                         l1174 03F4                           l1094 04F5                           l1086 04DD  
                         l1078 04C6                           l1158 07A1                           l1182 0457  
                         l1254 043C                           l1246 05DC                           l1238 05C8  
                         l1270 0484                           l1318 0647                           l1192 03E0  
                         l1176 03F8                           l1096 04FA                           l1088 04E3  
                         l1168 07C7                           l1184 045C                           l1256 043E  
                         l1272 0494                           l1264 041B                           l1280 05E3  
                         l1194 03E4                           l1178 03F9                           l1186 046B  
                         l1258 0440                           l1274 049A                           l1266 03C0  
                         l1290 05FE                           l1282 05E5                           l1196 03E5  
                         l1188 0477                           l1276 04A0                           l1268 047C  
                         l1284 05EA                           l1198 03EF                           l1294 060C  
                         l1286 05EF                           l1278 05DE                           l1296 0614  
                         l1288 05F7                           l1298 061C                           STR_1 0009  
                         u1000 0580                           u1001 057F                           u1010 058A  
                         u1011 0589                           u1100 05C8                           u1020 0590  
                         u1101 05C7                           u1021 058F                           u1110 05CE  
                         u1030 0596                           u1111 05CD                           u1031 0595  
                         u1120 05D4                           u1040 059C                           u1121 05D3  
                         u1041 059B                           u1130 05DC                           u1050 05A6  
                         u1131 05DB                           u1051 05A5                           u1060 05AC  
                         u1140 060B                           u1061 05AB                           u1141 060A  
                         u1070 05B2                           u1150 061C                           u1207 03FE  
                         u1071 05B1                           u1151 061B                           u1080 05B8  
                         u1160 0622                           u1217 03EA                           u1081 05B7  
                         u1161 0621                           u1145 0607                           u1090 05C2  
                         u1170 064E                           u1091 05C1                           u1171 064D  
                         u1180 065D                           u1181 065C                           u1197 03C6  
                         abs@a 0076                           _dbuf 00A0                           _main 05DE  
                         _prec 005C                           btemp 007E                           start 0000  
                ?_atualiza_lcd 0070                          ??_abs 0078                          ?_main 0070  
              __end_of___awdiv 0562                __end_of___awmod 04FF                ___awdiv@divisor 0070  
              ___awdiv@counter 0074                   vfpfcnvrt@fmt 0022                          _PORTD 0008  
                        _TRISB 0086                          _TRISC 0087                          _TRISD 0088  
                        _TRISE 0089                          _flags 005E                          _fputc 0661  
                        _width 005A                          _putch 03B5                          main@i 0057  
              __end_of_teclado 05DE                          pclath 000A                 _tecla_anterior 0061  
                        status 0003                          wtemp0 007E                __end_of_sprintf 0457  
               ??_atualiza_lcd 0042                __initialization 07E1                   __end_of_main 0661  
                       ??_main 0055                 lcd_command@cmd 0072                         ?_fputc 0070  
             ___awdiv@dividend 0072                         ?_putch 0070                  vfpfcnvrt@done 0026  
             __end_of_debounce 03CE               __end_of_lcd_data 0407                   vfprintf@cfmt 007D  
                    ??___awdiv 0074                      ??___awmod 0074              _tecla_pressionada 005F  
             ___awdiv@quotient 0076                ___awmod@divisor 0070                ___awmod@counter 0074  
                       fputc@c 0070                      ??_teclado 0070                         putch@c 0070  
             __end_of_vfprintf 047C               ??_lcd_initialise 0073                      ??_sprintf 0035  
                lcd_string@str 0073        __end_of__initialization 07FC                 __pcstackCOMMON 0070  
                 __pidataBANK0 03B6                  __end_of_fputc 06FB                  __end_of_putch 03B6  
         __end_of_atualiza_lcd 04A8                        ??_fputc 0074                        ??_putch 0070  
                   __pbssBANK0 005A                     __pbssBANK1 00A0             atualiza_lcd@buffer 0044  
                   __pmaintext 05DE                      ?_debounce 0070                      ?_lcd_data 0070  
                   _lcd_string 0407                     __stringtab 0003                 main@cursor_pos 0060  
                      ___awdiv 04FF                        ___awmod 04A8                      ?_vfprintf 002D  
                      __ptext1 041B                        __ptext2 03C0                        __ptext3 047C  
                      __ptext4 0562                        __ptext5 0434                        __ptext6 0457  
                      __ptext7 06FB                        __ptext8 0661                        __ptext9 03B5  
             ___awmod@dividend 0072                     ??_debounce 0070                        _teclado 0562  
                   ??_lcd_data 0070                        _sprintf 0434                        clrloop0 03B9  
         end_of_initialization 07FC                        fputc@fp 0072              __end_of_vfpfcnvrt 07E1  
             vfpfcnvrt@convarg 0028                     ??_vfprintf 007D                      _PORTBbits 0006  
                    _PORTCbits 0007                      _PORTEbits 0009                    ?_lcd_string 0073  
                ??_lcd_command 0070                   _atualiza_lcd 047C                    vfpfcnvrt@ap 0023  
                  vfpfcnvrt@cp 0027                    vfpfcnvrt@fp 0020            start_initialization 07E1  
                  __end_of_abs 03DF                    vfprintf@fmt 002F            __end_of_lcd_command 03F3  
                  __pdataBANK0 0060                      ___latbits 0002                  __pcstackBANK0 0020  
                     ?___awdiv 0070                       ?___awmod 0070                      __pstrings 0003  
                 teclado@tecla 0070                       ?_teclado 0070                       ?_sprintf 0031  
                    clear_ram0 03B8                    _lcd_command 03DF                      _vfpfcnvrt 06FB  
                  __stringbase 0008                      main@tecla 0059                   ??_lcd_string 0074  
                   vfpfcnvrt@c 002C                     vfprintf@ap 0030                     vfprintf@fp 002D  
                   ?_vfpfcnvrt 0020             __end_of_lcd_string 041B             __end_of__stringtab 0009  
                   sprintf@fmt 0032                       _debounce 03C0                       __ptext10 03CE  
                     __ptext11 04A8                       __ptext12 04FF                       __ptext13 0407  
                     __ptext14 03F3                       __ptext15 03DF  atualiza_lcd@tecla_pressionado 0054  
                     _lcd_data 03F3                 _lcd_initialise 041B                       _vfprintf 0457  
                    sprintf@ap 0036         __end_of_lcd_initialise 0434                      stringcode 0003  
                  ??_vfpfcnvrt 0024                       sprintf@f 0037                       sprintf@s 0031  
                     stringdir 0003                       stringtab 0003                ?_lcd_initialise 0070  
                 ?_lcd_command 0070  
