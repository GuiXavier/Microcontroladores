

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Mon Nov 18 15:06:19 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F877
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     8                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14     0000                     
    15                           ; Generated 12/10/2023 GMT
    16                           ; 
    17                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49     0004                     fsr             equ	4
    50     0004                     fsr0            equ	4
    51     0000                     indf            equ	0
    52     0000                     indf0           equ	0
    53     0002                     pc              equ	2
    54     0002                     pcl             equ	2
    55     000A                     pclath          equ	10
    56     0003                     status          equ	3
    57     0000                     INDF            equ	0	;# 
    58     0001                     TMR0            equ	1	;# 
    59     0002                     PCL             equ	2	;# 
    60     0003                     STATUS          equ	3	;# 
    61     0004                     FSR             equ	4	;# 
    62     0005                     PORTA           equ	5	;# 
    63     0006                     PORTB           equ	6	;# 
    64     0007                     PORTC           equ	7	;# 
    65     0008                     PORTD           equ	8	;# 
    66     0009                     PORTE           equ	9	;# 
    67     000A                     PCLATH          equ	10	;# 
    68     000B                     INTCON          equ	11	;# 
    69     000C                     PIR1            equ	12	;# 
    70     000D                     PIR2            equ	13	;# 
    71     000E                     TMR1            equ	14	;# 
    72     000E                     TMR1L           equ	14	;# 
    73     000F                     TMR1H           equ	15	;# 
    74     0010                     T1CON           equ	16	;# 
    75     0011                     TMR2            equ	17	;# 
    76     0012                     T2CON           equ	18	;# 
    77     0013                     SSPBUF          equ	19	;# 
    78     0014                     SSPCON          equ	20	;# 
    79     0015                     CCPR1           equ	21	;# 
    80     0015                     CCPR1L          equ	21	;# 
    81     0016                     CCPR1H          equ	22	;# 
    82     0017                     CCP1CON         equ	23	;# 
    83     0018                     RCSTA           equ	24	;# 
    84     0019                     TXREG           equ	25	;# 
    85     001A                     RCREG           equ	26	;# 
    86     001B                     CCPR2           equ	27	;# 
    87     001B                     CCPR2L          equ	27	;# 
    88     001C                     CCPR2H          equ	28	;# 
    89     001D                     CCP2CON         equ	29	;# 
    90     001E                     ADRESH          equ	30	;# 
    91     001F                     ADCON0          equ	31	;# 
    92     0081                     OPTION_REG      equ	129	;# 
    93     0085                     TRISA           equ	133	;# 
    94     0086                     TRISB           equ	134	;# 
    95     0087                     TRISC           equ	135	;# 
    96     0088                     TRISD           equ	136	;# 
    97     0089                     TRISE           equ	137	;# 
    98     008C                     PIE1            equ	140	;# 
    99     008D                     PIE2            equ	141	;# 
   100     008E                     PCON            equ	142	;# 
   101     0091                     SSPCON2         equ	145	;# 
   102     0092                     PR2             equ	146	;# 
   103     0093                     SSPADD          equ	147	;# 
   104     0094                     SSPSTAT         equ	148	;# 
   105     0098                     TXSTA           equ	152	;# 
   106     0099                     SPBRG           equ	153	;# 
   107     009E                     ADRESL          equ	158	;# 
   108     009F                     ADCON1          equ	159	;# 
   109     010C                     EEDATA          equ	268	;# 
   110     010D                     EEADR           equ	269	;# 
   111     010E                     EEDATH          equ	270	;# 
   112     010F                     EEADRH          equ	271	;# 
   113     018C                     EECON1          equ	396	;# 
   114     018D                     EECON2          equ	397	;# 
   115     0000                     INDF            equ	0	;# 
   116     0001                     TMR0            equ	1	;# 
   117     0002                     PCL             equ	2	;# 
   118     0003                     STATUS          equ	3	;# 
   119     0004                     FSR             equ	4	;# 
   120     0005                     PORTA           equ	5	;# 
   121     0006                     PORTB           equ	6	;# 
   122     0007                     PORTC           equ	7	;# 
   123     0008                     PORTD           equ	8	;# 
   124     0009                     PORTE           equ	9	;# 
   125     000A                     PCLATH          equ	10	;# 
   126     000B                     INTCON          equ	11	;# 
   127     000C                     PIR1            equ	12	;# 
   128     000D                     PIR2            equ	13	;# 
   129     000E                     TMR1            equ	14	;# 
   130     000E                     TMR1L           equ	14	;# 
   131     000F                     TMR1H           equ	15	;# 
   132     0010                     T1CON           equ	16	;# 
   133     0011                     TMR2            equ	17	;# 
   134     0012                     T2CON           equ	18	;# 
   135     0013                     SSPBUF          equ	19	;# 
   136     0014                     SSPCON          equ	20	;# 
   137     0015                     CCPR1           equ	21	;# 
   138     0015                     CCPR1L          equ	21	;# 
   139     0016                     CCPR1H          equ	22	;# 
   140     0017                     CCP1CON         equ	23	;# 
   141     0018                     RCSTA           equ	24	;# 
   142     0019                     TXREG           equ	25	;# 
   143     001A                     RCREG           equ	26	;# 
   144     001B                     CCPR2           equ	27	;# 
   145     001B                     CCPR2L          equ	27	;# 
   146     001C                     CCPR2H          equ	28	;# 
   147     001D                     CCP2CON         equ	29	;# 
   148     001E                     ADRESH          equ	30	;# 
   149     001F                     ADCON0          equ	31	;# 
   150     0081                     OPTION_REG      equ	129	;# 
   151     0085                     TRISA           equ	133	;# 
   152     0086                     TRISB           equ	134	;# 
   153     0087                     TRISC           equ	135	;# 
   154     0088                     TRISD           equ	136	;# 
   155     0089                     TRISE           equ	137	;# 
   156     008C                     PIE1            equ	140	;# 
   157     008D                     PIE2            equ	141	;# 
   158     008E                     PCON            equ	142	;# 
   159     0091                     SSPCON2         equ	145	;# 
   160     0092                     PR2             equ	146	;# 
   161     0093                     SSPADD          equ	147	;# 
   162     0094                     SSPSTAT         equ	148	;# 
   163     0098                     TXSTA           equ	152	;# 
   164     0099                     SPBRG           equ	153	;# 
   165     009E                     ADRESL          equ	158	;# 
   166     009F                     ADCON1          equ	159	;# 
   167     010C                     EEDATA          equ	268	;# 
   168     010D                     EEADR           equ	269	;# 
   169     010E                     EEDATH          equ	270	;# 
   170     010F                     EEADRH          equ	271	;# 
   171     018C                     EECON1          equ	396	;# 
   172     018D                     EECON2          equ	397	;# 
   173     0009                     _PORTEbits      set	9
   174     0008                     _PORTD          set	8
   175     0088                     _TRISD          set	136
   176     0089                     _TRISE          set	137
   177                           
   178                           	psect	strings
   179     0003                     __pstrings:
   180     0003                     stringtab:
   181     0003                     __stringtab:
   182     0003                     stringcode:	
   183                           ;	String table - string pointers are 1 byte each
   184                           
   185     0003                     stringdir:
   186     0003  3000               	movlw	high stringdir
   187     0004  008A               	movwf	10
   188     0005  0804               	movf	4,w
   189     0006  0A84               	incf	4,f
   190     0007  0782               	addwf	2,f
   191     0008                     __stringbase:
   192     0008  3400               	retlw	0
   193     0009                     __end_of__stringtab:
   194     0009                     STR_2:
   195     0009  344D               	retlw	77	;'M'
   196     000A  3441               	retlw	65	;'A'
   197     000B  3454               	retlw	84	;'T'
   198     000C  3452               	retlw	82	;'R'
   199     000D  3449               	retlw	73	;'I'
   200     000E  3443               	retlw	67	;'C'
   201     000F  3455               	retlw	85	;'U'
   202     0010  344C               	retlw	76	;'L'
   203     0011  3441               	retlw	65	;'A'
   204     0012  3400               	retlw	0
   205     0013                     STR_1:
   206     0013  344E               	retlw	78	;'N'
   207     0014  344F               	retlw	79	;'O'
   208     0015  344D               	retlw	77	;'M'
   209     0016  3445               	retlw	69	;'E'
   210     0017  3400               	retlw	0
   211                           
   212                           	psect	cinit
   213     07FC                     start_initialization:	
   214                           ; #config settings
   215                           
   216     07FC                     __initialization:
   217     07FC                     end_of_initialization:	
   218                           ;End of C runtime variable initialization code
   219                           
   220     07FC                     __end_of__initialization:
   221     07FC  0183               	clrf	3
   222     07FD  120A  118A  2FD1   	ljmp	_main	;jump to C main() function
   223                           
   224                           	psect	cstackCOMMON
   225     0070                     __pcstackCOMMON:
   226     0070                     ?_lcd_data:
   227     0070                     ?_lcd_command:	
   228                           ; 1 bytes @ 0x0
   229                           
   230     0070                     ?_lcd_initialise:	
   231                           ; 1 bytes @ 0x0
   232                           
   233     0070                     ?_main:	
   234                           ; 1 bytes @ 0x0
   235                           
   236     0070                     ??_lcd_data:	
   237                           ; 1 bytes @ 0x0
   238                           
   239     0070                     ??_lcd_command:	
   240                           ; 1 bytes @ 0x0
   241                           
   242                           
   243                           ; 1 bytes @ 0x0
   244     0070                     	ds	2
   245     0072                     lcd_data@data:
   246     0072                     lcd_command@cmd:	
   247                           ; 1 bytes @ 0x2
   248                           
   249                           
   250                           ; 1 bytes @ 0x2
   251     0072                     	ds	1
   252     0073                     ?_lcd_string:
   253     0073                     lcd_string@str:	
   254                           ; 1 bytes @ 0x3
   255                           
   256     0073                     ??_lcd_initialise:	
   257                           ; 1 bytes @ 0x3
   258                           
   259                           
   260                           ; 1 bytes @ 0x3
   261     0073                     	ds	1
   262     0074                     lcd_string@num:
   263                           
   264                           ; 1 bytes @ 0x4
   265     0074                     	ds	1
   266     0075                     lcd_string@i:
   267     0075                     ??_lcd_string:	
   268                           ; 1 bytes @ 0x5
   269                           
   270                           
   271                           ; 1 bytes @ 0x5
   272     0075                     	ds	1
   273     0076                     ??_main:
   274                           
   275                           	psect	maintext
   276     07D1                     __pmaintext:	
   277                           ; 1 bytes @ 0x6
   278 ;;
   279 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   280 ;;
   281 ;; *************** function _main *****************
   282 ;; Defined at:
   283 ;;		line 55 in file "codigolcd.c"
   284 ;; Parameters:    Size  Location     Type
   285 ;;		None
   286 ;; Auto vars:     Size  Location     Type
   287 ;;		None
   288 ;; Return value:  Size  Location     Type
   289 ;;                  1    wreg      void 
   290 ;; Registers used:
   291 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   292 ;; Tracked objects:
   293 ;;		On entry : B00/0
   294 ;;		On exit  : 0/0
   295 ;;		Unchanged: 0/0
   296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   297 ;;      Params:         0       0       0       0       0
   298 ;;      Locals:         0       0       0       0       0
   299 ;;      Temps:          0       0       0       0       0
   300 ;;      Totals:         0       0       0       0       0
   301 ;;Total ram usage:        0 bytes
   302 ;; Hardware stack levels required when called: 2
   303 ;; This function calls:
   304 ;;		_lcd_command
   305 ;;		_lcd_initialise
   306 ;;		_lcd_string
   307 ;; This function is called by:
   308 ;;		Startup code after reset
   309 ;; This function uses a non-reentrant model
   310 ;;
   311                           
   312     07D1                     _main:	
   313                           ;psect for function _main
   314                           
   315     07D1                     l623:	
   316                           ;incstack = 0
   317                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   318                           
   319     07D1  1683               	bsf	3,5	;RP0=1, select bank1
   320     07D2  1303               	bcf	3,6	;RP1=0, select bank1
   321     07D3  0189               	clrf	9	;volatile
   322     07D4  0188               	clrf	8	;volatile
   323     07D5                     l625:
   324     07D5  120A  118A  27B8  120A  118A  	fcall	_lcd_initialise
   325     07DA                     l627:
   326     07DA  3080               	movlw	128
   327     07DB  120A  118A  2778  120A  118A  	fcall	_lcd_command
   328     07E0                     l629:
   329     07E0  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   330     07E1  00F3               	movwf	lcd_string@str
   331     07E2  3004               	movlw	4
   332     07E3  00F4               	movwf	lcd_string@num
   333     07E4  120A  118A  27A0  120A  118A  	fcall	_lcd_string
   334     07E9                     l631:
   335     07E9  30C0               	movlw	192
   336     07EA  120A  118A  2778  120A  118A  	fcall	_lcd_command
   337     07EF                     l633:
   338     07EF  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   339     07F0  00F3               	movwf	lcd_string@str
   340     07F1  3009               	movlw	9
   341     07F2  00F4               	movwf	lcd_string@num
   342     07F3  120A  118A  27A0  120A  118A  	fcall	_lcd_string
   343     07F8  2FDA               	goto	l627
   344     07F9  120A  118A  2800   	ljmp	start
   345     07FC                     __end_of_main:
   346                           
   347                           	psect	text1
   348     07A0                     __ptext1:	
   349 ;; *************** function _lcd_string *****************
   350 ;; Defined at:
   351 ;;		line 37 in file "codigolcd.c"
   352 ;; Parameters:    Size  Location     Type
   353 ;;  str             1    3[COMMON] PTR const unsigned char 
   354 ;;		 -> STR_2(10), STR_1(5), 
   355 ;;  num             1    4[COMMON] unsigned char 
   356 ;; Auto vars:     Size  Location     Type
   357 ;;  i               1    5[COMMON] unsigned char 
   358 ;; Return value:  Size  Location     Type
   359 ;;                  1    wreg      void 
   360 ;; Registers used:
   361 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   362 ;; Tracked objects:
   363 ;;		On entry : 0/0
   364 ;;		On exit  : 0/0
   365 ;;		Unchanged: 0/0
   366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   367 ;;      Params:         2       0       0       0       0
   368 ;;      Locals:         1       0       0       0       0
   369 ;;      Temps:          0       0       0       0       0
   370 ;;      Totals:         3       0       0       0       0
   371 ;;Total ram usage:        3 bytes
   372 ;; Hardware stack levels used: 1
   373 ;; Hardware stack levels required when called: 1
   374 ;; This function calls:
   375 ;;		_lcd_data
   376 ;; This function is called by:
   377 ;;		_main
   378 ;; This function uses a non-reentrant model
   379 ;;
   380                           
   381     07A0                     _lcd_string:	
   382                           ;psect for function _lcd_string
   383                           
   384     07A0                     l615:	
   385                           ;incstack = 0
   386                           ; Regs used in _lcd_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   387                           
   388                           
   389                           ;codigolcd.c: 37:     lcd_command(0x06);;codigolcd.c: 38:     lcd_command(0x0C);;codigol
      +                          cd.c: 39:     lcd_command(0x01);;codigolcd.c: 40: }
   390     07A0  01F5               	clrf	lcd_string@i
   391     07A1  2FB1               	goto	l621
   392     07A2                     l617:
   393                           
   394                           ;codigolcd.c: 41: ;codigolcd.c: 42: void main(void)
   395     07A2  0875               	movf	lcd_string@i,w
   396     07A3  0773               	addwf	lcd_string@str,w
   397     07A4  0084               	movwf	4
   398     07A5  120A  118A  2003  120A  118A  	fcall	stringdir
   399     07AA  120A  118A  278C  120A  118A  	fcall	_lcd_data
   400     07AF                     l619:
   401                           
   402                           ;codigolcd.c: 44:     TRISE = 0x00;
   403     07AF  3001               	movlw	1
   404     07B0  07F5               	addwf	lcd_string@i,f
   405     07B1                     l621:
   406     07B1  0874               	movf	lcd_string@num,w
   407     07B2  0275               	subwf	lcd_string@i,w
   408     07B3  1C03               	skipc
   409     07B4  2FB6               	goto	u21
   410     07B5  2FB7               	goto	u20
   411     07B6                     u21:
   412     07B6  2FA2               	goto	l617
   413     07B7                     u20:
   414     07B7                     l22:
   415     07B7  0008               	return
   416     07B8                     __end_of_lcd_string:
   417                           
   418                           	psect	text2
   419     078C                     __ptext2:	
   420 ;; *************** function _lcd_data *****************
   421 ;; Defined at:
   422 ;;		line 17 in file "codigolcd.c"
   423 ;; Parameters:    Size  Location     Type
   424 ;;  data            1    wreg     unsigned char 
   425 ;; Auto vars:     Size  Location     Type
   426 ;;  data            1    2[COMMON] unsigned char 
   427 ;; Return value:  Size  Location     Type
   428 ;;                  1    wreg      void 
   429 ;; Registers used:
   430 ;;		wreg
   431 ;; Tracked objects:
   432 ;;		On entry : 0/0
   433 ;;		On exit  : 0/0
   434 ;;		Unchanged: 0/0
   435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   436 ;;      Params:         0       0       0       0       0
   437 ;;      Locals:         1       0       0       0       0
   438 ;;      Temps:          2       0       0       0       0
   439 ;;      Totals:         3       0       0       0       0
   440 ;;Total ram usage:        3 bytes
   441 ;; Hardware stack levels used: 1
   442 ;; This function calls:
   443 ;;		Nothing
   444 ;; This function is called by:
   445 ;;		_lcd_string
   446 ;; This function uses a non-reentrant model
   447 ;;
   448                           
   449     078C                     _lcd_data:	
   450                           ;psect for function _lcd_data
   451                           
   452                           
   453                           ;incstack = 0
   454                           ; Regs used in _lcd_data: [wreg]
   455                           ;lcd_data@data stored from wreg
   456     078C  00F2               	movwf	lcd_data@data
   457     078D                     l577:
   458                           
   459                           ;codigolcd.c: 17:     PORTEbits.RE0 = 0;;codigolcd.c: 18: ;codigolcd.c: 19:     PORTEbit
      +                          s.RE1 = 1;
   460     078D  0872               	movf	lcd_data@data,w
   461     078E  1283               	bcf	3,5	;RP0=0, select bank0
   462     078F  1303               	bcf	3,6	;RP1=0, select bank0
   463     0790  0088               	movwf	8	;volatile
   464     0791                     l579:
   465                           
   466                           ;codigolcd.c: 20:     _delay((unsigned long)((5)*(20000000/4000.0)));
   467     0791  1409               	bsf	9,0	;volatile
   468     0792                     l581:
   469                           
   470                           ;codigolcd.c: 22: }
   471     0792  1489               	bsf	9,1	;volatile
   472                           
   473                           ;codigolcd.c: 23: 
   474     0793  3021               	movlw	33
   475     0794  00F1               	movwf	??_lcd_data+1
   476     0795  3076               	movlw	118
   477     0796  00F0               	movwf	??_lcd_data
   478     0797                     u37:
   479     0797  0BF0               	decfsz	??_lcd_data,f
   480     0798  2F97               	goto	u37
   481     0799  0BF1               	decfsz	??_lcd_data+1,f
   482     079A  2F97               	goto	u37
   483     079B  0000               	nop
   484     079C                     l583:
   485                           
   486                           ;codigolcd.c: 24: void lcd_string(const unsigned char *str,unsigned char num)
   487     079C  1283               	bcf	3,5	;RP0=0, select bank0
   488     079D  1303               	bcf	3,6	;RP1=0, select bank0
   489     079E  1089               	bcf	9,1	;volatile
   490     079F                     l13:
   491     079F  0008               	return
   492     07A0                     __end_of_lcd_data:
   493                           
   494                           	psect	text3
   495     07B8                     __ptext3:	
   496 ;; *************** function _lcd_initialise *****************
   497 ;; Defined at:
   498 ;;		line 47 in file "codigolcd.c"
   499 ;; Parameters:    Size  Location     Type
   500 ;;		None
   501 ;; Auto vars:     Size  Location     Type
   502 ;;		None
   503 ;; Return value:  Size  Location     Type
   504 ;;                  1    wreg      void 
   505 ;; Registers used:
   506 ;;		wreg, status,2, status,0, pclath, cstack
   507 ;; Tracked objects:
   508 ;;		On entry : 0/0
   509 ;;		On exit  : 0/0
   510 ;;		Unchanged: 0/0
   511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   512 ;;      Params:         0       0       0       0       0
   513 ;;      Locals:         0       0       0       0       0
   514 ;;      Temps:          0       0       0       0       0
   515 ;;      Totals:         0       0       0       0       0
   516 ;;Total ram usage:        0 bytes
   517 ;; Hardware stack levels used: 1
   518 ;; Hardware stack levels required when called: 1
   519 ;; This function calls:
   520 ;;		_lcd_command
   521 ;; This function is called by:
   522 ;;		_main
   523 ;; This function uses a non-reentrant model
   524 ;;
   525                           
   526     07B8                     _lcd_initialise:	
   527                           ;psect for function _lcd_initialise
   528                           
   529     07B8                     l601:	
   530                           ;incstack = 0
   531                           ; Regs used in _lcd_initialise: [wreg+status,2+status,0+pclath+cstack]
   532                           
   533                           
   534                           ;codigolcd.c: 49:         lcd_command(0x80);
   535     07B8  3038               	movlw	56
   536     07B9  120A  118A  2778  120A  118A  	fcall	_lcd_command
   537                           
   538                           ;codigolcd.c: 50:         lcd_string("NOME",4);
   539     07BE  3006               	movlw	6
   540     07BF  120A  118A  2778  120A  118A  	fcall	_lcd_command
   541                           
   542                           ;codigolcd.c: 51:         lcd_command(0xC0);
   543     07C4  300C               	movlw	12
   544     07C5  120A  118A  2778  120A  118A  	fcall	_lcd_command
   545                           
   546                           ;codigolcd.c: 52:         lcd_string("MATRICULA",9);
   547     07CA  3001               	movlw	1
   548     07CB  120A  118A  2778  120A  118A  	fcall	_lcd_command
   549     07D0                     l25:
   550     07D0  0008               	return
   551     07D1                     __end_of_lcd_initialise:
   552                           
   553                           	psect	text4
   554     0778                     __ptext4:	
   555 ;; *************** function _lcd_command *****************
   556 ;; Defined at:
   557 ;;		line 27 in file "codigolcd.c"
   558 ;; Parameters:    Size  Location     Type
   559 ;;  cmd             1    wreg     unsigned char 
   560 ;; Auto vars:     Size  Location     Type
   561 ;;  cmd             1    2[COMMON] unsigned char 
   562 ;; Return value:  Size  Location     Type
   563 ;;                  1    wreg      void 
   564 ;; Registers used:
   565 ;;		wreg
   566 ;; Tracked objects:
   567 ;;		On entry : 0/0
   568 ;;		On exit  : 0/0
   569 ;;		Unchanged: 0/0
   570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   571 ;;      Params:         0       0       0       0       0
   572 ;;      Locals:         1       0       0       0       0
   573 ;;      Temps:          2       0       0       0       0
   574 ;;      Totals:         3       0       0       0       0
   575 ;;Total ram usage:        3 bytes
   576 ;; Hardware stack levels used: 1
   577 ;; This function calls:
   578 ;;		Nothing
   579 ;; This function is called by:
   580 ;;		_lcd_initialise
   581 ;;		_main
   582 ;; This function uses a non-reentrant model
   583 ;;
   584                           
   585     0778                     _lcd_command:	
   586                           ;psect for function _lcd_command
   587                           
   588                           
   589                           ;incstack = 0
   590                           ; Regs used in _lcd_command: [wreg]
   591                           ;lcd_command@cmd stored from wreg
   592     0778  00F2               	movwf	lcd_command@cmd
   593     0779                     l585:
   594                           
   595                           ;codigolcd.c: 27:     for(i=0;i<num;i++);codigolcd.c: 28:     {;codigolcd.c: 29:       l
      +                          cd_data(str[i]);
   596     0779  0872               	movf	lcd_command@cmd,w
   597     077A  1283               	bcf	3,5	;RP0=0, select bank0
   598     077B  1303               	bcf	3,6	;RP1=0, select bank0
   599     077C  0088               	movwf	8	;volatile
   600     077D                     l587:
   601                           
   602                           ;codigolcd.c: 30: 
   603     077D  1009               	bcf	9,0	;volatile
   604     077E                     l589:
   605                           
   606                           ;codigolcd.c: 32: }
   607     077E  1489               	bsf	9,1	;volatile
   608                           
   609                           ;codigolcd.c: 33: 
   610     077F  3021               	movlw	33
   611     0780  00F1               	movwf	??_lcd_command+1
   612     0781  3076               	movlw	118
   613     0782  00F0               	movwf	??_lcd_command
   614     0783                     u47:
   615     0783  0BF0               	decfsz	??_lcd_command,f
   616     0784  2F83               	goto	u47
   617     0785  0BF1               	decfsz	??_lcd_command+1,f
   618     0786  2F83               	goto	u47
   619     0787  0000               	nop
   620     0788                     l591:
   621                           
   622                           ;codigolcd.c: 34: void lcd_initialise()
   623     0788  1283               	bcf	3,5	;RP0=0, select bank0
   624     0789  1303               	bcf	3,6	;RP1=0, select bank0
   625     078A  1089               	bcf	9,1	;volatile
   626     078B                     l16:
   627     078B  0008               	return
   628     078C                     __end_of_lcd_command:
   629     0002                     ___latbits      equ	2
   630     007E                     btemp           set	126	;btemp
   631     007E                     wtemp0          set	126
   632                           
   633                           	psect	config
   634                           
   635                           ;Config register CONFIG @ 0x2007
   636                           ;	Oscillator Selection bits
   637                           ;	FOSC = HS, HS oscillator
   638                           ;	Watchdog Timer Enable bit
   639                           ;	WDTE = OFF, WDT disabled
   640                           ;	Power-up Timer Enable bit
   641                           ;	PWRTE = OFF, PWRT disabled
   642                           ;	FLASH Program Memory Code Protection bits
   643                           ;	CP = OFF, Code protection off
   644                           ;	Brown-out Reset Enable bit
   645                           ;	BOREN = OFF, BOR disabled
   646                           ;	Low Voltage In-Circuit Serial Programming Enable bit
   647                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   648                           ;	Data EE Memory Code Protection
   649                           ;	CPD = OFF, Code Protection off
   650                           ;	FLASH Program Memory Write Enable
   651                           ;	WRT = OFF, Unprotected program memory may not be written to by EECON control
   652                           ;	In-Circuit Debugger Mode bit
   653                           ;	DEBUG = 0x1, unprogrammed default
   654     2007                     	org	8199
   655     2007  3DBA               	dw	15802

Data Sizes:
    Strings     15
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_string@str	PTR const unsigned char  size(1) Largest target is 10
		 -> STR_1(CODE[5]), STR_2(CODE[10]), 


Critical Paths under _main in COMMON

    _main->_lcd_string
    _lcd_string->_lcd_data
    _lcd_initialise->_lcd_command

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     139
                        _lcd_command
                     _lcd_initialise
                         _lcd_string
 ---------------------------------------------------------------------------------
 (1) _lcd_string                                           3     1      2     109
                                              3 COMMON     3     1      2
                           _lcd_data
 ---------------------------------------------------------------------------------
 (2) _lcd_data                                             3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _lcd_initialise                                       0     0      0      15
                        _lcd_command
 ---------------------------------------------------------------------------------
 (2) _lcd_command                                          3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_command
   _lcd_initialise
     _lcd_command
   _lcd_string
     _lcd_data

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14      6       6     42.9%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK3               96      0       0      0.0%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       6      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Mon Nov 18 15:06:19 2024

                      pc 0002             lcd_data@data 0072                       l13 079F  
                     l22 07B7                       l16 078B                       l25 07D0  
                     u20 07B7                       u21 07B6                       u37 0797  
                     u47 0783                       fsr 0004                      l601 07B8  
                    l621 07B1                      l615 07A0                      l631 07E9  
                    l623 07D1                      l617 07A2                      l633 07EF  
                    l625 07D5                      l619 07AF                      l627 07DA  
                    l581 0792                      l629 07E0                      l591 0788  
                    l583 079C                      l585 0779                      l577 078D  
                    l587 077D                      l579 0791                      l589 077E  
                    fsr0 0004                     STR_1 0013                     STR_2 0009  
                   _main 07D1                     btemp 007E                     start 0000  
            lcd_string@i 0075                    ?_main 0070                    _PORTD 0008  
                  _TRISD 0088                    _TRISE 0089                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07FC  
           __end_of_main 07FC                   ??_main 0076           lcd_command@cmd 0072  
       __end_of_lcd_data 07A0         ??_lcd_initialise 0073            lcd_string@num 0074  
          lcd_string@str 0073  __end_of__initialization 07FC           __pcstackCOMMON 0070  
             __pmaintext 07D1                ?_lcd_data 0070               _lcd_string 07A0  
             __stringtab 0003                  __ptext1 07A0                  __ptext2 078C  
                __ptext3 07B8                  __ptext4 0778               ??_lcd_data 0070  
   end_of_initialization 07FC                _PORTEbits 0009              ?_lcd_string 0073  
          ??_lcd_command 0070      start_initialization 07FC      __end_of_lcd_command 078C  
              ___latbits 0002                __pstrings 0003              _lcd_command 0778  
            __stringbase 0008             ??_lcd_string 0075       __end_of_lcd_string 07B8  
     __end_of__stringtab 0009                 _lcd_data 078C           _lcd_initialise 07B8  
 __end_of_lcd_initialise 07D1                stringcode 0003                 stringdir 0003  
               stringtab 0003          ?_lcd_initialise 0070             ?_lcd_command 0070  
